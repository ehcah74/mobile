kiosk_mode:
  non_admin_settings:
    hide_header: true
    hide_sidebar: true
    hide_menubutton: true
    ignore_entity_settings: true
  entity_settings:
    - entity:
        input_boolean.kiosk_mode: 'on'
      hide_header: true
      hide_sidebar: true
    - entity:
        input_boolean.kiosk_mode: 'off'
      hide_header: false
      hide_sidebar: false
decluttering_templates:
  stars_homePage:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:nth-child(n+1): 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 0px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_home_page_leaders
      sort_by: events
      columns:
        - name: ''
          data: filtered_plays
          modify: >-
            var stackedHP = '';  

            var stacked1 = '';   if (typeof x.team1.logos[0].href !==
            'undefined') {
              stacked1 = '<div style="font-weight:normal;display:flex;justify-content:center;align-items:center;">' +
                              '<img src="' + x.team1.logos[0].href + '" style="height:150px; vertical-align:middle;margin:0px 0px 5px 0px;">' +
                              '</div>';
            } 

            var stacked2 = '';   if (typeof x.team1.displayName !== 'undefined')
            {
              let wildcardText = '';
              if (x.team1.record.items[0].stats[8].value === 7) {
                wildcardText = '<div style="font-weight:normal;font-size:16px;text-align:center;color:white;margin:2.5px;">1st in Wildcard</div>';
              } else if (x.team1.record.items[0].stats[8].value === 8) {
                wildcardText = '<div style="font-weight:normal;font-size:16px;text-align:center;color:white;margin:2.5px;">2nd in Wildcard</div>';
              } else {
                wildcardText = '<div style="font-weight:normal;font-size:16px;text-align:center;color:white;margin:2.5px;">' + x.team1.standingSummary + '</div>';
              }

              stacked2 = '<div style="font-weight:bold;font-size:18px;text-align:center;color:white;margin:5px;">' + 
                           'Dallas Stars (' + x.team1.record.items[0].summary + ')' + 
                         '</div>' + 
                         wildcardText +
                         '<div style="height:10px; display:inline-block; background:transparent;"></div>';
            }

            var stacked3 = '';   if (typeof x.date !== 'undefined') {
              const dateUTC = new Date(x.date);
              const offsetInMilliseconds = 0 * 60 * 60 * 1000;
              const astDate = new Date(dateUTC.getTime() + offsetInMilliseconds);
              const weekdays = ["Sun", "Mon", "Tues", "Wed", "Thurs", "Fri", "Sat"];
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const weekday = weekdays[astDate.getDay()];
              const month = months[astDate.getMonth()];
              const day = astDate.getDate();
              const year = astDate.getFullYear();
              const formattedDate = `${weekday}, ${month} ${day}, ${year}`;
              const hours = astDate.getHours();
              const minutes = String(astDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;

              stacked3 =
                '<div style="display:flex;align-items:center;font-weight:normal;font-size:15px;color:white;margin-top:5px;margin-bottom:10px;">' +
                  '<div style="width:100%;text-align:center;color:#20864c;">' +
                    '<div>Upcoming Game</div>' +
                    '<div style="font-size:18px;font-weight:bold;color:white;margin:5px 0px;">' + x.awayTeam + ' at ' + x.homeTeam + '</div>' +
                    '<div style="font-size:15px;font-weight:bold;margin:5px 0px;">' + formattedDate + '&nbsp;' +' at ' + '&nbsp;' + formattedTime + '</div>' +           
                  '</div>' +
                '</div>';
            }

            var stacked3a = ''; let broadcastNames = []; if (x.broadcast1) {
                if (['ESPN+', 'Victory+'].includes(x.broadcast1)) {
                    broadcastNames.push(x.broadcast1);
                }
            } if (x.broadcast2) {
                if (['ESPN+', 'Victory+'].includes(x.broadcast2)) {
                    broadcastNames.push(x.broadcast2);
                }
            } if (x.broadcast3) {
                if (['ESPN+', 'Victory+'].includes(x.broadcast3)) {
                    broadcastNames.push(x.broadcast3);
                }
            } broadcastNames = broadcastNames.slice(0, 2);

            if (broadcastNames.length > 0) {
                stacked3a = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:10px;margin-bottom:10px;color:white;">' +
                                    broadcastNames.join(', ') + '</div>';
            } else {
                stacked3a = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:10px;margin-bottom:10px;color:white;">' + x.broadcast1 + ', ' + x.broadcast2 + '</div>';
            }

            var stacked4 = '';   if (typeof x.team1.record.items[0].summary !==
            'undefined') {
              stacked4 = '<div style="display:flex;align-items:center;font-weight:bold;font-size:18px;color:#20864c;margin:25px 0px 15px 0px;">' +
                           '<div style="width:20%;"></div>' +
                           '<div style="width:70%;text-align:center;">' +
                             '<span>Team Statistics</span>' +
                           '</div>' +
                           '<div style="width:20%;"></div>' +
                         '</div>';
            }

            function createStackedDiv(title, value, options = {}) {
                const {
                    width = "20%",
                    fontSize = "15px",
                    color = "white",
                    paddingLeft = "10px",
                    paddingRight = "10px",
                    justifyContent = "space-between",
                    isBold = false,
                    round = null, 
                } = options;

                if (typeof value === "undefined") return "";
                const displayValue = round !== null && typeof value === "number" ? value.toFixed(round) : value;
                const formattedValue = isBold
                    ? '<div style="font-weight:bold;font-size:' + fontSize + ';color:' + color + ';text-align:right;padding-right:' + paddingRight + ';">' + displayValue + '</div>'
                    : '<div style="font-weight:normal;font-size:' + fontSize + ';color:' + color + ';text-align:right;padding-right:' + paddingRight + ';">' + displayValue + '</div>';

                return '<div style="display:flex;align-items:center;font-weight:normal;font-size:' + fontSize + ';color:' + color + ';margin:0px;">' +
                       '<div style="width:' + width + ';"></div>' +
                       '<div style="width:70%;display:flex;justify-content:' + justifyContent + ';padding-left:' + paddingLeft + ';color:' + color + ';">' +
                       '<span>' + title + ':</span>' +
                       formattedValue +
                       '</div>' +
                       '<div style="width:' + width + ';"></div>' +
                       '</div>';
            }

            var stacked5 = createStackedDiv("Goals For",
            x.team1.record.items[0].stats[12]?.value);  var stacked5a =
            createStackedDiv("Goals For Average",
            x.team1.record.items[0].stats[3]?.value?.toFixed(2), { fontSize:
            "14px", color: "silver", paddingLeft: "20px" });  var stacked5b =
            createStackedDiv("Shots For Average",
            x.team2[0]?.statistics[6]?.displayValue, { fontSize: "14px", color:
            "silver", paddingLeft: "20px" });  var stacked6 =
            createStackedDiv("Goals Against",
            x.team1.record.items[0].stats[11]?.value);  var stacked6a =
            createStackedDiv("Goals Against Average",
            x.team1.record.items[0].stats[2]?.value?.toFixed(2), { fontSize:
            "14px", color: "silver", paddingLeft: "20px" });  var stacked6b =
            createStackedDiv("Shots Against Average",
            x.team2[0]?.statistics[1]?.displayValue, { fontSize: "14px", color:
            "silver", paddingLeft: "20px" });  var stacked9 =
            createStackedDiv("Power Play Opportunities",
            x.team1.record.items[0].stats[23]?.value);  var stacked10 =
            createStackedDiv("Power Play Goals",
            x.team1.record.items[0].stats[21]?.value);  var stacked11 =
            createStackedDiv("Power Play Percentage",
            x.team1.record.items[0].stats[24].value?.toFixed(2), { fontSize:
            "14px", color: "silver", paddingLeft: "20px" });  var stacked12 =
            createStackedDiv("Penalty Minutes",
            x.team2[0]?.statistics[10]?.displayValue);  var stacked12a =
            createStackedDiv("Times Short Handed",
            x.team1.record.items[0].stats[29]?.value);  var stacked12b =
            createStackedDiv("Short Handed Goals",
            x.team2[0]?.statistics[1]?.displayValue);  var stacked13 =
            createStackedDiv("Power Play Goals Against",
            x.team1.record.items[0].stats[22]?.value);  var stacked14 =
            createStackedDiv("Penalty Kill Percentage",
            x.team1.record.items[0].stats[19]?.value?.toFixed(2), { fontSize:
            "14px", color: "silver", paddingLeft: "20px", round: 2, });  var
            stacked15 = '';   if (typeof x.team1.record.items[0].summary !==
            'undefined') {
              stacked15 = '<div style="display:flex;align-items:center;font-weight:bold;font-size:18px;color:#20864c;margin:25px 0px 15px;">' +
                           '<div style="width:20%;"></div>' +
                           '<div style="width:70%;text-align:center;">' +
                             '<span>Game Statisctics</span>' +
                           '</div>' +
                           '<div style="width:20%;"></div>' +
                         '</div>';
            }  var stacked16 = createStackedDiv("Games Played",
            x.team1.record.items[0].stats[6]?.value);  var stacked17 =
            createStackedDiv("Points",
            x.team1.record.items[0].stats[10]?.value); var stacked18 =
            createStackedDiv("Streak",
            x.team1.record.items[0].stats[13]?.value);  var stacked19 =
            createStackedDiv("Wins", x.team1.record.items[0].stats[16]?.value);
            var stacked20 = createStackedDiv("Win Percentage",
            x.team1.record.items[0].stats[15]?.value?.toFixed(2), { fontSize:
            "14px", color: "silver", paddingLeft: "20px", round: 2, }); var
            stacked21 = createStackedDiv("Losses",
            x.team1.record.items[0].stats[7]?.value); var stacked22 =
            createStackedDiv("OT Wins",
            x.team1.record.items[0].stats[1]?.value);  var stacked23 =
            createStackedDiv("OT Losses",
            x.team1.record.items[0].stats[0]?.value);  var stacked24 =
            createStackedDiv("Shootout Wins",
            x.team1.record.items[0].stats[28]?.value);  var stacked25 =
            createStackedDiv("Shootout Losses",
            x.team1.record.items[0].stats[27]?.value);

            var stackedHeading1 = '<div
            style="height:20px;font-size:18px;font-weight:bold;text-align:center;margin:20px
            0px 10px 0px;color:#20864c;">Team Leaders</div>' +
                                  '</div>';

            function createStackedPlayerCard({
                title,
                leader,
                stats = [],
                titleStyle = "height:20px;font-size:16px;font-weight:bold;text-align:center;margin:5px 0px 7.5px 0px;color:silver;",
                imageSize = "30px",
                nameFontSize = "15px",
                nameColor = "white",
                positionFontSize = "14px",
                positionColor = "#20864c",
                statsFontSize = "12px",
                statsColor = "white",
                containerWidth = "50%",
                includePositionCode = true,
                includeTitle = true,
            }) {
                if (
                    !leader.headshot ||
                    !leader.firstName?.default ||
                    !leader.lastName?.default ||
                    stats.some(stat => !leader[stat.key])
                ) {
                    return "";
                }

                const titleHtml = includeTitle
                    ? '<div style="' + titleStyle + '">' + title + '</div>'
                    : "";

                const positionCodeSpan = includePositionCode && leader.positionCode
                    ? '<span style="margin-left:5px;font-size:' + positionFontSize + ';font-weight:normal;color:' + positionColor + ';">' + leader.positionCode + '</span>'
                    : "";

                const statsHtml = stats
                    .map(function(stat) {
                        if (stat.key === "avgTimeOnIcePerGame") {

                            const totalMinutes = leader[stat.key];
                            const minutes = Math.floor(totalMinutes / 60);
                            const seconds = Math.floor(totalMinutes % 60);
                            const formattedTime = minutes + ":" + (seconds < 10 ? "0" : "") + seconds;
                            return '<span style="font-weight:bold;color:' + statsColor + ';">&nbsp;' +
                                formattedTime +
                                '</span> ' + stat.label;
                        } else {
                            return '<span style="font-weight:bold;color:' + statsColor + ';">&nbsp;' +
                                (stat.round ? leader[stat.key].toFixed(stat.round) : leader[stat.key]) +
                                '</span> ' + stat.label;
                        }
                    })
                    .join(", ");

                return '<div style="width:' + containerWidth + ';text-align:center;">' +
                           titleHtml +
                           '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' +
                               '<img src="' + leader.headshot + '" style="height:' + imageSize + ';vertical-align:middle;">' +
                               '<span style="font-size:' + nameFontSize + ';font-weight:normal;margin-left:5px;color:' + nameColor + ';">' +
                                   leader.firstName.default + ' ' + leader.lastName.default +
                                   positionCodeSpan +
                               '</span>' +
                           '</div>' +
                           '<div style="text-align:center; margin-top:5px;margin-bottom:15px;">' + 
                               '<span style="font-weight:normal;font-size:' + statsFontSize + ';color:' + statsColor + ';">' + statsHtml + '</span>' +
                           '</div>' +
                       '</div>';
            }


            var stackedPoints = createStackedPlayerCard({
                title: "Points",
                leader: x.pointsLeader,
                stats: [
                    { key: "points", label: "PTS" },
                    { key: "goals", label: "G" },
                    { key: "assists", label: "A" },
                ],
            });

            var stackedGoals = createStackedPlayerCard({
                title: "Goals",
                leader: x.goalsLeader,
                stats: [
                    { key: "goals", label: "G" },
                    { key: "powerPlayGoals", label: "PPG" },
                    { key: "gameWinningGoals", label: "GWG" },
                ],
            });

            var stackedAssists = createStackedPlayerCard({
                title: "Assists",
                leader: x.assistsLeader,
                stats: [
                    { key: "assists", label: "A" },
                    { key: "goals", label: "G" },
                    { key: "points", label: "PTS" },
                ],
            });

            var stackedPlusMinus = createStackedPlayerCard({
                title: "Plus Minus",
                leader: x.plusMinusLeader,
                stats: [
                    { key: "plusMinus", label: "+/-" },
                    { key: "points", label: "PTS" },
                    { key: "gamesPlayed", label: "GP" },
                ],
            });

            var stackedTime = createStackedPlayerCard({
                title: "Ice Time",
                leader: x.iceTimeLeader,
                stats: [
                    { key: "avgTimeOnIcePerGame", label: "TOI/G", round: 2 },
                    { key: "avgShiftsPerGame", label: "SHFT/G", round: 2 },
                    { key: "plusMinus", label: "+/-" },
                ],
            });

            var stackedPIM = createStackedPlayerCard({
                title: "Penalty Minutes",
                leader: x.penaltyMinutesLeader,
                stats: [
                    { key: "penaltyMinutes", label: "PIM" },
                    { key: "shots", label: "S" },
                    { key: "faceoffWinPctg", label: "FO%", round: 2 },
                ],
            });

            var stackedHeading2 = '<div
            style="height:20px;font-size:18px;font-weight:bold;text-align:center;margin:20px
            0px 10px 0px;color:#20864c;">Goaltending</div>' +
                                  '</div>';

            var stackedGoalie1 = createStackedPlayerCard({
                title: '',
                leader: x.goalieMostGamesPlayed,
                stats: [
                    { key: "wins", label: "W" },
                    { key: "losses", label: "L" },
                    { key: "goalsAgainstAverage", label: "GAA", round: 2 },
                    { key: "savePercentage", label: "SV%", round: 2 },
                ],
                includePositionCode: false,
                includeTitle: false,
            });

            var stackedGoalie2 = createStackedPlayerCard({
                title: '',
                leader: x.goalieFewestGamesPlayed,
                stats: [
                    { key: "wins", label: "W" },
                    { key: "losses", label: "L" },
                    { key: "goalsAgainstAverage", label: "GAA", round: 2 },
                    { key: "savePercentage", label: "SV%", round: 2 },
                ],
                includePositionCode: false,
                includeTitle: false,
            });

            var stackedHeading3 = '<div
            style="height:20px;font-size:18px;font-weight:bold;text-align:center;margin:20px
            0px 20px 0px;color:#20864c;">Injuries</div>' +
                                  '</div>';

            var stackedInjuries = ''; var injuries = [x.injured1, x.injured2,
            x.injured3];

            injuries.forEach(function(injury) {
                if (typeof injury.date === 'undefined') {
                    console.log("Skipping injury with no date:", injury);
                    return;
                }

                const dateUTC = new Date(injury.date);
                const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
                const currentDate = new Date();
                const sevenDaysAgo = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);

                if (localDate < sevenDaysAgo) {
                    console.log("Skipping injury older than 7 days:", injury);
                    return;
                }

                const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                const month = months[localDate.getMonth()];
                const day = String(localDate.getDate()).padStart(2, '0');
                const year = localDate.getFullYear();
                const hours = localDate.getHours();
                const minutes = String(localDate.getMinutes()).padStart(2, '0');
                const ampm = hours >= 12 ? 'pm' : 'am';
                const formattedDate = `${month} ${day}, ${year}`;
                const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;

                var stackedLastUpdate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:10px 0px 10px 0px;">Last Update: 
                                          <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin:5px 0px 20px 0;">
                                          ${formattedDate} - ${formattedTime}</span></div>`;

                var stackedPlayer = '';
                if (typeof injury.athlete !== 'undefined' && injury.athlete.links &&
                    injury.athlete.links[0] && injury.athlete.headshot) {

                    stackedPlayer = '<div style="display:flex;align-items:center;justify-content:flex-start;margin:10px 0px 10px 2px;">' + 
                                      '<a href="' + injury.athlete.links[0].href + '" target="_blank" style="display:flex;align-items:center;">' +
                                      '<img src="' + injury.athlete.headshot.href + '" style="height:30px;">' +
                                      '</a>' +
                                      '<span style="font-size:15px;font-weight:normal;margin-left:5px;color:white;display:flex;align-items:center;">' +
                                      injury.athlete.displayName + 
                                      '<span style="font-weight:normal;margin-left:5px;color:#20864c;">' + injury.athlete.position.abbreviation + '</span>' +
                                      '</span>' +
                                    '</div>';
                }

                var stackedStatus = '';
                if (typeof injury.status !== 'undefined') {
                    stackedStatus = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:15px 0px 10px 0px;">Status: ' +
                                    '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + injury.status + '</span></div>';
                }

                var stackedShort = '';
                if (typeof injury.shortComment !== 'undefined') {
                    stackedShort = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:10px 0px 10px 0px;">Short: ' +
                                    '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + injury.shortComment + '</span></div>';
                }

                var stackedReturnDate = '';
                if (typeof injury.details !== 'undefined' && typeof injury.details.returnDate !== 'undefined') {
                    const returnDateUTC = new Date(injury.details.returnDate);
                    const returnLocalDate = new Date(returnDateUTC.getTime() - returnDateUTC.getTimezoneOffset() * 60000);
                    const returnMonth = String(returnLocalDate.getMonth() + 1).padStart(2, '0');
                    const returnDay = String(returnLocalDate.getDate()).padStart(2, '0');
                    const returnYear = returnLocalDate.getFullYear();
                    const formattedReturnDate = `${returnMonth}/${returnDay}/${returnYear}`;
                    stackedReturnDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:10px 0px 20px 0px;">Return Date: 
                                        <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin:5px 0px 20px 0;">
                                        ${formattedReturnDate}</span></div>`;
                }

                stackedInjuries += stackedPlayer + stackedStatus + stackedShort + stackedLastUpdate + stackedReturnDate;
            });

            var stackedHeading4 = '<div
            style="height:20px;font-size:18px;font-weight:bold;text-align:center;margin:20px
            0px 20px 0px;color:#20864c;">Transactions</div>' +
                                  '</div>';

            var stackedTransactions = '';  for (var i = 0; i <
            Math.min(x.transactions.length, 3); i++) {
              var transaction = x.transactions[i];

              var stackedDate = '';               
              if (typeof transaction.date !== 'undefined') {
                const dateUTC = new Date(transaction.date);
                if (isNaN(dateUTC)) {
                  console.error("Invalid date format:", transaction.date);
                } else {
                  const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
                  const currentDate = new Date();
                  const sevenDaysAgo = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);
                  if (localDate >= sevenDaysAgo) {
                    const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                    const month = months[localDate.getMonth()];
                    const day = String(localDate.getDate()).padStart(2, '0');
                    const year = localDate.getFullYear();
                    const hours = localDate.getHours();
                    const minutes = String(localDate.getMinutes()).padStart(2, '0');
                    const ampm = hours >= 12 ? 'pm' : 'am';
                    const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
                    const formattedDate = `${month} ${day}, ${year}`;
              
                    stackedDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:10px 0px 5px 0px;">Date: 
                                    <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin:5px 0px 20px 0;">
                                    ${formattedDate} - ${formattedTime}</span></div>`;
                  }
                }
              }

              var stackedDescription = ''; 
              if (typeof transaction.description !== 'undefined') {
                stackedDescription = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:5px 0px 20px 0px;">Description: ' +
                                      '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:white;">' + transaction.description + '</span></div>';
              }

              if (stackedDate) {
                stackedTransactions += stackedDate + stackedDescription;
              }
            }

            stackedHP = stacked1 + stacked2 + stacked3 + stacked3a +

            '<div style="justify-content:center;align-items:flex-start;
            margin:20px 0px;border-top:20px solid rgba(105, 105, 105, .25);">' +
            '</div>' +            

            stacked4 + stacked5 + stacked5a + stacked5b + stacked6 + stacked6a +
            stacked6b + stacked9 + stacked10 + stacked11 + stacked12 +
            stacked12a + stacked12b + stacked13 + stacked14 + stacked15 +
            stacked16 + stacked17 + stacked18 + stacked19 + stacked20 +
            stacked21 + stacked22 + stacked23 + stacked24 + stacked25 +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;
            margin:20px 0px;border-top:20px solid rgba(105, 105, 105, .25);">' +
            '</div>' +

            stackedHeading1 +  '</div>' +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;">'
            + stackedPoints + stackedGoals +  '</div>' +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;">'
            + stackedAssists + stackedPlusMinus +  '</div>' +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;">'
            + stackedTime + stackedPIM +                     '</div>' +

                  
            stackedHeading2 +  '</div>' +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;">'
            + stackedGoalie1 + stackedGoalie2 +  '</div>' +
                          
            '<div
            style="display:flex;justify-content:center;align-items:flex-start;
            margin:20px 0px;border-top:20px solid rgba(105, 105, 105, .25);">' +
            '</div>' +

            stackedHeading3 + stackedInjuries +

            '<div
            style="display:flex;justify-content:center;align-items:flex-start;
            margin:20px 0px;border-top:20px solid rgba(105, 105, 105, .25);">' +
            '</div>' +

            stackedHeading4 + stackedTransactions;
  stars_schedule:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 60px;'
        tbody tr td:nth-child(2): 'width: 250px;'
        tbody tr td:nth-child(3): 'width: 60px;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 0px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include:
          - sensor.dallas_stars_regular_season_schedule
      sort_by: entries
      columns:
        - name: ''
          data: sports
          modify: |-
            var stackedRows = '';
            if (x.leagues[0].events && x.leagues[0].events.length > 0) {
                x.leagues[0].events.forEach(function(event) {

                    let dateHTML = '';
                    if (event.date) {
                        const dateUTC = new Date(event.date);
                        const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
                        const month = localDate.getMonth() + 1;
                        const day = localDate.getDate();
                        const year = String(localDate.getFullYear()).slice(-2);
                        const formattedDate = `${month}-${day}-${year}`;


                        dateHTML = '<div style="font-weight:normal;text-align:center;color:white;"><a href="' + (event.links?.[0]?.href || '#') +
                                     '" target="_blank" style="text-decoration:none;color:white;">' + formattedDate + '</a></div>';

                        if (event.fullStatus?.type?.detail) {
                            if (event.fullStatus.type.completed) {
                                dateHTML += '<div style="font-weight:normal;text-align:center;color:white;"><a href="' +
                                            (event.links?.[0]?.href || '#') +
                                            '" target="_blank" style="text-decoration:none;color:white;">Final</a></div>';
                            } else {
                                const timeLocal = dateUTC.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });
                                dateHTML += '<div style="font-weight:normal;font-size:12px;text-align:center;color:white;"><a href="' +
                                            (event.links?.[0]?.href || '#') +
                                            '" target="_blank" style="text-decoration:none;color:white;">' + timeLocal + '</a></div>';
                            }
                        }
                    }

                    let teamsHTML = '';
                    let tvHTML = ''; 

                    event.competitors?.forEach(function(competitor) {
                        const summary = competitor.records?.[0]?.summary?.split(',')[0] || '';
                        const teamLink = competitor.links?.[0]?.href || '';
                        const teamLogo = competitor.logo || '';
                        const teamDisplayName = competitor.displayName || '';
                    
                        let teamInfo = '';
                    
                        if (teamLink && teamLogo) {
                            teamInfo = '<div style="margin:5px 0px; color:white;">' +
                                       '&nbsp;<a href="' + teamLink + '" target="_blank">' +
                                       '<img src="' + teamLogo + '" style="height:30px;vertical-align:middle;"></a>&nbsp;&nbsp;&nbsp;' +
                                       teamDisplayName + (summary ? ' (' + summary + ')' : '') +
                                       '</div>';
                        } else {
                            teamInfo = '<div style="margin:0px; color:white;">' +
                                       teamDisplayName + (summary ? ' (' + summary + ')' : '') +
                                       '</div>';
                        }
                    

                        teamsHTML += '<div class="team-container" style="margin-bottom:0px;">' + teamInfo + '</div>';
                    });
                    
                    if (event.broadcasts?.length > 0) {
                        const filteredBroadcasts = event.broadcasts
                            .filter(broadcast => 
                                broadcast.shortName && 
                                ['ESPN', 'ESPN+', 'Victory+', 'TNT'].includes(broadcast.shortName)
                            )
                            .map(broadcast => broadcast.shortName)
                            .slice(0, 2);
                    
                        if (filteredBroadcasts.length > 0) {
                            tvHTML = '<div style="font-weight:bold;font-size:12px;text-align:left;text-indent:45px;color:white;margin-bottom:10px;">' + filteredBroadcasts.join(', ') + 
                                     '</div>';
                        }
                    }
                    
                    teamsHTML += tvHTML; 
                    




                    stackedRows += '<div style="display:flex;align-items:center;margin-bottom:0px;border-bottom:10px solid rgba(105, 105, 105, 0.2);">' +
                                   '<div style="width:20%;text-align:center;padding-right:10px;">' + dateHTML + '</div>' +
                                   '<div style="width:80%;text-align:left;padding-left:10px;border-left:2.5px solid rgba(105, 105, 105, 0.2);">' + teamsHTML + '</div>' +
                                   '</div>';       
                });
            }
            stackedRows;
                  
  stars_results:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr td:nth-child(2): 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: px!important;
               font-weight: bold!important;
             }
      entities:
        include:
          - sensor.dallas_stars_regular_season_scores
      sort_by: entries
      columns:
        - name: ''
          data: sports
          modify: |-
            var stackedRows = '';

            if (x.leagues[0]?.events?.length > 0) {
                for (let i = x.leagues[0].events.length - 1; i >= 0; i--) {
                    const event = x.leagues[0].events[i];

                    let dateHTML = '';
                    if (event.date) {
                        const dateUTC = new Date(event.date);
                        const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
                        const month = localDate.getMonth() + 1;
                        const day = localDate.getDate();
                        const year = String(localDate.getFullYear()).slice(-2);
                        const formattedDate = `${month}-${day}-${year}`;

                        dateHTML = '<div style="margin:0px 5px 2.5px 5px;font-weight:normal;text-align:center;color:white;"><a href="' + (event.links?.[0]?.href || '#') +
                                     '" target="_blank" style="text-decoration:none;color:white;">' + formattedDate + '</a></div>';

                        if (event.fullStatus?.type?.detail) {
                            if (event.fullStatus.type.completed) {
                                dateHTML += '<div style="margin:2.5px 5px 0px 5px;font-weight:normal;text-align:center;color:white;"><a href="' +
                                            (event.links?.[0]?.href || '#') +
                                            '" target="_blank" style="text-decoration:none;color:white;">' + (event.fullStatus?.type?.detail || '#')  + '</a></div>';
                            }
                        }
                    }

                    let teamsHTML = '';                 
                    event.competitors?.forEach((competitor, competitorIndex) => {
                        const score = competitor.score || '';
                        const summary = competitor.records?.[0]?.summary?.split(',')[0] || '';
                        const teamLink = competitor.links?.[0]?.href || '';
                        const teamLogo = competitor.logo || '';
                        const teamDisplayName = competitor.displayName || '';

                        let color = 'white';
                        if (event.fullStatus?.type?.completed) {
                            const opponentScore = event.competitors?.find((_, idx) => idx !== competitorIndex)?.score || 0;
                            if (score > opponentScore) {
                                color = 'green';
                            } else if (score < opponentScore) {
                                color = 'red';
                            }
                        }

                            if (teamLink && teamLogo) {
                                teamsHTML += '<div style="margin:8px 5px 8px 10px;color:white">' +
                                             '<span style="color:' + color + '; font-size:20px; vertical-align:middle; font-weight:bold;text-decoration:none;">' + score + '</span>&nbsp;&nbsp;' +
                                             '&nbsp;<a href="' + teamLink + '" target="_blank" style="text-decoration:none;">' +
                                             '<img src="' + teamLogo + '" style="height:30px;vertical-align:middle;"></a>&nbsp;&nbsp;&nbsp;' +
                                             teamDisplayName + (summary ? ' (' + summary + ')' : '') +
                                             '</div>';
                            } else {
                                teamsHTML += '<div style="margin:0px;">' +
                                             teamDisplayName + (summary ? ' (' + summary + ')' : '') +
                                             '</div>';
                            }
                        });

                    stackedRows += '<div style="display:flex;align-items:center;margin-bottom:0px;border-bottom:10px solid rgba(105, 105, 105, 0.2);">' +
                                   '<div style="width:20%;text-align:center;margin-left:0px;">' + dateHTML + '</div>' +
                                   '<div style="width:80%;text-align:left;border-left:2.5px solid rgba(105, 105, 105, 0.2);">' + teamsHTML + '</div>' +                                                              
                                   '</div>';       
                }
            }
            stackedRows;
  stars_nextOpponent:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 0px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: header
          modify: >-
            var stackedGame = '';  var stackedGameTime = '';  var
            stackedGameDate = '';   var stackedOpponents = '';   var
            stackedTeamInfo = '';  var stackedStreaming = '';  

            if (typeof x.competitions[0].status.type.detail !== 'undefined') {
              if (x.competitions[0].status.type.completed) {
                stackedGameTime = '<div style="font-weight:bold;font-size:18px;text-align:center;color:white;margin-top:10px;margin-bottom:5px;">' + x.competitions[0].status.type.detail + '</div>';
              } else {
                if (typeof x.competitions[0].date !== 'undefined') {
                    const dateUTC = new Date(x.competitions[0].date);
                    const timeLocal = dateUTC.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });
                  stackedGameTime = '<div style="font-weight:bold;font-size:18px;text-align:center;color:white;margin-top:10px;margin-bottom:5px;">' + timeLocal + '</div>';
                } else {
                  stackedGameTime = '';
                }
              }
            }

            if (typeof x.competitions[0].date !== 'undefined') {
                const dateUTC = new Date(x.competitions[0].date);
                const options = { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' };
                const dateLocal = dateUTC.toLocaleDateString([], options).replace(/,/, ' -');

                stackedGameDate = '<div style="font-weight:normal;font-size:15px;text-align:center;color:white;margin-top:10px;margin-bottom:5px;">' + dateLocal + '</div>';
            } else {
                stackedGameDate = '';
            }   

              const team1 = x.competitions[0].competitors[1].team; 
              const team2 = x.competitions[0].competitors[0].team;
              const name1 = team1.name;  
              const name2 = team2.name;
              const summary1 = x.competitions[0].competitors[1].record[0].summary;  
              const summary2 = x.competitions[0].competitors[0].record[0].summary;  
              const logo1 = team1.logos[0].href; 
              const logo2 = team2.logos[0].href; 
              const link1 = team1.links[0].href; 
              const link2 = team2.links[0].href; 
              const gameLink = x.links[0].href;

              if (logo1 && link1 && logo2 && link2) {
                let height1 = 80;
                let alignLogo1 = "0px 0px 0px 0px";
                let alignVs = "0px 0px 0px 0px";                   
                let height2 = 80;
                let alignLogo2 = "0px 0px 0px 0px";

                if (team1.id === "9") {
                  height1 = 100;
                  alignLogo1 = "0px 0px 0px 0px";
                  alignVs = "0px 0px 0px 0px";                  
                  
                } else if (team2.id === "9") {
                  height2 = 100;
                  alignLogo2 = "0px 0px 0px 0px";
                  alignVs = "0px 0px 0px 0px";                  
                }

              stackedOpponents =  '<div style="font-weight:normal;display:flex;justify-content:center;align-items:center;">' +

                                    '<a href="' + link1 + '" target="_blank" style="width:20%;text-decoration:none;">' +
                                      '<img src="' + logo1 + '" alt="' + team1 + ' Logo" style="height:' + height1 + 'px;justify-content:center;align-items:center;vertical-align:middle;margin:' + alignLogo1 + ';">' +
                                      
                                    '</a>' +
                                    
                                    '<a href="' + gameLink + '" target="_blank" style="width:40%;margin:' + alignVs + ';text-align:center;color:white;font-size:40px;text-decoration:none;"> vs. </a>' +

                                    
                                    '<a href="' + link2 + '" target="_blank" style="width:20%;text-decoration:none;">' +
                                      '<img src="' + logo2 + '" alt="' + team2 + ' Logo" style="height:' + height2 + 'px;justify-content:center;align-items:center;vertical-align:middle;margin:' + alignLogo2 + ';">' +
                                    '</a>' +
                                  '</div>';
              }

            let alignNmSum1 = "2.5px 0px 0px 0px";  let alignNmSum2 = "2.5px 0px
            0px 0px";

            if (team1.id === "9") {
              alignNmSum1 = "2.5px 0px 0px 0px";
            } else if (team2.id === "9") {
              alignNmSum2 = "2.5px 0px 0px 0px";
            }

            if (name1 && name2 && summary1 && summary2) {
              stackedTeamInfo = '<div style="font-weight:normal;font-size:15px;display:flex;justify-content:center;align-items:center;margin-bottom:10px;margin-top:0px;">' +
              
                '<div style="width:30%;display:flex;flex-direction:column;align-items:center;text-align:center;color:white;margin-right:15%;">' +
                  '<div style="text-align:center;font-weight:bold;font-size:18px;color:white;">' + name1 + '</div>' +
                  '<div style="text-align:center;font-size:14px;color:white;margin-top:2.5px;">' + summary1 + '</div>' +
                  
                '</div>' +
                
                '<div style="width:30%;display:flex;flex-direction:column;align-items:center;text-align:center;color:white;margin-left:15%;">' +
                  '<div style="text-align:center;font-weight:bold;font-size:18px;color:white;">' + name2 + '</div>' +
                  '<div style="text-align:center;font-size:14px;color:white;margin-top:2.5px;">' + summary2 + '</div>' +
                '</div>' +
              '</div>';
            }

            let broadcastNames = [];

            if (x.competitions[0].broadcasts[0]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[0].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[0].media.shortName);
                }
            } if (x.competitions[0].broadcasts[1]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[1].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[1].media.shortName);
                }
            } if (x.competitions[0].broadcasts[2]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[2].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[2].media.shortName);
                }
            } broadcastNames = broadcastNames.slice(0, 2);

            if (broadcastNames.length > 0) {
                stackedStreaming = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:5px;margin-bottom:10px;color:white;">' +
                                    broadcastNames.join(', ') + '</div>';
            } else {
                stackedStreaming = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:5px;margin-bottom:10px;color:white;">No broadcast available</div>';
            }

            stackedGame = stackedGameTime + stackedGameDate + stackedOpponents +
            stackedTeamInfo + stackedStreaming; stackedGame;
  stars_nextArticle:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 35%;'
        tbody tr td:nth-child(2): 'width: 2.5%;'
        tbody tr td:nth-child(3): 'width: 2.5%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: article
          modify: >-
            var stackedNews = '';  var stackedHeadline = '';  var stackedStory =
            '';

            if (typeof x.headline !== 'undefined') {
              stackedHeadline = '<div style="font-weight:bold;font-size:18px;text-align:left;color:white;margin-top:10px;margin-bottom:5px;">' + x.headline + '</div>';
            }

            if (typeof x.story !== 'undefined') {
              stackedStory = '<div style="font-weight:bold;font-size:16px;text-align:left;color:white;margin-top:10px;">Preview: ' +
                             '<span style="font-weight:normal;font-size:14px;text-align:left;color:white;margin-top:20px;margin-bottom:5px;">' +
                             x.story.replace(/<a /g, '<a style="text-decoration:none;color:white;font-weight:bold;" target="_blank" ') + 
                             '</span></div>';
            }

            stackedNews = stackedHeadline + stackedStory; stackedNews;
  stars_nextGameLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries
      columns:
        - name: ''
          data: leaders
          modify: |-
            if (typeof x.team.logo !== 'undefined') {
              if (x.team.id === "9") {
                // Specific height for team with ID 9
                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:25px; vertical-align:middle; margin2.5px 0;">' +
             
                '</div>';
              } else {
                // Default height for other teams
                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:20px; vertical-align:middle; margin:2.5px 0;">' +
              
                '</div>';
              }
            }        
        - name: <div style="height:20px;text-align:center;color:white;">Points</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[2].leaders[0].athlete.links[0].href &&
            x.leaders[2].leaders[0].athlete.headshot.href && 
              x.leaders[2].leaders[0].athlete.shortName && x.leaders[2].leaders[0].displayValue) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[2].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[2].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[2].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:10px;color:white;">' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[2].leaders[0].statistics[0].displayValue + '</span> PTS, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[2].leaders[0].statistics[0].displayValue + '</span> G, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[2].leaders[0].statistics[0].displayValue + '</span> A' +
                              '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;
        - name: <div style="height:20px;text-align:center;color:white;">Goals</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[0].leaders[0].athlete.links[0].href &&
            x.leaders[0].leaders[0].athlete.headshot.href && 
              x.leaders[0].leaders[0].athlete.shortName && x.leaders[0].leaders[0].displayValue) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[0].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[0].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[0].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +          
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:10px;color:white;">' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[0].leaders[0].statistics[0].displayValue + '</span> G, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[0].leaders[0].statistics[0].displayValue + '</span> PPG, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[0].leaders[0].statistics[0].displayValue + '</span> S' +
                              '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;            
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;">Assists</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[1].leaders[0].athlete.links[0].href &&
            x.leaders[1].leaders[0].athlete.headshot.href && 
              x.leaders[1].leaders[0].athlete.shortName && x.leaders[1].leaders[0].displayValue) {


              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[1].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[1].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[1].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:10px;color:white;">' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[1].leaders[0].statistics[0].displayValue + '</span> A, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[1].leaders[0].statistics[0].displayValue + '</span> PPA, ' +
                              '<span style="font-weight:bold;color:white;">' + x.leaders[1].leaders[0].statistics[0].displayValue + '</span> +/-' +
                              '</span>' +
                              '</div>';
            } stackedType = stackedPlayer; stackedType; 
  stars_nextGameGoalies:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: goalies
          modify: >-
            var stackedGoalies = '';  var stackedPlHld = '';  var stackedW =
            '';  var stackedL = '';   var stackedOTL = '';  var stackedSO = ''; 
            var stackedGAA = '';  var stackedSV = '';  

            if (typeof x.awayTeam.athletes[0].statistics[5].displayValue !==
            'undefined') {
              stackedPlHld = '<div style="height:25px; width:50px; display:inline-block; margin-right:25px; background:transparent;"></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[5].displayValue !==
            'undefined') {
              stackedW = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:10px;">Wins';
            } if (typeof x.awayTeam.athletes[0].statistics[6].displayValue !==
            'undefined') {
              stackedL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;">Losses';
            } if (typeof x.awayTeam.athletes[0].statistics[3].displayValue !==
            'undefined') {
              stackedOTL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;">Overtime Losses';
            } if (typeof x.awayTeam.athletes[0].statistics[1].displayValue !==
            'undefined') {
              stackedSO = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;">Shutouts';
            } if (typeof x.awayTeam.athletes[0].statistics[0].displayValue !==
            'undefined') {
              stackedGAA = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;">Goals Against Average';
            } if (typeof x.awayTeam.athletes[0].statistics[2].displayValue !==
            'undefined') {
              stackedSV = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;">Save Percentage';
            }

            stackedGoalies = stackedPlHld + stackedW + stackedL + stackedOTL +
            stackedSO + stackedGAA + stackedSV; stackedGoalies;
        - name: ''
          data: goalies
          modify: >-
            var stackedGoalies = '';  var stackedPlayer = '';  var stackedW =
            '';  var stackedL = '';   var stackedOTL = '';  var stackedSO = ''; 
            var stackedGAA = '';  var stackedSV = '';  

            if (x.awayTeam.athletes[0].links[0].href &&
            x.awayTeam.athletes[0].headshot.href && 
              x.awayTeam.athletes[0].shortName) {
              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;">' + 
                              '<a href="' + x.awayTeam.athletes[0].links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.awayTeam.athletes[0].headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.awayTeam.athletes[0].shortName + '</span>' +
                              '</div>';
            } if (typeof x.awayTeam.athletes[0].statistics[5].displayValue !==
            'undefined') {
              stackedW = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:10px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[5].displayValue + '</span></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[6].displayValue !==
            'undefined') {
              stackedL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[6].displayValue + '</span></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[3].displayValue !==
            'undefined') {
              stackedOTL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[3].displayValue + '</span></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[1].displayValue !==
            'undefined') {
              stackedSO = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[1].displayValue + '</span></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[0].displayValue !==
            'undefined') {
              stackedGAA = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[0].displayValue + '</span></div>';
            } if (typeof x.awayTeam.athletes[0].statistics[2].displayValue !==
            'undefined') {
              stackedSV = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.awayTeam.athletes[0].statistics[2].displayValue + '</span></div>';
            }

            stackedGoalies = stackedPlayer + stackedW + stackedL + stackedOTL +
            stackedSO + stackedGAA + stackedSV; stackedGoalies;
        - name: ''
          data: goalies
          modify: >-
            var stackedGoalies = '';  var stackedPlayer = '';  var stackedW =
            '';  var stackedL = '';   var stackedOTL = '';  var stackedSO = ''; 
            var stackedGAA = '';  var stackedSV = '';  

            if (x.homeTeam.athletes[0].links[0].href &&
            x.homeTeam.athletes[0].headshot.href && 
              x.homeTeam.athletes[0].shortName) {
              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;">' + 
                              '<a href="' + x.homeTeam.athletes[0].links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.homeTeam.athletes[0].headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.homeTeam.athletes[0].shortName + '</span>' +
                              '</div>';
            } if (typeof x.homeTeam.athletes[0].statistics[5].displayValue !==
            'undefined') {
              stackedW = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:10px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[5].displayValue + '</span></div>';
            } if (typeof x.homeTeam.athletes[0].statistics[6].displayValue !==
            'undefined') {
              stackedL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[6].displayValue + '</span></div>';
            } if (typeof x.homeTeam.athletes[0].statistics[3].displayValue !==
            'undefined') {
              stackedOTL = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[3].displayValue + '</span></div>';
            } if (typeof x.homeTeam.athletes[0].statistics[1].displayValue !==
            'undefined') {
              stackedSO = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[1].displayValue + '</span></div>';
            } if (typeof x.homeTeam.athletes[0].statistics[0].displayValue !==
            'undefined') {
              stackedGAA = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[0].displayValue + '</span></div>';
            } if (typeof x.homeTeam.athletes[0].statistics[2].displayValue !==
            'undefined') {
              stackedSV = '<div style="font-weight:normal;font-size:13px;text-align:left;color:white;margin-top:5px;padding-left:10px">' + x.homeTeam.athletes[0].statistics[2].displayValue + '</span></div>';
            }

            stackedGoalies = stackedPlayer + stackedW + stackedL + stackedOTL +
            stackedSO + stackedGAA + stackedSV; stackedGoalies;
  stars_nextGameInjuries:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: injuries
          modify: >-
            var stackedInjuries = '';  var stackedP = '';  var stackedP0 = ''; 
            var stackedP1 = '';   var stackedP2 = '';  var stackedP3 = '';  var
            stackedP4 = '';  var stackedP5 = ''; 

            if (typeof x.team.logo !== 'undefined') {
              stackedP = '<div style="text-align:left;padding-left:5px;margin:10px 0px 5px 0px;">' +
                              '<img src="' + x.team.logo + '" style="height:30px;vertical-align:middle;">' +
                              '<span style="padding-left:10px;font-weight:bold;font-size:13px;text-align:left;color:white;">' + x.team.abbreviation + '</span></div>';
            }

            if (typeof x.team.logo !== 'undefined') {
              stackedP0 = '<div style="height:15px;font-weight:bold;font-size:13px;padding-left:5px;text-align:left;color:white;margin:10px 0px 15px 0px;">' + 'Name' + '</div>';
            } 

            if (typeof x.injuries[0].athlete.shortName !== 'undefined') {
              stackedP1 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[0].athlete.shortName +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:12px;text-align:left;color:silver;">' + x.injuries[0].athlete.position.abbreviation + '</span></div>';
            }  

            if (typeof x.injuries[1].athlete.shortName !== 'undefined') {
              stackedP2 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[1].athlete.shortName +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:12px;text-align:left;color:silver;">' + x.injuries[1].athlete.position.abbreviation + '</span></div>';
            }  

            if (typeof x.injuries[2].athlete.shortName !== 'undefined') {
              stackedP3 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[2].athlete.shortName +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:12px;text-align:left;color:silver;">' + x.injuries[2].athlete.position.abbreviation + '</span></div>';
            }            

            if (typeof x.injuries[3].athlete.shortName !== 'undefined') {
              stackedP4 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[3].athlete.shortName +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:12px;text-align:left;color:silver;">' + x.injuries[3].athlete.position.abbreviation + '</span></div>';
            }  

            if (typeof x.injuries[4].athlete.shortName !== 'undefined') {
              stackedP5 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 5px 0px;">' + x.injuries[4].athlete.shortName +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:12px;text-align:left;color:silver;">' + x.injuries[4].athlete.position.abbreviation + '</span></div>';
            } 

            stackedInjuries = stackedP + stackedP0 + stackedP1 + stackedP2 +
            stackedP3 + stackedP4 + stackedP5; stackedInjuries;     
        - name: ''
          data: injuries
          modify: >-
            var stackedInjuries = '';  var stackedP = '';  var stackedP0 = ''; 
            var stackedP1 = '';   var stackedP2 = '';  var stackedP3 = '';  var
            stackedP4 = '';  var stackedP5 = ''; 

            if (typeof x.team.logo !== 'undefined') {
              stackedP = '<div style="height:20px; width:50px; display:inline-block;5px;margin:10px 0px 5px 0px; background:transparent;"></div>';
            } 

            if (typeof x.team.logo !== 'undefined') {
              stackedP0 = '<div style="height:15px;font-weight:bold;font-size:13px;padding-left:5px;text-align:left;color:white;margin:10px 0px 15px 0px;">' + 'Status' + '</div>';
            } 

            if (typeof x.injuries[0].status !== 'undefined') {
              stackedP1 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[0].status + '</div>';
            }  

            if (typeof x.injuries[1].status !== 'undefined') {
              stackedP2 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[1].status + '</div>';
            }  

            if (typeof x.injuries[2].status !== 'undefined') {
              stackedP3 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[2].status + '</div>';
            }            

            if (typeof x.injuries[3].status !== 'undefined') {
              stackedP4 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 0px 0px;">' + x.injuries[3].status + '</div>';
            }  

            if (typeof x.injuries[4].status !== 'undefined') {
              stackedP5 = '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 5px 0px;">' + x.injuries[4].status + '</div>';
            } 

            stackedInjuries = stackedP + stackedP0 + stackedP1 + stackedP2 +
            stackedP3 + stackedP4 + stackedP5; stackedInjuries;      
        - name: ''
          data: injuries
          modify: >-
            let stackedDateAndTime = '';   let stackedP = ''; let stackedP0 =
            '';

            if (typeof x.team.logo !== 'undefined') {
              stackedP = '<div style="height:20px; width:50px; display:inline-block; 5px;margin:10px 0px 5px 0px; background:transparent;"></div>';
            } 

            if (typeof x.team.logo !== 'undefined') {
              stackedP0 = '<div style="height:15px;font-weight:bold;font-size:13px;padding-left:5px;text-align:left;color:white;margin:10px 0px 15px 0px;">' + 'Est. Return' + '</div>';
            }


            let stackedTimeRows1 = ''; for (let i = 0; i < 5; i++) {
              if (x.injuries.length > i && typeof x.injuries[i].details !== 'undefined' && x.injuries[i].details.returnDate) {

                let originalDate = new Date(x.injuries[i].details.returnDate);
                let formattedDate = originalDate.toLocaleDateString('en-US', {
                  month: 'short', // "Jan"
                  day: 'numeric', // "1"
                  year: 'numeric' // "2025"
                });
                stackedTimeRows1 += '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 5px 0px;">' +
                                   formattedDate +
                                   '</div>';

              } else {

                stackedTimeRows1 += '<div style="height:25px;font-weight:normal;font-size:13px;padding-left:10px;text-align:left;color:white;margin:5px 0px 5px 0px;">Day to day</div>';
              }
            }

            stackedDateAndTime = stackedP + stackedP0 + stackedTimeRows1;
  stars_nextLastThree:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: lastFiveGames
          modify: |-
            if (typeof x.team.logo !== 'undefined') {
              if (x.team.id === "9") {

                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:20px; vertical-align:middle; margin-top:2.5px;">' +            
                '</div>';
              } else {

                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:18px; vertical-align:middle; margin-top:2.5px;">' +              
                '</div>';
              }
            }
        - name: ''
          data: lastFiveGames
          modify: |-
            var stackedFive = '';   var stackedResults = '';         
            if (
              x.events && x.events[4] && x.events[4].atVs && x.events[4].gameResult &&
              x.events[4].score && x.events[4].opponent && x.events[4].opponent.logo
            ) {
              var resultColor = x.events[4].gameResult === "W" ? "green" : "red";
              
              stackedResults = '<div style="text-align:left;margin:5px 0;">' + 
                               '<span style="font-size:13px;font-weight:normal;color:white;">' + x.events[4].atVs + '</span>&nbsp;' +
                               '<img src="' + x.events[4].opponent.logo + '" style="height:18px;vertical-align:middle;margin:0 5px;">' +
                               '<span style="color:white;font-size:13px;font-weight:bold;">' + '</a>&nbsp;' + x.events[4].score + '</span>' +
                               '<span style="color:' + resultColor + ';font-size:13px;font-weight:bold;">' + '</a>&nbsp;&nbsp;' + x.events[4].gameResult + '</span>' +                               
                               '</div>';
            } stackedFive = stackedResults; stackedFive;
        - name: ''
          data: lastFiveGames
          modify: |-
            var stackedFive = '';  var stackedResults = '';         
            if (
              x.events && x.events[3] && x.events[3].atVs && x.events[3].gameResult &&
              x.events[3].score && x.events[3].opponent && x.events[3].opponent.logo
            ) {
              var resultColor = x.events[3].gameResult === "W" ? "green" : "red";
              
              stackedResults = '<div style="text-align:left;margin:5px 0;">' + 
                               '<span style="font-size:13px;font-weight:normal;color:white;">' + x.events[3].atVs + '</span>&nbsp;' +
                               '<img src="' + x.events[3].opponent.logo + '" style="height:18px;vertical-align:middle;margin:0 5px;">' +
                               '<span style="color:white;font-size:13px;font-weight:bold;">' + '</a>&nbsp;' + x.events[3].score + '</span>' +
                               '<span style="color:' + resultColor + ';font-size:13px;font-weight:bold;">' + '</a>&nbsp;&nbsp;' + x.events[3].gameResult + '</span>' +                               
                               '</div>';
            } stackedFive = stackedResults; stackedFive;
        - name: ''
          data: lastFiveGames
          modify: |-
            var stackedFive = '';  var stackedResults = '';         
            if (
              x.events && x.events[2] && x.events[2].atVs && x.events[2].gameResult &&
              x.events[2].score && x.events[2].opponent && x.events[2].opponent.logo
            ) {
              var resultColor = x.events[2].gameResult === "W" ? "green" : "red";
              
              stackedResults = '<div style="text-align:left;margin:5px 0;">' + 
                               '<span style="font-size:13px;font-weight:normal;color:white;">' + x.events[2].atVs + '</span>&nbsp;' +
                               '<img src="' + x.events[2].opponent.logo + '" style="height:18px;vertical-align:middle;margin:0 5px;">' +
                               '<span style="color:white;font-size:13px;font-weight:bold;">' + '</a>&nbsp;' + x.events[2].score + '</span>' +
                               '<span style="color:' + resultColor + ';font-size:13px;font-weight:bold;">' + '</a>&nbsp;&nbsp;' + x.events[2].gameResult + '</span>' +                               
                               '</div>';
            } stackedFive = stackedResults; stackedFive;
  stars_nextTeamsStats:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: boxscore
          modify: >-
            var stackedCategory = '';  var stackedPlHld = '';  var stackedTeam =
            '';  var stackedGF = '';  var stackedGAA = '';  var stackedSh = ''; 
            var stackedSA = '';  var stackedPIM = '';  var stackedPPG = '';  var
            stackedPPP = '';  var stackedPPGA = '';  var stackedPKP = '';  var
            stackedSHG = '';  

            if (typeof x.teams[0].team.logo !== 'undefined') {
              stackedPlHld = '<div style="height:50px; width:50px; display:inline-block; margin-right:25px; background:transparent;"></div>';
            } if (typeof x.teams[0].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:0px;display:inline-block;background:transparent;"></div>';        
            } if (typeof x.teams[0].statistics[5].displayValue !== 'undefined')
            {
              stackedGF = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Goals For per Game ';
            } if (typeof x.teams[0].statistics[0].displayValue !== 'undefined')
            {
              stackedGAA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Goals Against Average ';
            } if (typeof x.teams[0].statistics[6].displayValue !== 'undefined')
            {
              stackedSh = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Shots per Game ';
            } if (typeof x.teams[0].statistics[1].displayValue !== 'undefined')
            {
              stackedSA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Shots Against per Game ';
            } if (typeof x.teams[0].statistics[10].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Penalty Minutes ';
            } if (typeof x.teams[0].statistics[7].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Power Play Goals ';
            } if (typeof x.teams[0].statistics[8].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Power Play Percentage ';
            } if (typeof x.teams[0].statistics[3].displayValue !== 'undefined')
            {
              stackedPPGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Power Play Goals Against ';
            } if (typeof x.teams[0].statistics[2].displayValue !== 'undefined')
            {
              stackedPKP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Penalty Kill Percentage ';
            } if (typeof x.teams[0].statistics[9].displayValue !== 'undefined')
            {
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Short Handed Goals ';
            }

            stackedCategory = stackedPlHld + stackedTeam + stackedGF +
            stackedGAA + stackedSh + stackedSA + stackedPIM + stackedPPG +
            stackedPPP + stackedPPGA + stackedPKP + stackedSHG;
            stackedCategory;       
        - name: ''
          data: boxscore
          modify: >-
            var stackedAway = '';  var stackedLogo = '';  var stackedTeam = ''; 
            var stackedGF = '';  var stackedGAA = '';  var stackedSh = '';  var
            stackedSA = '';  var stackedPIM = '';  var stackedPPG = '';  var
            stackedPPP = '';  var stackedPPGA = '';  var stackedPKP = '';  var
            stackedSHG = '';       

            if (typeof x.teams[0].team.logo !== 'undefined') {
              if (x.teams[0].team.id === "9") {

                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[0].team.logo + '" style="height:40px; vertical-align:middle; margin-top:0px;">' +
                              '</div>';
              } else {
                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[0].team.logo + '" style="height:30px; vertical-align:middle; margin-top:5px;">' +          
                              '</div>';
              }
            }

            if (typeof x.teams[0].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:0px;display:inline-block;background:transparent;"></div>';                              
            } if (typeof x.teams[0].statistics[5].displayValue !== 'undefined')
            {
              stackedGF = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[5].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[0].displayValue !== 'undefined')
            {
              stackedGAA = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[0].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[6].displayValue !== 'undefined')
            {
              stackedSh = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[6].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[1].displayValue !== 'undefined')
            {
              stackedSA = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[1].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[10].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[10].displayValue + '</span></div>';                            
            } if (typeof x.teams[0].statistics[7].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[7].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[8].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[8].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[3].displayValue !== 'undefined')
            {
              stackedPPGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[3].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[2].displayValue !== 'undefined')
            {
              stackedPKP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[2].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[9].displayValue !== 'undefined')
            {
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[9].displayValue + '</span></div>';              
            } 

            stackedAway = stackedLogo + stackedTeam + stackedGF + stackedGAA +
            stackedSh + stackedSA + stackedPIM + stackedPPG + stackedPPP +
            stackedPPGA + stackedPKP + stackedSHG; stackedAway;
        - name: ''
          data: boxscore
          modify: >-
            var stackedHome = '';  var stackedLogo = '';  var stackedTeam = ''; 
            var stackedGF = '';  var stackedGAA = '';  var stackedSh = '';  var
            stackedSA = '';  var stackedPIM = '';  var stackedPPG = '';  var
            stackedPPP = '';  var stackedPPGA = '';  var stackedPKP = '';  var
            stackedSHG = '';  

            if (typeof x.teams[1].team.logo !== 'undefined') {
              if (x.teams[1].team.id === "9") {

                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[1].team.logo + '" style="height:40px; vertical-align:middle; margin:0px 0;">' +
                              '</div>';
              } else {
                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[1].team.logo + '" style="height:30px; vertical-align:middle; margin-top:5px;">' +
                              '</div>';
              }
            } if (typeof x.teams[1].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:0px;display:inline-block;background:transparent;"></div>';                                
            } 

            if (typeof x.teams[1].statistics[5].displayValue !== 'undefined') {
              stackedGF = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[5].displayValue + '</span></div>';
            } 

            if (typeof x.teams[1].statistics[0].displayValue !== 'undefined') {
              stackedGAA = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[0].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[6].displayValue !== 'undefined')
            {
              stackedSh = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[6].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[1].displayValue !== 'undefined')
            {
              stackedSA = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[1].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[10].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[10].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[7].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[7].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[8].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[8].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[3].displayValue !== 'undefined')
            {
              stackedPPGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[3].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[2].displayValue !== 'undefined')
            {
              stackedPKP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[2].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[9].displayValue !== 'undefined')
            {
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[9].displayValue + '</span></div>';              
            } 

            stackedHome = stackedLogo + stackedTeam + stackedGF + stackedGAA +
            stackedSh + stackedSA + stackedPIM + stackedPPG + stackedPPP +
            stackedPPGA + stackedPKP + stackedSHG; stackedHome;                
  stars_nextSeasonSeries:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: 425px;'
        tbody tr td:first-child: 'width: 30%;'
        tbody tr td:nth-child(2): 'width: 20%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: seasonseries
          modify: >-
            var stackedSeasonSeries = '';  var stackedTitle = '';  var
            stackedSummary = '';   var maxGames = 6;

            if (typeof x.summary !== 'undefined') {
              stackedSummary = '<div style="padding-left:15px;font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;margin-bottom:10px;">' + '2024-25 Season:' + '</a>&nbsp;&nbsp;' + x.summary + '</div>';
            }

            for (var i = 0; i < maxGames && i < x.events.length; i++) {
                var game = x.events[i];
                var competitor0 = game.competitors[0];
                var competitor1 = game.competitors[1];
                var score0 = competitor0.score;
                var score1 = competitor1.score;
                var logo0 = competitor0.team.logo;
                var logo1 = competitor1.team.logo;
                var color0 = game.statusType.completed && score0 > score1 ? 'green' : score0 < score1 ? 'red' : 'white';
                var color1 = game.statusType.completed && score1 > score0 ? 'green' : score1 < score0 ? 'red' : 'white';
                var winnerBoldStyle0 = game.statusType.completed && score0 > score1 ? 'font-weight:bold;' : '';
                var winnerBoldStyle1 = game.statusType.completed && score1 > score0 ? 'font-weight:bold;' : '';
                var stackedGame = '<div style="margin-bottom:10px;">';

                if (typeof x.events[1].competitors[0].team.logo !== 'undefined') {
                  if (x.events[1].competitors[0].team.id === "9") {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                    '<img src="' + logo1 + '" style="height:30px; vertical-align:middle; margin-top:0px;padding-right:10px;">' +
                                    '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle1 + '">' + competitor1.team.abbreviation +
                                  '</span>';

                  } else {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                    '<img src="' + logo1 + '" style="height:30px; vertical-align:middle; margin-top:5px;padding-right:10px;">' +                    
                                    '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle1 + '">' + competitor1.team.abbreviation +
                                  '</span>';
                  }

                    if (game.statusType.completed) {
                        stackedGame += '<span style="color:' + color1 + '; margin-left:5px; font-size:20px; vertical-align:middle; font-weight:bold; text-decoration:none;">' + score1 + '</span>';
                    }

                    if (typeof game.date !== 'undefined') {
                        const dateUTC = new Date(game.date);
                        const options = { month: 'short', day: 'numeric', year: 'numeric' };
                        const dateLocal = dateUTC.toLocaleDateString([], options).replace(/,/, ' ,');
                        stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + dateLocal + '</span>';
                    }
                    stackedGame += '</div>';
                }


                if (typeof x.events[0].competitors[0].team.logo !== 'undefined') {
                  if (x.events[0].competitors[0].team.id === "9") {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                    '<img src="' + logo0 + '" style="height:30px; vertical-align:middle; margin-top:0px;padding-right:10px;">' +
                                    '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle0 + '">' + competitor0.team.abbreviation +
                                  '</span>';

                  } else {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                    '<img src="' + logo0 + '" style="height:30px; vertical-align:middle; margin-top:5px;padding-right:10px;">' +                    
                                    '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle0 + '">' + competitor0.team.abbreviation +
                                  '</span>';
                  }
                                  
                    if (game.statusType.completed) {
                        stackedGame += '<span style="color:' + color0 + '; margin-left:5px; font-size:20px; vertical-align:middle; font-weight:bold; text-decoration:none;">' + score0 + '</span>';
                    }

                    if (game.statusType.id === "1" || game.statusType.id === "3") {
                        if (typeof game.statusType.description !== 'undefined') {
                            stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + game.statusType.description + '</span>';
                        }
                    } else if (game.statusType.id === "2") {
                        if (typeof game.statusType.shortDetail !== 'undefined') {
                            stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + game.statusType.shortDetail + '</span>';
                        }
                    }

                    stackedGame += '</div>';
                }

                stackedGame += '</div>';
                stackedSeasonSeries += stackedGame;
            }

            stackedSeasonSeries = stackedTitle + stackedSummary +
            stackedSeasonSeries;
  stars_lastOpponent:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: header
          modify: >-
            var stackedGame = '';  var stackedGameTime = '';  var
            stackedGameDate = '';   var stackedOpponents = '';   var
            stackedTeamInfo = '';  var stackedStreaming = '';  

            if (typeof x.competitions[0].status.type.detail !== 'undefined') {
              if (x.competitions[0].status.type.completed) {
                stackedGameTime = '<div style="font-weight:bold;font-size:25px;text-align:center;color:white;margin-top:20px;margin-bottom:5px;">' +
                  x.competitions[0].status.type.detail +
                  '</div>';
                stackedGameDate = '';
                
              } else {
              
                if (typeof x.competitions[0].date !== 'undefined') {
                  const dateUTC = new Date(x.competitions[0].date);
                  const timeLocal = dateUTC.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' }); // Extract local time
                  stackedGameTime = '<div style="font-weight:bold;font-size:18px;text-align:center;color:white;margin-top:10px;margin-bottom:5px;">' +
                    timeLocal +
                    '</div>';

                  const options = { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' };
                  const dateLocal = dateUTC.toLocaleDateString([], options).replace(/,/, ' -');
                  stackedGameDate = '<div style="font-weight:normal;font-size:15px;text-align:center;color:white;margin-top:10px;margin-bottom:5px;">' +
                    dateLocal +
                    '</div>';
                    
                } else {
                
                  stackedGameTime = '';
                  stackedGameDate = '';
                }
              }
            }

            const team1 = x.competitions[0].competitors[1].team;  const team2 =
            x.competitions[0].competitors[0].team;  const name1 = team1.name;
            const name2 = team2.name;  const summary1 =
            x.competitions[0].competitors[1].record[0].summary;  const summary2
            = x.competitions[0].competitors[0].record[0].summary;              
            const logo1 = team1.logos[0].href;  const logo2 =
            team2.logos[0].href;  const link1 = team1.links[0].href;    const
            link2 = team2.links[0].href;  const gameLink =
            x.links[0].href;              const score1 =
            x.competitions[0].competitors[1].score;     const score2 =
            x.competitions[0].competitors[0].score;    const color1 = score1 >
            score2 ? 'green' : (score1 < score2 ? 'red' : 'white');     const
            color2 = score1 < score2 ? 'green' : (score1 > score2 ? 'red' :
            'white');

              if (logo1 && link1 && logo2 && link2) {
                let height1 = 80;
                let alignLogo1 = "0px 0px 0px 0px";
                let alignDash = "0px 0px 0px 0px";                   
                let height2 = 80;
                let alignLogo2 = "0px 0px 0px 0px";

                if (team1.id === "9") {
                  height1 = 100;
                  alignLogo1 = "0px 0px 0px 0px";
                  alignDash = "0px 0px 0px 10px";                  
                  
                } else if (team2.id === "9") {
                  height2 = 100;
                  alignLogo2 = "0px 0px 0px 0px";
                  alignDash = "0px 0px 0px 0px";                  
                }

              stackedOpponents =  '<div style="font-weight:normal;display:flex;justify-content:center;align-items:center;">' +
              
                                    '<a href="' + link1 + '" target="_blank" style="width:30%;text-decoration:none;">' +
                                      '<img src="' + logo1 + '" alt="' + team1 + ' Logo" style="height:' + height1 + 'px;justify-content:center;align-items:center;vertical-align:middle;margin-right:15%;">' +
                                    '</a>' +
                                    
                                    '<a href="' + gameLink + '" target="_blank" style="width:10%;font-size:45px;vertical-align:middle;text-decoration:none;text-align:center;color:' + color1 + ';">' +
                                      score1 +
                                    '</a>' +
                                    '<a href="' + gameLink + '" target="_blank" style="width:5%;display:flex;center;align-items:center;margin:' + alignDash + ';text-align:center;color:white;font-size:40px;vertical-align:middle;text-decoration:none;"> - </span>' +
                                    
                                    '<a href="' + gameLink + '" target="_blank" style="width:10%;font-size:45px;vertical-align:middle;text-decoration:none;text-align:center;color:' + color2 + ';">' +
                                      score2 +
                                    '</a>' +
                                    '<a href="' + link2 + '" target="_blank" style="width:30%;text-decoration:none;">' +
                                      '<img src="' + logo2 + '" alt="' + team2 + ' Logo" style="height:' + height2 + 'px;justify-content:center;align-items:center;vertical-align:middle;margin-left:15%;">' +
                                    '</a>' +
                                  '</div>';
            }                             

            let alignNmSum1 = "2.5px 0px 0px 0px";  let alignNmSum2 = "2.5px 0px
            0px 0px";

            if (team1.id === "9") {
              alignNmSum1 = "2.5px 0px 0px 0px";
            } else if (team2.id === "9") {
              alignNmSum2 = "2.5px 0px 0px 0px";
            }

            if (name1 && name2 && summary1 && summary2) {
              stackedTeamInfo = 
              '<div style="font-weight:normal;font-size:15px;display:flex;justify-content:center;align-items:center;margin-bottom:10px;margin-top:0px;">' +
                '<div style="width:30%;display:flex;flex-direction:column;align-items:center;color:white;margin-right:15%;">' +
                  '<div style="font-weight:bold;font-size:18px;color:white;">' + name1 + '</div>' +
                  '<div style="font-size:14px;color:white;margin-top:2.5px;">' + summary1 + '</div>' +
                '</div>' +              
                '<div style="width:30%;display:flex;flex-direction:column;align-items:center;color:white;margin-left:15%;">' +
                  '<div style="font-weight:bold;font-size:18px;color:white;">' + name2 + '</div>' +
                  '<div style="font-size:14px;color:white;margin-top:2.5px;">' + summary2 + '</div>' +
                '</div>' +
              '</div>';
            }

            let broadcastNames = [];

            if (x.competitions[0].broadcasts[0]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[0].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[0].media.shortName);
                }
            } if (x.competitions[0].broadcasts[1]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[1].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[1].media.shortName);
                }
            } if (x.competitions[0].broadcasts[2]?.media?.shortName) {
                if (['ESPN', 'ESPN+', 'Victory+'].includes(x.competitions[0].broadcasts[2].media.shortName)) {
                    broadcastNames.push(x.competitions[0].broadcasts[2].media.shortName);
                }
            } broadcastNames = broadcastNames.slice(0, 2);

            if (broadcastNames.length > 0) {
                stackedStreaming = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:2.5px;margin-bottom:10px;color:white;">' +
                                    broadcastNames.join(', ') + '</div>';
            } else {
                stackedStreaming = '<div style="font-weight:bold;font-size:14px;text-align:center;margin-top:2.5px;margin-bottom:10px;color:white;">No broadcast available</div>';
            }

            stackedGame = stackedGameTime + stackedGameDate + stackedOpponents +
            stackedTeamInfo + stackedStreaming; stackedGame;  
  stars_lastArticle:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 35%;'
        tbody tr td:nth-child(2): 'width: 2.5%;'
        tbody tr td:nth-child(3): 'width: 2.5%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: article
          modify: >-
            var stackedNews = '';  var stackedHeadline = '';  var stackedStory =
            '';  

            if (typeof x.headline !== 'undefined') {
              stackedHeadline = '<div style="font-weight:bold;font-size:18px;text-align:left;color:white;margin-top:10px;margin-bottom:5px;">' + x.headline + '</div>';
            }

            if (typeof x.story !== 'undefined') {
              stackedStory = '<div style="font-weight:bold;font-size:16px;text-align:left;color:white;margin-top:10px;">Preview: ' +
                             '<span style="font-weight:normal;font-size:14px;text-align:left;color:white;margin-top:20px;margin-bottom:5px;">' +
                             x.story.replace(/<a /g, '<a style="text-decoration:none;color:white;font-weight:bold;" target="_blank" ') + 
                             '</span></div>';      
            }

            stackedNews = stackedHeadline + stackedStory; stackedNews;    
  stars_lastGameStars:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: >-
            <div
            style="height:10px;text-align:center;margin-bottom:20px;"><ha-icon
            icon="mdi:star" style="font-size:20px; color:gold;"></ha-icon></div>
          data: header
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if
            (x.competitions[0].status.featuredAthletes[2].athlete.links[0].href
            &&
            x.competitions[0].status.featuredAthletes[2].athlete.headshot.href
            && 
              x.competitions[0].status.featuredAthletes[2].athlete.shortName && x.competitions[0].status.featuredAthletes[2].team.nickname) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.competitions[0].status.featuredAthletes[2].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.competitions[0].status.featuredAthletes[2].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.competitions[0].status.featuredAthletes[2].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.competitions[0].status.featuredAthletes[2].team.nickname + '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;
        - name: >-
            <div
            style="height:10px;text-align:center;margin-bottom:20px;"><ha-icon
            icon="mdi:star" style="font-size:20px; color:gold;">
            </ha-icon><ha-icon icon="mdi:star" style="font-size:20px;
            color:gold;"></ha-icon></div>
          data: header
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if
            (x.competitions[0].status.featuredAthletes[3].athlete.links[0].href
            &&
            x.competitions[0].status.featuredAthletes[3].athlete.headshot.href
            && 
              x.competitions[0].status.featuredAthletes[3].athlete.shortName && x.competitions[0].status.featuredAthletes[3].team.nickname) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.competitions[0].status.featuredAthletes[3].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.competitions[0].status.featuredAthletes[3].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.competitions[0].status.featuredAthletes[3].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.competitions[0].status.featuredAthletes[3].team.nickname + '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;
        - name: >-
            <div
            style="height:10px;text-align:center;margin-bottom:20px;"><ha-icon
            icon="mdi:star" style="font-size:20px; color:gold;">
            </ha-icon><ha-icon icon="mdi:star" style="font-size:20px;
            color:gold;"></ha-icon><ha-icon icon="mdi:star"
            style="font-size:20px; color:gold;"></ha-icon></div>
          data: header
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if
            (x.competitions[0].status.featuredAthletes[4].athlete.links[0].href
            &&
            x.competitions[0].status.featuredAthletes[4].athlete.headshot.href
            && 
              x.competitions[0].status.featuredAthletes[4].athlete.shortName && x.competitions[0].status.featuredAthletes[4].team.nickname) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.competitions[0].status.featuredAthletes[4].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.competitions[0].status.featuredAthletes[4].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.competitions[0].status.featuredAthletes[4].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.competitions[0].status.featuredAthletes[4].team.nickname + '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType; 
  stars_lastGameGoalies:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: >-
            <div style="height:20px;text-align:center;color:white;">Winning
            Goalie</div>
          data: header
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if
            (x.competitions[0].status.featuredAthletes[0].athlete.links[0].href
            &&
            x.competitions[0].status.featuredAthletes[0].athlete.headshot.href
            && 
              x.competitions[0].status.featuredAthletes[0].athlete.shortName && x.competitions[0].status.featuredAthletes[0].team.nickname) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.competitions[0].status.featuredAthletes[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.competitions[0].status.featuredAthletes[0].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.competitions[0].status.featuredAthletes[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center;margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.competitions[0].status.featuredAthletes[0].team.nickname + '</span>' +
                              '</div>';
            }


            stackedType = stackedPlayer; stackedType;
        - name: >-
            <div style="height:20px;text-align:center;color:white;">Losing
            Goalie</div>
          data: header
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if
            (x.competitions[0].status.featuredAthletes[1].athlete.links[0].href
            &&
            x.competitions[0].status.featuredAthletes[1].athlete.headshot.href
            && 
              x.competitions[0].status.featuredAthletes[1].athlete.shortName && x.competitions[0].status.featuredAthletes[1].team.nickname) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.competitions[0].status.featuredAthletes[1].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.competitions[0].status.featuredAthletes[1].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.competitions[0].status.featuredAthletes[1].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.competitions[0].status.featuredAthletes[1].team.nickname + '</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;
  stars_lastGameLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries
      columns:
        - name: ''
          data: leaders
          modify: |-

            if (typeof x.team.logo !== 'undefined') {
              if (x.team.id === "9") {

                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:25px; vertical-align:middle; margin2.5px 0;">' +         
                '</div>';
              } else {
                '<div style="text-align:center;">' +
                  '<img src="' + x.team.logo + '" style="height:20px; vertical-align:middle; margin:2.5px 0;">' +           
                '</div>';
              }
            }  
        - name: <div style="height:20px;text-align:center;color:white;">Goals</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[0].leaders[0].athlete.links[0].href &&
            x.leaders[0].leaders[0].athlete.headshot.href && 
              x.leaders[0].leaders[0].athlete.shortName && x.leaders[0].leaders[0].displayValue) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[0].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[0].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[0].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '(' +
                              '<span style="font-weight:bold;font-size:12px;color:white;">' + x.leaders[0].leaders[0].displayValue + '</span>' +
                              '<span style="font-weight:normal;font-size:12px;color:white;"> Goals)</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;">Assists</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[1].leaders[0].athlete.links[0].href &&
            x.leaders[1].leaders[0].athlete.headshot.href && 
              x.leaders[1].leaders[0].athlete.shortName && x.leaders[1].leaders[0].displayValue) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[1].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[1].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[1].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '(' +
                              '<span style="font-weight:bold;font-size:12px;color:white;">' + x.leaders[1].leaders[0].displayValue + '</span>' +
                              '<span style="font-weight:normal;font-size:12px;color:white;"> Assists)</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType;            
        - name: <div style="height:20px;text-align:center;color:white;">Points</div>
          data: leaders
          modify: >-
            var stackedType = '';  var stackedPlayer = '';

            if (x.leaders[2].leaders[0].athlete.links[0].href &&
            x.leaders[2].leaders[0].athlete.headshot.href && 
              x.leaders[2].leaders[0].athlete.shortName && x.leaders[2].leaders[0].displayValue) {
              stackedPlayer = '<div style="display:flex;align-items:center;justify-content:center;margin-top:5px;">' + 
                              '<a href="' + x.leaders[2].leaders[0].athlete.links[0].href + '" target="_blank" style="text-decoration:none;">' +
                              '<img src="' + x.leaders[2].leaders[0].athlete.headshot.href + '" style="height:18px;vertical-align:middle;">' +
                              '</a>&nbsp;' +
                              '<span style="font-size:12px;font-weight:normal;color:white;">' + x.leaders[2].leaders[0].athlete.shortName + '</span>' +
                              '</div>' +
                              '<div style="text-align:center; margin-top:5px;margin-bottom:5px;">' +
                              '(' +
                              '<span style="font-weight:bold;font-size:12px;color:white;">' + x.leaders[2].leaders[0].displayValue + '</span>' +
                              '<span style="font-weight:normal;font-size:12px;color:white;"> Points)</span>' +
                              '</div>';
            }

            stackedType = stackedPlayer; stackedType; 
  stars_lastGameGoals:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr td:nth-child(2): 'width: auto%;'
        tbody tr td:nth-child(3): 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 25px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries
      columns:
        - name: ''
          data: filtered_plays
          modify: |-
            var stackedType = '';  var stackedPlayer = '';
            if (
              x.period.displayValue &&
              x.clock.displayValue &&
              x.participants &&
              x.participants[0] &&
              x.participants[0].athlete &&
              x.participants[0].athlete.headshot &&
              x.participants[0].athlete.headshot.href &&
              x.participants[0].athlete.displayName)
              
            {

              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;padding-left:40px;">' + 
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.clock.displayValue + '</a>&nbsp;' + ' - ' + 
                              '</a>&nbsp;' + x.period.displayValue + ' Period ' + '</span>' +
                              '</div>' + 
                              '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;margin-bottom:10px;padding-left:5px;">' + 
                              '<img src="' + x.participants[0].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.text +
                              '</span>' +
                              '</div>';
            } else if (x.text) {
              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;padding-left:40px;">' + 
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.clock.displayValue + '</a>&nbsp;' + ' - ' + 
                              '</a>&nbsp;' + x.period.displayValue + ' Period ' + '</span>' +
                              '</div>' + 
                              '<div style="text-align:left;padding-left:10px;margin-top:5px;margin-bottom:10px;padding-left:40px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.text +
                              '</span>' +
                              '</div>';         
            } stackedType = stackedPlayer; stackedType;
  stars_lastGamePenalties:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr td:nth-child(2): 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 25px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries
      columns:
        - name: ''
          data: filtered_plays
          modify: |-
            var stackedType = '';  var stackedPlayer = '';
            if (
              x.participants &&
              x.participants[0] &&
              x.participants[0].athlete &&
              x.participants[0].athlete.headshot &&
              x.participants[0].athlete.headshot.href &&
              x.participants[0].athlete.displayName
            ) {
              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;padding-left:40px;">' + 
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.clock.displayValue + '</a>&nbsp;' + ' - ' + 
                              '</a>&nbsp;' + x.period.displayValue + ' Period ' + '</span>' +
                              '</div>' + 
                              '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;margin-bottom:10px;padding-left:5px;">' + 
                              '<img src="' + x.participants[0].athlete.headshot.href + '" style="height:20px;vertical-align:middle;">' +
                              '</a>&nbsp;&nbsp;' +
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.text +
                              '</span>' +
                              '</div>';
            } else if (x.text) {
              stackedPlayer = '<div style="display:flex;align-items:left;justify-content:left;margin-top:5px;padding-left:40px;">' + 
                              '<span style="font-size:14px;font-weight:normal;color:white;">' + x.clock.displayValue + '</a>&nbsp;' + ' - ' + 
                              '</a>&nbsp;' + x.period.displayValue + ' Period ' + '</span>' +
                              '</div>' + 
                              '<div style="text-align:left;padding-left:10px;margin-top:5px;margin-bottom:10px;padding-left:40px;">' +
                              '<span style="font-weight:normal;font-size:14px;color:white;">' + x.text +
                              '</span>' +
                              '</div>';         
            }
            stackedType = stackedPlayer; stackedType;
  stars_lastTeamsStats:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: boxscore
          modify: >-
            var stackedPlHld = '';  var stackedTeam ='';  var stackedShots =
            '';  var stackedHits = '';  var stackedFW = '';   var stackedFWP =
            '';  var stackedPPO = '';  var stackedPPG = '';  var stackedPPP =
            '';  var stackedSHG = '';   var stackedPen = '';  var stackedPIM =
            '';  var stackedBS = '';  var stackedTA = '';  var stackedGA = '';  

            if (typeof x.teams[0].team.logo !== 'undefined') {
              stackedPlHld = '<div style="height:50px; width:50px; display:inline-block; margin-right:25px; background:transparent;"></div>';
            } if (typeof x.teams[0].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;display:inline-block;background:transparent;"></div>';        
            } if (typeof x.teams[0].statistics[3].displayValue !== 'undefined')
            {
              stackedShots = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Shots ';
            } if (typeof x.teams[0].statistics[1].displayValue !== 'undefined')
            {
              stackedHits = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Hits ';
            } if (typeof x.teams[0].statistics[9].displayValue !== 'undefined')
            {
              stackedFW = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Faceoffs Won ';
            } if (typeof x.teams[0].statistics[10].displayValue !== 'undefined')
            {
              stackedFWP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">&nbsp;&nbsp;&nbsp;&nbsp;Faceoff Win Percent ';
            } if (typeof x.teams[0].statistics[5].displayValue !== 'undefined')
            {
              stackedPPO = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Power Play Opportunities ';
            } if (typeof x.teams[0].statistics[4].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">&nbsp;&nbsp;&nbsp;&nbsp;Power Play Goals ';
            } if (typeof x.teams[0].statistics[6].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">&nbsp;&nbsp;&nbsp;&nbsp;Power Play Percentage ';
            } if (typeof x.teams[0].statistics[7].displayValue !== 'undefined')
            {
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Short Handed Goals ';
            } if (typeof x.teams[0].statistics[12].displayValue !== 'undefined')
            {
              stackedPen = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Total Penalties ';
            } if (typeof x.teams[0].statistics[13].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Penalty Minutes ';
            } if (typeof x.teams[0].statistics[0].displayValue !== 'undefined')
            {
              stackedBS = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Blocked Shots ';
            } if (typeof x.teams[0].statistics[2].displayValue !== 'undefined')
            {
              stackedTA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Takeaways ';
            } 

            if (typeof x.teams[0].statistics[11].displayValue !== 'undefined') {
              stackedGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">Giveaways ';
            }

            stackedPlHld + stackedTeam + stackedShots + stackedHits + stackedFW
            + stackedFWP + stackedPPO + stackedPPG + stackedPPP + stackedSHG +
            stackedPen + stackedPIM + stackedBS + stackedTA + stackedGA
        - name: ''
          data: boxscore
          modify: >-
            var stackedLogo = '';  var stackedTeam ='';  var stackedShots = ''; 
            var stackedHits = '';  var stackedFW = '';   var stackedFWP = ''; 
            var stackedPPO = '';  var stackedPPG = '';  var stackedPPP = ''; 
            var stackedSHG = '';   var stackedPen = '';  var stackedPIM = ''; 
            var stackedBS = '';  var stackedTA = '';  var stackedGA = '';  

            if (typeof x.teams[0].team.logo !== 'undefined') {
              if (x.teams[0].team.id === "9") {

                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[0].team.logo + '" style="height:40px; vertical-align:middle; margin-top:0px;">' +
                              '</div>';
              } else {
                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[0].team.logo + '" style="height:30px; vertical-align:middle; margin-top:5px;">' +          
                              '</div>';
              }
            }

            if (typeof x.teams[0].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;display:inline-block;background:transparent;"></div>';                              
            } if (typeof x.teams[0].statistics[3].displayValue !== 'undefined')
            {
              stackedShots = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[3].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[1].displayValue !== 'undefined')
            {
              stackedHits = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[1].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[9].displayValue !== 'undefined')
            {
              stackedFW = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[9].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[10].displayValue !== 'undefined')
            {
              stackedFWP = '<div style="font-weight:bold;font-size:15px;text-align:left;color:silver;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[10].displayValue + '</span></div>';
            } if (typeof x.teams[0].statistics[5].displayValue !== 'undefined')
            {
              stackedPPO = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[5].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[4].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[4].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[6].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[6].displayValue + '</span></div>';              
            } 

            if (typeof x.teams[0].statistics[7].displayValue !== 'undefined'){
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[7].displayValue + '</span></div>';              
            } 


            if (typeof x.teams[0].statistics[12].displayValue !== 'undefined') {
              stackedPen = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[12].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[13].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[13].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[0].displayValue !== 'undefined')
            {
              stackedBS = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[0].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[2].displayValue !== 'undefined')
            {
              stackedTA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[2].displayValue + '</span></div>';              
            } if (typeof x.teams[0].statistics[11].displayValue !== 'undefined')
            {
              stackedGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[0].statistics[11].displayValue + '</span></div>';              
            }

            stackedLogo + stackedTeam + stackedShots + stackedHits + stackedFW +
            stackedFWP + stackedPPO + stackedPPG + stackedPPP + stackedSHG +
            stackedPen + stackedPIM + stackedBS + stackedTA + stackedGA;
        - name: ''
          data: boxscore
          modify: >-
            var stackedLogo = '';  var stackedTeam ='';  var stackedShots = ''; 
            var stackedHits = '';  var stackedFW = '';   var stackedFWP = ''; 
            var stackedPPO = '';  var stackedPPG = '';  var stackedPPP = ''; 
            var stackedSHG = '';   var stackedPen = '';  var stackedPIM = ''; 
            var stackedBS = '';  var stackedTA = '';  var stackedGA = '';  


            if (typeof x.teams[1].team.logo !== 'undefined') {
              if (x.teams[1].team.id === "9") {

                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[1].team.logo + '" style="height:40px; vertical-align:middle; margin-top:0px;">' +
                              '</div>';
              } else {
                stackedLogo = '<div style="text-align:center;">' +
                                '<img src="' + x.teams[1].team.logo + '" style="height:30px; vertical-align:middle; margin-top:5px;">' +          
                              '</div>';
              }
            }

            if (typeof x.teams[1].team.displayName !== 'undefined') {
              stackedTeam = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;display:inline-block;background:transparent;"></div>';                                
            } if (typeof x.teams[1].statistics[3].displayValue !== 'undefined')
            {
              stackedShots = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[3].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[1].displayValue !== 'undefined')
            {
              stackedHits = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[1].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[9].displayValue !== 'undefined')
            {
              stackedFW = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[9].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[10].displayValue !== 'undefined')
            {
              stackedFWP = '<div style="font-weight:bold;font-size:15px;text-align:left;color:silver;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[10].displayValue + '</span></div>';
            } if (typeof x.teams[1].statistics[5].displayValue !== 'undefined')
            {
              stackedPPO = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[5].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[4].displayValue !== 'undefined')
            {
              stackedPPG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:silver;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[4].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[6].displayValue !== 'undefined')
            {
              stackedPPP = '<div style="font-weight:normal;font-size:15px;text-align:left;color:si;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[6].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[7].displayValue !== 'undefined')
            {
              stackedSHG = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[7].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[12].displayValue !== 'undefined')
            {
              stackedPen = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[12].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[13].displayValue !== 'undefined')
            {
              stackedPIM = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[13].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[0].displayValue !== 'undefined')
            {
              stackedBS = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[0].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[2].displayValue !== 'undefined')
            {
              stackedTA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[2].displayValue + '</span></div>';              
            } if (typeof x.teams[1].statistics[11].displayValue !== 'undefined')
            {
              stackedGA = '<div style="font-weight:normal;font-size:15px;text-align:left;color:white;margin-top:5px;">' +
                                   '<span style="padding-left:10px;font-weight:normal;font-size:14px;text-align:left;color:pearl;margin-top:5px;margin-bottom:5px;">' + x.teams[1].statistics[11].displayValue + '</span></div>';              
            }

            stackedLogo + stackedTeam + stackedShots + stackedHits + stackedFW +
            stackedFWP + stackedPPO + stackedPPG + stackedPPP + stackedSHG +
            stackedPen + stackedPIM + stackedBS + stackedTA + stackedGA;
  stars_lastSeasonSeries:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 30%;'
        tbody tr td:nth-child(2): 'width: 20%;'
        tbody tr:nth-child(even): 'background-color: black;'
        tbody tr:nth-child(odd): 'background-color: black;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: ''
          data: seasonseries
          modify: >-
            var stackedSeasonSeries = '';  var stackedTitle = '';  var
            stackedSummary = '';   var maxGames = 6;

            if (typeof x.summary !== 'undefined') {
              stackedSummary = '<div style="padding-left:15px;font-weight:bold;font-size:15px;text-align:left;color:white;margin-top:5px;margin-bottom:10px;">' + '2024-25 Season:' + '</a>&nbsp;&nbsp;' + x.summary + '</div>';
            }

            for (var i = 0; i < maxGames && i < x.events.length; i++) {
                var game = x.events[i];
                var competitor0 = game.competitors[0];
                var competitor1 = game.competitors[1];
                var score0 = competitor0.score;
                var score1 = competitor1.score;
                var logo0 = competitor0.team.logo;
                var logo1 = competitor1.team.logo;
                var color0 = game.statusType.completed && score0 > score1 ? 'green' : score0 < score1 ? 'red' : 'white';
                var color1 = game.statusType.completed && score1 > score0 ? 'green' : score1 < score0 ? 'red' : 'white';
                var winnerBoldStyle0 = game.statusType.completed && score0 > score1 ? 'font-weight:bold;' : '';
                var winnerBoldStyle1 = game.statusType.completed && score1 > score0 ? 'font-weight:bold;' : '';
                var stackedGame = '<div style="margin-bottom:10px;">';

                if (logo1) {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                   '<img src="' + logo1 + '" style="height:30px; vertical-align:middle; margin-right:10px;">' +
                                   '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle1 + '">' + competitor1.team.abbreviation + '</span>';
                    if (game.statusType.completed) {
                        stackedGame += '<span style="color:' + color1 + '; margin-left:5px; font-size:20px; vertical-align:middle; font-weight:bold; text-decoration:none;">' + score1 + '</span>';
                    }

                    if (typeof game.date !== 'undefined') {
                        const dateUTC = new Date(game.date);
                        const options = { month: 'short', day: 'numeric', year: 'numeric' };
                        const dateLocal = dateUTC.toLocaleDateString([], options).replace(/,/, ' ,');
                        stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + dateLocal + '</span>';
                    }

                    stackedGame += '</div>';
                }

                if (logo0) {
                    stackedGame += '<div style="margin-bottom:0px; padding-left:5px; display: flex; align-items: center;">' +
                                   '<img src="' + logo0 + '" style="height:30px; vertical-align:middle; margin-right:10px;">' +
                                   '<span style="text-align:left; vertical-align:middle; line-height:25px; margin-right:10px; ' + winnerBoldStyle0 + '">' + competitor0.team.abbreviation + '</span>';
                    if (game.statusType.completed) {
                        stackedGame += '<span style="color:' + color0 + '; margin-left:5px; font-size:20px; vertical-align:middle; font-weight:bold; text-decoration:none;">' + score0 + '</span>';
                    }

                    if (game.statusType.id === "1" || game.statusType.id === "3") {
                        if (typeof game.statusType.description !== 'undefined') {
                            stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + game.statusType.shortDetail + '</span>';
                        }
                    } else if (game.statusType.id === "2") {
                        if (typeof game.statusType.shortDetail !== 'undefined') {
                            stackedGame += '<span style="margin-left:125px; font-size:14px; color:white;">' + game.statusType.description + '</span>';
                        }
                    }

                    stackedGame += '</div>';
                }

                stackedGame += '</div>';
                stackedSeasonSeries += stackedGame;
            }

            stackedSeasonSeries = stackedTitle + stackedSummary +
            stackedSeasonSeries
  stars_playerStats:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
        tbody tr td:nth-child(5): 'background-color: dimgrey; color: white;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 10px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_player_stats
        exclude: '[[excluded_entities]]'
      sort_by: skaters-
      columns:
        - hidden: points
          data: skaters
          modify: x.points
        - name: >-
            <div style="height:20px;text-align:left;color:white;">Player
            Name</div>
          data: skaters
          modify: |-
            if (typeof x.headshot !== 'undefined') {
              '<div style="text-align:left;padding-left:0px;margin:0px;">' +
                '<img src="' + x.headshot + '" style="height:20px;vertical-align:middle;margin-bottom:8px">' +
                '<span style="padding-left:10px;font-weight:normal;font-size:13px;text-align:left;color:white;">' + 
                x.firstName.default.charAt(0) + '.' +
                '</a>&nbsp;' + x.lastName.default +
                '<span style="padding-left:7.5px;font-weight:bold;font-size:13px;text-align:left;color:#20864c;">' + x.positionCode + '</span></div>';
            }
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">GP</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.gamesPlayed + '</div>'
        - name: <div style="height:20px;text-align:center;color:white;">G</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.goals + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">A</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.assists + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">PTS</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.points + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">+/-</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.plusMinus + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">PIM</div>
          data: skaters
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.penaltyMinutes + '</div>'
  stars_goalieStats:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr td:nth-child(n+2): 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
        tbody tr td:nth-child(3): 'background-color: dimgrey; color: white;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 10px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_player_stats
        exclude: '[[excluded_entities]]'
      sort_by: goalies-
      columns:
        - hidden: GP
          data: goalies
          modify: x.gamesPlayed
        - name: >-
            <div style="height:20px;text-align:left;color:white;">Player
            Name</div>
          data: goalies
          modify: |-
            if (typeof x.headshot !== 'undefined') {
              '<div style="text-align:left;">' +
                    '<img src="' + x.headshot + '" style="height:20px;vertical-align:middle;margin-bottom:8px">' +
              '<span style="padding-left:0px;font-weight:normal;font-size:13px;text-align:left;color:white;">' + 
                x.firstName.default.charAt(0) + '.' +
                '</a>&nbsp;' + x.lastName.default +
                    '<span style="padding-left:7.5px;font-weight:bold;font-size:13px;text-align:left;color:#20864c;">' + 'G' + '</span></div>';                    
            }
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">GP</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.gamesPlayed + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">W</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.wins + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">L</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.losses + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">OTL</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.overtimeLosses + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">GAA</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + parseFloat(x.goalsAgainstAverage).toFixed(2) + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">SV%</div>
          data: goalies
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.savePercentage.toFixed(3).substring(1) + '</div>'
  stars_players:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 13px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries
      columns:
        - hidden: Years
          data: '[[attribute]]'
          modify: >-
            (x.position.id + "").padStart(5, '0') + (100 - (x.experience.years
            || 0)).toString().padStart(3, '0')
        - name: >-
            <div
            style="height:20px;text-align:left;color:white;font-size:13px;">Player
            Name</div>
          data: '[[attribute]]'
          modify: >-
            if (x.links && x.links[0] && x.links[0].href && x.headshot &&
            x.headshot.href && x.shortName && x.jersey) {
              '<div><a href="' + x.links[0].href + '" target="_blank">' +
              '<img src="' + x.headshot.href + '" style="height:18px;margin-bottom:8px;vertical-align:middle;font-size:13px;color:white;">' +
              '</a>&nbsp;' + x.shortName + '</a>' +
              '<span style="font-weight:normal;font-size:13px;color:#20864c;">&nbsp;' + x.jersey + '</span>' +
              '</div>';
            } else {
              '<div style="margin:8px 0px 8px 55px;display:flex;align-items:center;height:100%;">' +
              (x.shortName ? x.shortName : 'Unknown Player') +
              (x.jersey ? '<span style="font-weight:normal;font-size:13px;color:#20864c;">&nbsp;&nbsp;' + x.jersey + '</span>' : '') +
              '</div>';
            }
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Pos</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.position.abbreviation + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Sh</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.hand.abbreviation + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Age</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.age + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Ht</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.displayHeight + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Wt</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.displayWeight + '</div>'
  stars_goalies:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:nth-child(n+1): 'width: auto;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - hidden: Years
          data: '[[attribute]]'
          modify: x.experience.years
        - name: >-
            <div
            style="height:20px;text-align:left;color:white;font-size:13px;">Player
            Name</div>
          data: '[[attribute]]'
          modify: >-
            '<div>&nbsp;<a href="' + x.links[0].href + '" target="_blank"><img
            src="' + x.headshot.href + '"
            style="height:20px;margin-bottom:8px;vertical-align:middle;font-size:13px;color:white;"></a>&nbsp;&nbsp;&nbsp;'
            + x.shortName + '</a>' + ' ' + '<span
            style="font-weight:normal;font-size:13px;color:#20864c;">' +
            x.jersey + '</span>' + '</div>';
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Pos</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.position.abbreviation + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Gl</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.hand.abbreviation + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Age</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.age + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Ht</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.displayHeight + '</div>'
        - name: >-
            <div
            style="height:20px;text-align:center;color:white;font-size:13px;">Wt</div>
          data: '[[attribute]]'
          modify: >
            '<div
            style="height:20px;text-align:center;color:white;font-size:13px;">'
            + x.displayWeight + '</div>'
  stars_prospects_skaters:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: Player Name
          data: '[[attribute]]'
          modify: |-
            if (typeof x.headshot !== 'undefined') {
              '<div style="text-align:left;padding-left:0px;margin:0px;">' +
                '<img src="' + x.headshot + '" style="height:20px;vertical-align:middle;margin-bottom:8px">' +
                '<span style="padding-left:10px;font-weight:normal;font-size:13px;text-align:left;color:white;">' + 
                x.firstName.default.charAt(0) + '.' +
                '</a>&nbsp;' + x.lastName.default +
                '</div>';
            }
        - name: Pos
          data: '[[attribute]]'
          modify: x.positionCode
        - name: Sh
          data: '[[attribute]]'
          modify: x.shootsCatches
        - name: Age
          data: '[[attribute]]'
          modify: |-
            (function() {
              var birthDate = new Date(x.birthDate);
              var today = new Date();
              var age = today.getFullYear() - birthDate.getFullYear();
              var m = today.getMonth() - birthDate.getMonth();
              if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
              }
              return age;
            })();      
        - name: Ht
          data: '[[attribute]]'
          modify: |-
            (function() {
              var inches = x.heightInInches;
              var feet = Math.floor(inches / 12);
              var remainingInches = inches % 12;
              return feet + "'" + remainingInches + '"';
            })();
        - name: Wt
          data: '[[attribute]]'
          modify: x.weightInPounds + " lbs";
  stars_prospects_goalies:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: entries-
      columns:
        - name: Player Name
          data: '[[attribute]]'
          modify: |-
            if (typeof x.headshot !== 'undefined') {
              '<div style="text-align:left;padding-left:0px;margin:0px;">' +
                '<img src="' + x.headshot + '" style="height:20px;vertical-align:middle;margin-bottom:8px">' +
                '<span style="padding-left:10px;font-weight:normal;font-size:13px;text-align:left;color:white;">' + 
                x.firstName.default.charAt(0) + '.' +
                '</a>&nbsp;' + x.lastName.default +
                '</div>';
            }
        - name: Pos
          data: '[[attribute]]'
          modify: x.positionCode
        - name: Gl
          data: '[[attribute]]'
          modify: x.shootsCatches
        - name: Age
          data: '[[attribute]]'
          modify: |-
            (function() {
              var birthDate = new Date(x.birthDate);
              var today = new Date();
              var age = today.getFullYear() - birthDate.getFullYear();
              var m = today.getMonth() - birthDate.getMonth();
              if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
              }
              return age;
            })();      
        - name: Ht
          data: '[[attribute]]'
          modify: |-
            (function() {
              var inches = x.heightInInches;
              var feet = Math.floor(inches / 12);
              var remainingInches = inches % 12;
              return feet + "'" + remainingInches + '"';
            })();
        - name: Wt
          data: '[[attribute]]'
          modify: x.weightInPounds + " lbs";
  stars_news:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               margin-top: -100px!important;
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_news
      sort_by: events
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Headlines</div>
          data: articles
          modify: >-
            var stackedNews = '';  

            var stackedDate = '';   if (typeof x.lastModified !== 'undefined') {
              const dateUTC = new Date(x.lastModified);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Date: 
                              <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">
                              ${formattedDate} - ${formattedTime}</span></div>`;
            }

            var stackedSummary = '';   if (typeof x.description !== 'undefined')
            {
              stackedSummary = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Summary: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">' + x.description + '</span></div>';
            }

            stackedNews = stackedDate + stackedSummary;
  stars_injuries:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               margin-top: -100px!important;
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_injuries
      sort_by: events
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Injuries</div>
          data: injuries
          modify: >-
            var stackedInjuries = '';   var stackedPlayer = '';   var
            stackedStatus = '';   var stackedShort = '';   var stackedLong =
            '';   var stackedDate = '';  

            if (typeof x.athlete !== 'undefined' && x.athlete.links &&
            x.athlete.links[0] && x.athlete.headshot) {
              stackedPlayer = '<div style="display:flex;align-items:center;font-weight:normal;font-size:16px;text-align:left;margin:5px 0px 0px 5px;color:white;">' +
                              '<a href="' + x.athlete.links[0].href + '" target="_blank" style="display:inline-block;margin-right:5px;">' +
                                '<img src="' + x.athlete.headshot.href + '" style="height:30px;width:auto;vertical-align:middle;">' +
                              '</a>' +
                              '<span style="margin-left:5px;font-weight:bold;font-size:16;color:white;">' + x.athlete.displayName + '</span>' +
                              '<span style="margin-left:7.5px;font-weight:normal;font-size:14;color:#20864c;">' + x.athlete.position.abbreviation + '</span>' +
                              '</div>';
            }

            if (typeof x.status !== 'undefined') {
              stackedStatus = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Status: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.status + '</span></div>';
            }

            if (typeof x.shortComment !== 'undefined') {
              stackedShort = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Short: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.shortComment + '</span></div>';
            }

            if (typeof x.longComment !== 'undefined') {
              stackedLong = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Long: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.longComment + '</span></div>';
            }

            if (typeof x.date !== 'undefined') {
              const dateUTC = new Date(x.date);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:14px;text-align:left;color:white;margin:5px 0px 10px 0px;">Updated: 
                              <span style="font-weight:normal;font-size:14px;text-align:left;color:pearl;margin:5px 0px 10px 0px;">
                              ${formattedDate} - ${formattedTime}</span></div>`;

            }

            stackedInjuries = stackedPlayer + stackedStatus + stackedShort +
            stackedLong + stackedDate; stackedInjuries;
  stars_transactions:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: auto%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.dallas_stars_transactions
      sort_by: events
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Transactions</div>
          data: transactions
          modify: >-
            var stackedTransactions = '';  

            var stackedDate = '';   if (typeof x.date !== 'undefined') {
              const dateUTC = new Date(x.date);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:5px 0px 5px 0px;">Date: 
                              <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">
                              ${formattedDate} - ${formattedTime}</span></div>`;
            } 

            var stackedDescription = '';    if (typeof x.description !==
            'undefined') {
              stackedDescription = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:5px 0px 10px 0px;">Description: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">' + x.description + '</span></div>';
            }

            stackedTransactions = stackedDate + stackedDescription;
  nhl_settings:
    card:
      type: custom:flex-table-card
      title: '[[title]]'
      css:
        table+: 'padding: 0px; width: 425px;'
        tbody tr td:first-child: 'width: .1%;'
        tbody tr td:nth-child(2): 'width: 5.2%;'
        tbody tr td:nth-child(3): 'width: .2%;'
        tbody tr td:nth-child(5): 'width: 3%;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
        tbody tr td:nth-child(4): 'width:.2%;background-color: dimgrey; color: white;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 13px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
        exclude: '[[excluded_entities]]'
      sort_by: entries-
      columns:
        - hidden: <div>PTS</div>
          data: '[[attribute]]'
          modify: x.stats.find(y=>y.abbreviation == 'PTS').displayValue
        - name: <div>C</div>
          data: '[[attribute]]'
          modify: >-
            if(typeof x.stats.find(y=>y.abbreviation == 'CLINCH') !==
            'undefined' ){x.stats.find(y=>y.abbreviation ==
            'CLINCH').displayValue}else{'-'}
        - name: Team
          data: '[[attribute]]'
          modify: >-
            '<div>&nbsp;<a href="' + x.team.links[0].href + '"
            target="_blank"><img src="' + x.team.logos[0].href + '"
            style="height: 18px;vertical-align:middle;"></a>&nbsp;&nbsp;&nbsp;'
            + x.team.displayName + '</div>'
        - name: <div>GP</div>
          data: '[[attribute]]'
          modify: x.stats.find(y=>y.abbreviation == 'GP').displayValue
        - name: <div>Pts</div>
          data: '[[attribute]]'
          modify: x.stats.find(y=>y.abbreviation == 'PTS').displayValue
        - name: <div>Record</div>
          data: '[[attribute]]'
          modify: >
            (x.stats.find(y => y.abbreviation === 'W')?.displayValue || '0') +
            '-' + (x.stats.find(y => y.abbreviation === 'L')?.displayValue ||
            '0') + '-' + (x.stats.find(y => y.abbreviation ===
            'OTL')?.displayValue || '0')
  nhl_schedule:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 60px;'
        tbody tr td:nth-child(2): 'width: 250px;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
        tbody tr td:nth-child(4): 'background-color: dimgrey; color: white;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: events
      columns:
        - hidden: API Date
          data: '[[attribute]]'
          modify: x.date
        - name: <div style="height:20px;text-indent:10px;">Date</div>
          data: '[[attribute]]'
          modify: >-
            var stackedDateAndTime = '';  var stackedDate = '';  var stackedTime
            = ''; if (typeof x.date !== 'undefined') {

              const dateUTC = new Date(x.date);
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
              const month = localDate.getMonth() + 1;
              const day = localDate.getDate();
              const year = String(localDate.getFullYear()).slice(-2);
              const formattedDate = `${month}-${day}-${year}`;

              
              stackedDate = '<div style="margin:5px 2.5px 5px 2.5px;font-weight:normal;text-align:center;color:white;">' + formattedDate + '</div>';

              if (typeof x.status.type.detail !== 'undefined') {
                if (x.competitions[0].status.type.completed) {
                  stackedTime = '<div style="margin:0px 2.5px 5px 2.5px;font-weight:normal;text-align:center;color:white;"><a href="' + x.links[0].href + '" target="_blank" style="text-decoration:none;color:white;">Final</a></div>';
                } else {
                  if (typeof x.date !== 'undefined' && typeof x.links !== 'undefined' && x.links.length > 0) {
                    const dateUTC = new Date(x.date);
                    const timeLocal = dateUTC.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });
                    stackedTime = '<div style="margin:5px 2.5px 0px 2.5px;font-weight:normal;font-size:12px;text-align:center;color:white;"><a href="' + x.links[0].href + '" target="_blank" style="text-decoration:none;color:white;">' + timeLocal + '</a></div>';
                  }
                }
              }
              stackedDateAndTime = '<div>' + stackedDate + stackedTime + '</div>';
            } stackedDateAndTime;
        - name: <div style="height:20px;text-indent:10px;">Teams</div>
          data: '[[attribute]]'
          modify: >-
            let stackedTeams = '';

            var competitor1 = x.competitions[0].competitors[1]; var summary1 =
            competitor1.records && competitor1.records[0] ?
            competitor1.records[0].summary : '';

            let team1HTML = ''; if (competitor1.team.links &&
            competitor1.team.links.length > 0) {
              team1HTML = '<div style="margin:10px 5px;color:white;">&nbsp;<a href="' +
                          competitor1.team.links[0].href +
                          '" target="_blank"><img src="' +
                          competitor1.team.logo +
                          '" style="height:25px;vertical-align:middle;"></a>&nbsp;&nbsp;&nbsp;' +
                          competitor1.team.displayName + (summary1 ? ' (' + summary1 + ')' : '') +
                          '</div>';
            } else {
              team1HTML = '<div style="margin:0px 5px 5px 5px;">' +
                          competitor1.team.displayName +
                          (summary1 ? ' (' + summary1 + ')' : '') +
                          '</div>';
            }

            stackedTeams += team1HTML;

            var competitor0 = x.competitions[0].competitors[0]; var summary0 =
            competitor0.records && competitor0.records[0] ?
            competitor0.records[0].summary : '';

            let team0HTML = ''; if (competitor0.team.links &&
            competitor0.team.links.length > 0) {
              team0HTML = '<div style="margin:10px 5px;color:white;">&nbsp;<a href="' +
                          competitor0.team.links[0].href +
                          '" target="_blank"><img src="' +
                          competitor0.team.logo +
                          '" style="height:25px;vertical-align:middle;"></a>&nbsp;&nbsp;&nbsp;' +
                          competitor0.team.displayName + (summary0 ? ' (' + summary0 + ')' : '') +
                          '</div>';
            } else {
              team0HTML = '<div style="margin:0px 5px 5px 5px;">' +
                          competitor0.team.displayName +
                          (summary0 ? ' (' + summary0 + ')' : '') +
                          '</div>';
            }

            stackedTeams += team0HTML;

            let tvHTML = '';

            if (x.competitions[0].broadcasts &&
            x.competitions[0].broadcasts.length > 0) {
              let firstBroadcast = x.competitions[0].broadcasts[0].names[0] || '';
              let secondBroadcast = x.competitions[0].broadcasts[0].names[1] || '';

              let broadcastText = '';
              if (firstBroadcast) broadcastText += firstBroadcast;
              if (secondBroadcast) broadcastText += ', ' + secondBroadcast;

              if (broadcastText) {
                tvHTML = '<div style="font-weight:bold;font-size:12px;text-align:left;text-indent:45px;color:white;margin-bottom:5px;">' + broadcastText + '</div>';
              }
            }

            stackedTeams += tvHTML;

            stackedTeams;
  nhl_results:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding: 0px; width: auto%;'
        tbody tr td:first-child: 'width: 50px;'
        tbody tr td:nth-child(2): 'width: 300px;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
        tbody tr td:nth-child(4): 'background-color: dimgrey; color: white;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: px!important;
               font-weight: bold!important;
             }
      entities:
        include: '[[entity]]'
      sort_by: events-
      columns:
        - hidden: API Date
          data: '[[attribute]]'
          modify: x.date
        - name: <div style="height:20px;text-indent:10px;">Date</div>
          data: '[[attribute]]'
          modify: |-

            let dateHTML = '';
              if (typeof x.date !== 'undefined') {
                const dateUTC = new Date(x.date);
                const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);
                const month = localDate.getMonth() + 1;
                const day = localDate.getDate();
                const year = String(localDate.getFullYear()).slice(-2);
                const formattedDate = `${month}-${day}-${year}`;

                dateHTML = '<div style="margin:2.5px 2.5px;font-weight:normal;text-align:center;color:white;"><a href="' + x.links[0].href + 
                             '" target="_blank" style="text-decoration:none;color:white;">' + formattedDate + '</a></div>';

                    if (typeof x.status.type.detail !== 'undefined') {
                      if (x.competitions[0].status.type.completed) {
                        dateHTML += '<div style="margin:2.5px 2.5px;font-weight:normal;text-align:center;color:white;"><a href="' +
                                    x.links[0].href +
                                    '" target="_blank" style="text-decoration:none;color:white;">' + x.status.type.detail + '</a></div>';
                    }
                }
            } dateHTML;
        - name: <div style="height:20px;text-indent:10px;">Result / Teams</div>
          data: '[[attribute]]'
          modify: |-
            var stackedTeams = '';

            var competitor1 = x.competitions[0].competitors[1];
            if (competitor1.team.isActive) {
              var score1 = competitor1.score || 0;
              var logo1 = competitor1.team.logo || '';
              var link1 = (competitor1.team.links && competitor1.team.links.length > 0) ? competitor1.team.links[0].href : '';
              var summary1 = competitor1.records && competitor1.records[0] ? competitor1.records[0].summary : '';
              var color1 = (x.competitions[0].status.type.completed && score1 > x.competitions[0].competitors[0].score) ? 'green' : (score1 < x.competitions[0].competitors[0].score ? 'red' : 'white');

              if (logo1 && link1) {
                stackedTeams += '<div style="margin:0px 0px 5px 10px;">' +
                                '<span style="color:' + color1 + '; font-size:20px; vertical-align:middle; font-weight:bold;text-decoration:none;">' + score1 + '</span>&nbsp;&nbsp;&nbsp;' +
                                '<a href="' + link1 + '" target="_blank" style="text-decoration:none;">' + 
                                '<img src="' + logo1 + '" style="height:25px; vertical-align:middle;margin:5px 5px;">' +
                                '</a>' +
                                '<span style="text-align:left; vertical-align:middle; line-height:25px;">' + competitor1.team.displayName + (summary1 ? ' (' + summary1 + ')' : '') +
                                '</span>' +
                                '</div>';                  
              
              } else {
                stackedTeams += '<div style="margin:0px 0px 5px 10px;text-align:left;">' +
                                '<span style="color:' + color1 + '; font-size:25px; font-weight:bold; text-decoration:none; line-height:25px;">' + score1 + '</span>' +
                                competitor1.team.displayName + (summary1 ? ' (' + summary1 + ')' : '') +
                                '</div>';
              }
            }

            var competitor0 = x.competitions[0].competitors[0];
            if (competitor0.team.isActive) {
              var score0 = competitor0.score || 0;
              var logo0 = competitor0.team.logo || '';
              var link0 = (competitor0.team.links && competitor0.team.links.length > 0) ? competitor0.team.links[0].href : '';
              var summary0 = competitor0.records && competitor0.records[0] ? competitor0.records[0].summary : '';
              var color0 = (x.competitions[0].status.type.completed && score0 > score1) ? 'green' : (score0 < score1 ? 'red' : 'white');

              if (logo0 && link0) {
                stackedTeams += '<div style="margin:0px 0px 5px 10px;">' +
                                '<span style="color:' + color0 + '; font-size:20px; vertical-align:middle; font-weight:bold; text-decoration:none;">' + score0 + '</span>&nbsp;&nbsp;&nbsp;' +
                                '<a href="' + link0 + '" target="_blank" style="text-decoration:none;">' +
                                '<img src="' + logo0 + '" style="height:25px; vertical-align:middle;margin:5px 5px">' +
                                '</a>' +
                                '<span style="text-align:left; vertical-align:middle; line-height:25px;">' + competitor0.team.displayName + (summary0 ? ' (' + summary0 + ')' : '') +
                                '</span>' +
                                '</div>';
              } else {
                stackedTeams += '<div style="margin:0px 0px 5px 10px;text-align:left;">' +
                                '<span style="color:' + color0 + '; font-size:25px; font-weight:bold; text-decoration:none; line-height:25px;">' + score0 + '</span>' +
                                competitor0.team.displayName + (summary0 ? ' (' + summary0 + ')' : '') +
                                '</div>';
              }
            }
            stackedTeams;
  nhl_pointsLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Points
            Leaders</div>
          data: points
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">Pts</div>
          data: points
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_goalsLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Goals
            Leaders</div>
          data: goals
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">G</div>
          data: goals
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_assistsLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Assists
            Leaders</div>
          data: assists
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">A</div>
          data: assists
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_plusMinusLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Plus/Minus
            Leaders</div>
          data: plusMinus
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">+/-</div>
          data: plusMinus
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_timeOnIceLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Time on Ice
            Leaders</div>
          data: toi
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">TOI</div>
          data: toi
          modify: |-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' + 
              Math.floor(x.value / 60) + ':' + 
              String(Math.floor(x.value % 60)).padStart(2, '0') + 
            '</div>';
  nhl_penaltyMinutesLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_skaters
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Penalty
            Minutes Leaders</div>
          data: penaltyMins
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">PIM</div>
          data: penaltyMins
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_goalsAgainstAverageLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_goalies
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Goals
            Against Leaders</div>
          data: goalsAgainstAverage
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">GAA</div>
          data: goalsAgainstAverage
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value.toFixed(2) + '</div>';
  nhl_savePercentageLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_goalies
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Save
            Percentage Leaders</div>
          data: savePctg
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">SVpct</div>
          data: savePctg
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value.toFixed(2) + '</div>';
  nhl_winsLeaders:
    card:
      type: custom:flex-table-card
      css:
        table+: 'padding-top: 5px; width:auto%;'
        tbody tr td:first-child: width:auto%;
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 20px!important; 
               font-weight: bold!important;
             }
      entities:
        include: sensor.stats_nhl_goalies
      sort_by: entries
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px 5px;">Wins
            Leaders</div>
          data: wins
          modify: |-
            if (x.headshot && x.firstName.default && x.lastName.default &&
                x.position && x.value) {
                  '<img src="' + x.headshot + '" style="height:30px;width:30px;object-fit:cover;margin:5px 5px;vertical-align:middle;font-size:14px;color:white;">' +
                    '<span style="font-weight:bold;font-size:14px;color:white;margin-left:10px;">'+ x.firstName.default + '&nbsp;' + x.lastName.default + '&nbsp;' + ' - ' + '&nbsp;' + '</span>' +
                    '<span style="font-weight:normal;font-size:14px;color:silver;">' + x.teamAbbrev + '</span>' +
                  '</div>';
            }
        - name: <div style="height:20px;font-size:15px;margin:5px 5px;">W</div>
          data: wins
          modify: >-
            '<div style="font-size:14px;color:white;margin:0px 10px;">' +
            x.value + '</div>';
  nhl_news:
    card:
      type: custom:flex-table-card
      css:
        table+: width:auto%; margin-top:12px;
        tbody tr td:nth-child(n+1): 'width: auto;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               margin-top: -100px!important;
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.news_nhl
      sort_by: events
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Headlines</div>
          data: articles
          modify: >-
            var stackedNews = '';  

            var stackedDate = '';   if (typeof x.lastModified !== 'undefined') {
              const dateUTC = new Date(x.lastModified);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Date: 
                              <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">
                              ${formattedDate} - ${formattedTime}</span></div>`;

            } var stackedSummary = '';   if (typeof x.description !==
            'undefined') {
              stackedSummary = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Summary: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">' + x.description + '</span></div>';
            }

            stackedNews = stackedDate + stackedSummary;
                              
  nhl_injuries:
    card:
      type: custom:flex-table-card
      css:
        table+: width:auto%; margin-top:12px;
        tbody tr td:nth-child(n+1): 'width: auto;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               margin-top: -100px!important;
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.injuries_nhl
      sort_by: events
      columns:
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Injuries</div>
          data: injuries
          modify: >-
            var stackedInjuries = '';  

            var stackedTeam = '';    if (typeof
            x.injuries[0].athlete.team.displayName !== 'undefined') {
              stackedTeam = '<div style="display:flex;align-items:center;font-weight:normal;font-size:18px;text-align:left;margin:5px 0px 0px 5px;color:white;">' +
                              '<a href="' + x.injuries[0].athlete.team.links[0].href + '" target="_blank" style="display:inline-block;margin-right:5px;">' +
                                '<img src="' + x.injuries[0].athlete.team.logos[0].href + '" style="height:30px;width:auto;vertical-align:middle;">' +
                              '</a>' +
                              '<span style="margin-left:5px;font-weight:bold;font-size:16;color:white;">' + x.injuries[0].athlete.team.displayName + '</span>' +
                            '</div>';
            }

            var stackedPlayer = '';   if (typeof x.injuries[0].athlete !==
            'undefined' && x.injuries[0].athlete.links &&
            x.injuries[0].athlete.links[0] && x.injuries[0].athlete.headshot) {
              stackedPlayer = '<div style="display:flex;align-items:center;font-weight:bold;font-size:15px;text-align:left;margin:5px 0px 0px 0px;color:white;">Player: ' +             
                              '<a href="' + x.injuries[0].athlete.links[0].href + '" target="_blank" style="display:inline-block;margin:5px 0px 10px 5px;">' +
                              '<img src="' + x.injuries[0].athlete.headshot.href + '" style="height:25px;width:auto;vertical-align:middle;margin-bottom:5px;">' +
                              '</a>' +
                              '<span style="margin-left:5px;font-weight:bold;font-size:14;color:white;">' + x.injuries[0].athlete.displayName + '</span>' +
                              '<span style="margin-left:7.5px;font-weight:normal;font-size:14;color:silver;">' + x.injuries[0].athlete.position.abbreviation + '</span>' +
                              '</div>';
            }


            var stackedStatus = '';   if (typeof x.injuries[0].status !==
            'undefined') {
              stackedStatus = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Status: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.injuries[0].status + '</span></div>';
            }

            var stackedShort = '';   if (typeof x.injuries[0].shortComment !==
            'undefined') {
              stackedShort = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Short: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.injuries[0].shortComment + '</span></div>';
            }

            var stackedLong = '';   if (typeof x.injuries[0].longComment !==
            'undefined') {
              stackedLong = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:7.5px 0px;">Long: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:15px;text-align:left;color:pearl;margin:7.5px 0px;">' + x.injuries[0].longComment + '</span></div>';
            }

            var stackedDate = '';     if (typeof x.injuries[0].date !==
            'undefined') {
              const dateUTC = new Date(x.injuries[0].date);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:14px;text-align:left;color:white;margin:5px 0px 10px 0px;">Updated: 
                              <span style="font-weight:normal;font-size:14px;text-align:left;color:pearl;margin:5px 0px 10px 0px;">
                              ${formattedDate} - ${formattedTime}</span></div>`;

            }

            stackedInjuries = stackedTeam + stackedPlayer + stackedStatus +
            stackedShort + stackedLong + stackedDate;
  nhl_transactions:
    card:
      type: custom:flex-table-card
      css:
        table+: 'width: auto%; margin-top:12px;'
        tbody tr td:nth-child(n+1): 'width: auto;'
        tbody tr:hover: 'background-color: dimgrey!important; color:white!important;'
      card_mod:
        style:
          .: |
            ha-card {
              overflow: auto;
              }
          $: |
            .card-header {
               margin-top: -100px!important;
               padding-top: 6px!important;
               padding-bottom: 4px!important;
               font-size: 14px!important;
               line-height: 14px!important;
               font-weight: bold!important;
             }
      entities:
        include: sensor.transactions_nhl
      sort_by: events
      columns:
        - hidden: sort by date
          data: transactions
          modify: x.date
        - name: >-
            <div style="height:20px;font-size:18px;margin:5px
            5px;">Transactions</div>
          data: transactions
          modify: >-
            var stackedTransactions = '';  

            var stackedTeam = '';    if (typeof x.team.displayName !==
            'undefined') {
              stackedTeam = '<div style="display:flex;align-items:center;font-weight:normal;font-size:14px;text-align:left;margin:5px 0px 0px 5px;color:white;">' +
                              '<a href="' + x.team.links[0].href + '" target="_blank" style="display:inline-block;margin-right:5px;">' +
                                '<img src="' + x.team.logos[0].href + '" style="height:30px;width:auto;vertical-align:middle;">' +
                              '</a>' +
                              '<span style="margin-left:5px;font-weight:bold;font-size:16;color:white;">' + x.team.displayName + '</span>' +
                            '</div>';
            }

            var stackedDate = '';   if (typeof x.date !== 'undefined') {
              const dateUTC = new Date(x.date);            
              const localDate = new Date(dateUTC.getTime() - dateUTC.getTimezoneOffset() * 60000);                        
              const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              const month = months[localDate.getMonth()];
              const day = String(localDate.getDate()).padStart(2, '0');
              const year = localDate.getFullYear();
              const formattedDate = `${month} ${day}, ${year}`;
              const hours = localDate.getHours();
              const minutes = String(localDate.getMinutes()).padStart(2, '0');
              const ampm = hours >= 12 ? 'pm' : 'am';
              const formattedTime = `${(hours % 12 || 12)}:${minutes} ${ampm}`;
              stackedDate = `<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:5px 0px 5px 0px;">Date: 
                              <span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">
                              ${formattedDate} - ${formattedTime}</span></div>`;
            } 

            var stackedDescription = '';   if (typeof x.description !==
            'undefined') {
              stackedDescription = '<div style="font-weight:bold;font-size:15px;text-align:left;color:white;margin:5px 0px 10px 0px;">Description: ' +
                                   '<span style="padding-left:5px;font-weight:normal;font-size:14px;text-align:left;color:pearl;">' + x.description + '</span></div>';
            }

            stackedTransactions = stackedTeam + stackedDate +
            stackedDescription;
  team_cards:
    card:
      type: custom:auto-entities
      unique: true
      show_empty: false
      card:
        type: custom:layout-card
        layout_type: masonry
        width: 200px
        max-columns: 5
      card_param: cards
      filter:
        template: |
          {%- for team in integration_entities("teamtracker") -%}
            {%- if state_attr(team, "league") == "[[sport]]" -%}
            {%- if states(team) == "[[status]]" -%}
            {%- if state_attr(team, "team_homeaway") == "home" -%}
              {{{"type": "custom:teamtracker-card",
                "entity": team, 
                "home_side": "right"}}},
            {%- endif -%}
            {%- endif -%}
            {%- endif -%}
          {%- endfor -%}
        exclude:
          - entity_id: '*team_tracker*'
      sort:
        method: attribute
        attribute: date
button_card_templates:
  no_background:
    styles:
      card:
        - background-color: rgba(0, 0, 0, 0.0)
        - box-shadow: none
        - border-radius: 0px
  no_background_main_menu:
    styles:
      card:
        - background-color: rgba(0, 0, 0, 0.0)
        - box-shadow: none
        - border-radius: 0px
        - margin: 2.5px 0px
        - font-weight: bold
  empty_card:
    template: no_background
    color_type: blank-card
  row_space:
    template: no_background
    styles:
      card:
        - height: '[[[ return variables.height + "px" ]]]'
        - padding: 0px
    tap_action:
      action: none
  row_border:
    template: no_background
    styles:
      card:
        - height: 0px
        - padding: 0px
        - border-bottom: 1px solid
        - border-bottom-color: var(--border-color)
        - margin-bottom: '[[[ return variables.margin_bottom + "px" ]]]'
        - margin-top: '[[[ return variables.margin_top + "px" ]]]'
    tap_action:
      action: none
  time_since_state:
    state_display: |
      [[[
        var date = new Date((entity.state || "").replace(/-/g,"/").replace(/[TZ]/g," "));
        // difference in seconds
        var diff = (((new Date()).getTime() - date.getTime()) / 1000);
        // days elapsed
        var day_diff = Math.floor(diff / 86400);
            
        if (isNaN(day_diff) || day_diff < 0) 
          return 'Error';
            
        return day_diff === 0 && (
            diff < 60 && "Now" ||
            diff < 120 && "1 minute" ||
            diff < 3600 && Math.floor(diff / 60) + " minutes" ||
            diff < 7200 && "1 hour" ||
            diff < 86400 && Math.floor(diff / 3600) + " hours") ||
            day_diff === 1 && "Yesterday" ||
            day_diff > 1 && day_diff + " days";
      ]]]
  styles_base:
    styles:
      card:
        - border-radius: 15px
        - margin-bottom: 0px
        - padding-top: 14px
        - padding-bottom: 14px
      icon:
        - width: 30px
        - height: 30px
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 15px
        - align-self: center
      state:
        - justify-self: start
        - align-self: left
        - font-size: 13px
        - color: var(--secondary-text-color)
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: var(--secondary-text-color)
        - text-align: right
        - margin-right: 20px
  styles_icon_name_label:
    template: styles_base
    show_name: true
    show_icon: true
    show_state: false
    show_label: true
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
  styles_icon_name_state_label:
    template: styles_base
    show_name: true
    show_icon: true
    show_state: true
    show_label: true
    styles:
      grid:
        - grid-template-areas: ' "i n l" "i s l" '
        - grid-template-columns: 70px min-content auto
        - grid-template-rows: min-content
  header_base:
    show_name: false
    show_state: false
    show_icon: true
    styles:
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
  header_base_icon:
    show_name: false
    show_state: false
    show_icon: true
    styles:
      name:
        - color: orange
        - margin-top: 5px
        - font-size: 12px
      icon:
        - width: 55%
        - color: orange
      img_cell:
        - width: 40px
        - height: 40px
        - border-radius: 100%
        - background: var(--primary-background-color)
  styles_icon_name_state_label_light:
    template: styles_base
    show_name: true
    show_icon: true
    show_state: true
    show_label: true
    styles:
      icon:
        - width: 30px
        - height: 30px
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 15px
        - align-self: center
      state:
        - justify-self: start
        - align-self: left
        - font-size: 13px
        - color: var(--secondary-text-color)
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: var(--secondary-text-color)
        - text-align: right
        - margin-right: 20px
  header_base_with_name:
    show_name: true
    show_state: false
    show_icon: true
    styles:
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
      name:
        - font-size: 15px
  header_base_with_state:
    show_name: false
    show_state: true
    show_icon: true
    styles:
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
      state:
        - font-size: 15px
        - font-weight: bold
  header_back_button:
    show_name: false
    show_state: false
    show_icon: true
    icon: mdi:arrow-left-bold
    styles:
      card:
        - width: 70px
        - height: 100%
      icon:
        - width: 55%
        - color: orange
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
  header_back_home_button:
    show_name: false
    show_state: false
    show_icon: true
    icon: mdi:home
    styles:
      card:
        - width: 70px
        - height: 100%
      icon:
        - width: 55%
        - color: orange
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
  header_home_button_right:
    show_name: false
    show_state: false
    show_icon: true
    icon: mdi:home
    styles:
      card:
        - width: 70px
        - height: 100%
        - justify-content: flex-end
      icon:
        - width: 55%
        - color: orange
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
        - margin-right: auto
        - margin-top: auto
  header_off_button:
    show_name: false
    show_state: false
    show_icon: true
    icon: mdi:power
    styles:
      card:
        - width: 70px
        - height: 100%
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
    state:
      - value: 'on'
        styles:
          icon:
            - color: orange
    tap_action:
      action: call-service
      haptic: medium
      service: homeassistant.turn_off
      service_data:
        entity_id: '[[[ return entity.entity_id ]]]'
  header_label_page:
    show_label: true
    styles:
      card:
        - padding: 10px
      name:
        - font-size: 22px
        - font-weight: bold
        - justify-self: start
      label:
        - margin-top: 5px
        - text-indent: 10px
        - font-size: 16px
        - font-weight: 300
        - justify-self: start
  header_sensor_text:
    show_name: false
    show_state: true
    show_icon: false
    styles:
      state:
        - color: var(--secondary-text-color)
        - font-size: 24px
      card:
        - height: 100%
  header_sensor_temp_hum:
    show_name: false
    show_state: true
    show_icon: false
    styles:
      state:
        - font-size: 20px
        - text-align: left
        - color: var(--secondary-text-color)
      card:
        - height: 100%
    state_display: |
      [[[
        let temp_entity = variables.temperature || entity.entity_id;
        let humidity_entity = variables.humidity;

        let temp = states[temp_entity] ? parseFloat(states[temp_entity].state) || 0 : 'N/A';
        let humidity = states[humidity_entity] ? Math.round(states[humidity_entity].state) || 0 : 'N/A';

        return temp.toFixed(1) + " °C," + " &nbsp; " + humidity + " %";
      ]]]
  header_binary_sensor:
    template: header_base
    state:
      - value: 'on'
        styles:
          icon:
            - color: '#03A9F4'
  header_sensor_count:
    template: header_base
    styles:
      grid:
        - position: relative
      custom_fields:
        count:
          - background-color: '#1c6997'
          - border-radius: 50%
          - position: absolute
          - left: 65%
          - top: '-7%'
          - height: 18px
          - width: 18px
          - font-size: 14px
          - font-weight: bold
          - display: none
    custom_fields:
      count: |
        [[[ return entity.state ]]]                        
    state:
      - value: 0
        operator: '>'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
          custom_fields:
            count:
              - display: block
  header_switch:
    template: header_base
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
      - value: unavailable
        styles:
          icon:
            - color: var(--label-badge-red)
  header_switch_with_name:
    template: header_base_with_name
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
          name:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
      - value: unavailable
        styles:
          icon:
            - color: var(--label-badge-red)
  header_switch_lock:
    template: header_switch
    lock:
      enabled: true
    confirmation:
      text: |
        [[[ 
          if (entity.state === 'on')
          {
            return variables.message_off;
          } else {
            return variables.message_on;
          }
        ]]]               
    styles:
      lock:
        - position: absolute
        - top: '-20%'
        - left: 55%
        - width: 18px
  label_heading:
    show_name: true
    show_icon: false
    show_state: false
    styles:
      card:
        - box-shadow: none
        - padding: 5px 0 0 0
        - background: transparent
      name:
        - color: var(--secondary-text-color)
        - font-weight: bold
        - font-size: 16px
        - justify-self: start
        - text-indent: 10px
    tap_action:
      action: none
  state_switch_menu:
    template: no_background
    show_icon: false
    show_state: false
    show_name: true
    styles:
      name:
        - color: var(--secondary-text-color)
        - font-weight: bold
        - justify-self: center
        - font-size: 16px
        - padding-left: 1px
    tap_action:
      action: call-service
      service: input_select.select_option
      service_data:
        entity_id: '[[[ return entity.entity_id ]]]'
        option: '[[[ return this._config.name ]]]'
    state:
      - value: '[[[ return this._config.name ]]]'
        styles:
          name:
            - color: var(--paper-item-icon-active-color)
  person_card_jason:
    template:
      - person_card_icon_jason
    variables:
      person_entity: ''
      device_tracker_entity: ''
      location_sensor: ''
      person_entity_picture: false
      multiline: true
      person_zone1: ''
      person_zone2: ''
      person_address: ''
      person_address_locality: ''
      person_driving_entity: ''
      person_battery_entity: ''
      person_battery_state_entity: ''
      person_commute_entity: ''
      person_cummute_icon: mdi:car
    triggers_update: all
    tap_action:
      action: more-info
      entity: '[[[ return variables.person_entity; ]]]'
    show_label: false
    show_name: false
    label: |
      [[[
        if (variables.person_address){
          return states[variables.person_address].state;
        } else if (variables.person_address_locality){
          return states[variables.person_address_locality].attributes.Locality;
        } else if (states[variables.person_driving_entity]?.state === "on") {
          return `Driving`;
        } else {
          return states[variables.person_entity].state;
        }
      ]]]
    name: '[[[ return states[variables.person_entity].attributes.friendly_name ]]]'
    entity: '[[[ return variables.person_entity; ]]]'
    icon: mdi:face-man
    show_entity_picture: '[[[ return variables.person_entity_picture ]]]'
    entity_picture: >-
      [[[ return variables.person_entity_picture != false ?
      states[variables.person_entity].attributes.entity_picture : null ]]]
    styles:
      card:
        - width: 95px
      grid:
        - grid-template-areas: '"i status" "i battery" "i commute"'
        - grid-template-rows: 25% 25% 25%
      icon:
        - grid-column: 1
        - grid-row: 1 / 4
        - color: rgba(var(--color-theme),0.9)
        - width: |
            [[[
              if (variables.person_entity_picture !== true){
                return "20px";
              } else {
                return "42px";
              }
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - top: 15px
          - left: 10%
          - transform: translate(-50%, -50%)
          - height: 16px
          - width: 16px
          - font-size: 12px
          - line-height: 14px
          - background-color: |
              [[[
                if (states[variables.person_driving_entity]?.state === "on") {
                  return "red";
                } else if (states[variables.person_entity].state !== 'Home') {
                  return "mediumseagreen";
                } else if (states[variables.person_entity].state !== 'Away') {
                  return "red";
                } else {
                  return "blue";
                }
              ]]]
        status:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - font-weight: bold
          - text-transform: capitalize
          - color: var(--secondary-text-color)
          - margin: 0px 0px 0px 3px
        battery:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - color: var(--secondary-text-color)
          - margin: 0px 0px 10px 0px
        commute:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - color: var(--secondary-text-color)
          - margin: 0px 0px 0px 0px
    custom_fields:
      notification: |
        [[[
          if (states[variables.person_driving_entity]?.state === "on") {
            var icon = 'mdi:car';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
          } else if (states[variables.person_entity].state === 'home') {
            return '<ha-icon icon="mdi:home-variant" style="width: 12.5px; height: 12.5px; color: white;"></ha-icon>';
          } else if (states[variables.person_entity].state === 'not_home') {
            // Add any additional conditions here for the 'away' state
            return '<ha-icon icon="mdi:map-marker-off" style="width: 10px; height: 10px; color: white);"></ha-icon>';
          } else if (states[variables.person_entity].state === states[variables.person_zone1]?.attributes?.friendly_name) {
            var icon = states[variables.person_zone1].attributes.icon !== null ? states[variables.person_zone1].attributes.icon : 'mdi:help-circle';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
          } else if (states[variables.person_entity].state === states[variables.person_zone2]?.attributes?.friendly_name) {
            var icon = states[variables.person_zone2].attributes.icon !== null ? states[variables.person_zone2].attributes.icon : 'mdi:help-circle';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
          } else {
            return '<ha-icon icon="mdi:home-minus" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
          }
        ]]]
      status: |
        [[[
          if (variables.person_address){
            return states[variables.person_address].state;
          } else if (variables.person_address_locality){
            return states[variables.person_address_locality].attributes.Locality;
          } else if (states[variables.person_driving_entity]?.state === "on") {
            return `Driving`;
          } else {
            return states[variables.person_entity].state;
          }
        ]]]
      battery: |
        [[[
          if (states[variables.person_battery_entity]?.state) {
            var battery = states[variables.person_battery_entity]?.state;
            var charging = states[variables.person_battery_state_entity]?.state.toLowerCase() === "charging";
            var iconBase = charging ? "mdi:battery-charging" : "mdi:battery"
            var roundedBattery = Math.ceil(battery / 10) * 10;
            var icon = roundedBattery === 100 ? iconBase : `${iconBase}-${roundedBattery}`;
            var foo = "mdi:battery"
            var color = "mediumseagreen";
            if (battery <= 20) {
              color = "red";
            } else if (battery <= 40) {
              color = "yellow";
            } else if (battery <= 60) {
              color = "orange";
            } else if (battery <= 80) {
              color = "dodgerblue";
            }
            return `
              <ha-icon icon="${icon}" style="width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0px 2px 2.5px 0"></ha-icon>
              <span style="padding-top: 10px;">${battery}%</span>
            `;
          }
        ]]]
      commute: |
        [[[
          if (states[variables.person_commute_entity]?.state) {
            var icon = variables.person_commute_icon || "mdi:car";
            var commute = states[variables.person_commute_entity]?.state;
            var color = "mediumseagreen";
            
            if (commute <= 3) {
              color = "white"
            }
            
            if (commute >= 30) {
              color = "yellow"
            }
            
            if (commute >= 60) {
              color = "red"
            }
            
            return `
              <ha-icon icon="${icon}" style="width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 2.5px 2px 0 0"></ha-icon>
              <span style="padding-top: 10px;">${commute} min</span>
            `;
          }
        ]]]
  person_card_icon_jason:
    color: var(--google-grey)
    show_icon: true
    show_label: true
    show_name: true
    show_state: false
    state:
      - value: unavailable
        styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 38px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid var(--card-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: |
                  [[[
                    return "rgba(var(--color-red),1)";
                  ]]]
    styles:
      icon:
        - color: rgba(var(--color-theme),0.2)
      label:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      name:
        - align-self: end
        - justify-self: start
        - font-weight: bold
        - font-size: 14px
        - margin-left: 12px
      state:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      img_cell:
        - background-color: rgba(var(--color-theme),0.05)
        - margin-top: 10px
        - border-radius: 50%
        - place-self: center
        - width: 35px
        - height: 35px
      card:
        - border-radius: var(--border-radius)
        - box-shadow: var(--box-shadow)
    custom_fields:
      notification: |
        [[[
          if (entity.state =='unavailable'){
            return ''
          }
        ]]]
    size: 20px
  person_card_micheline:
    template:
      - person_card_icon_micheline
    variables:
      person_entity: ''
      device_tracker_entity: ''
      location_sensor: ''
      person_entity_picture: false
      multiline: true
      person_zone1: ''
      person_zone2: ''
      person_address: ''
      person_address_locality: ''
      person_driving_entity: ''
      person_battery_entity: ''
      person_battery_state_entity: ''
      person_commute_entity: ''
      person_cummute_icon: mdi:car
    triggers_update: all
    tap_action:
      action: more-info
      entity: '[[[ return variables.person_entity; ]]]'
    show_label: false
    show_name: false
    label: |
      [[[
        if (variables.person_address){
          return states[variables.person_address].state;
          
        } else if (variables.person_address_locality){
          return states[variables.person_address_locality].attributes.Locality;
          
        } else if (states[variables.person_driving_entity]?.state === "on") {
          return "Driving";
          
        } else {
          return states[variables.person_entity].state;
        }
      ]]]
    name: '[[[ return states[variables.person_entity].attributes.friendly_name ]]]'
    entity: '[[[ return variables.person_entity; ]]]'
    icon: mdi:face-man
    show_entity_picture: '[[[ return variables.person_entity_picture ]]]'
    entity_picture: >-
      [[[ return variables.person_entity_picture != false ?
      states[variables.person_entity].attributes.entity_picture : null ]]]
    styles:
      card:
        - width: 95px
      grid:
        - grid-template-areas: '"i status" "i battery" "i commute"'
        - grid-template-rows: 25% 25% 25%
      icon:
        - grid-column: 1
        - grid-row: 1 / 4
        - icon_color: red
        - width: |
            [[[
              if (variables.person_entity_picture !== true){
                return "20px";
              } else {
                return "42px";
              }
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - top: 15px
          - left: 10%
          - transform: translate(-50%, -50%)
          - height: 16px
          - width: 16px
          - font-size: 12px
          - line-height: 14px
          - background-color: |
              [[[
                if (states[variables.person_driving_entity]?.state === "on") {
                  return "lightgrey";
                  
                } else if (states[variables.person_entity].state !== 'Home') {
                  return "mediumseagreen";
                  
                } else if (states[variables.person_entity].state !== 'School') {
                  return "dodgerblue";
                  
                } else if (states[variables.person_entity].state !== 'Away') {
                  return "red";
                  
                } else {
                  return "red";
                }
              ]]]
        status:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - font-weight: bold
          - text-transform: capitalize
          - color: var(--secondary-text-color)
          - margin: 0px 0px 0px 3px
        battery:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - color: var(--secondary-text-color)
          - margin: 0px 0px 10px 0px
        commute:
          - align-self: start
          - justify-self: start
          - font-size: 12px
          - color: var(--secondary-text-color)
          - margin: 0px 0px 0px 0px
    custom_fields:
      notification: |
        [[[
          if (states[variables.person_driving_entity]?.state === "on") {
            var icon = 'mdi:car';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
            
          } else if (states[variables.person_entity].state === 'home') {
            return '<ha-icon icon="mdi:home-variant" style="width: 12.5px; height: 12.5px; color: white;"></ha-icon>';
            
          } else if (states[variables.person_entity].state === 'not_home') {
            return '<ha-icon icon="mdi:map-marker-off" style="width: 10px; height: 10px; color: white;"></ha-icon>';

          } else if (states[variables.person_entity].state === 'School') {
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: darkorange;"></ha-icon>';
            
            
          } else if (states[variables.person_entity].state === states[variables.person_zone1]?.attributes?.friendly_name) {
            var icon = states[variables.person_zone1].attributes.icon !== null ? states[variables.person_zone1].attributes.icon : 'mdi:help-circle';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: blue;"></ha-icon>';
            
          } else if (states[variables.person_entity].state === states[variables.person_zone2]?.attributes?.friendly_name) {
            var icon = states[variables.person_zone2].attributes.icon !== null ? states[variables.person_zone2].attributes.icon : 'mdi:help-circle';
            return '<ha-icon icon="' + icon + '" style="width: 10px; height: 10px; color: blue;"></ha-icon>';
            
          } else {
            return '<ha-icon icon="mdi:home-minus" style="width: 10px; height: 10px; color: var(--primary-background-color);"></ha-icon>';
          }
        ]]]
      status: |

        [[[
          if (states[variables.person_driving_entity]?.state === "on") {
            return "Driving";
            
          } else if (variables.person_address) {
            return states[variables.person_address].state;
            
          } else if (variables.person_address_locality) {
            return states[variables.person_address_locality].attributes.Locality;
            
          } else {
            return states[variables.person_entity].state;
          }
        ]]]
      battery: |
        [[[
          if (states[variables.person_battery_entity]?.state) {
            var battery = states[variables.person_battery_entity]?.state;
            var charging = states[variables.person_battery_state_entity]?.state.toLowerCase() === "charging";
            var iconBase = charging ? "mdi:battery-charging" : "mdi:battery"
            var roundedBattery = Math.ceil(battery / 10) * 10;
            var icon = roundedBattery === 100 ? iconBase : `${iconBase}-${roundedBattery}`;
            var foo = "mdi:battery"
            var color = "mediumseagreen";
            if (battery <= 20) {
              color = "red";
            } else if (battery <= 40) {
              color = "yellow";
            } else if (battery <= 60) {
              color = "darkorange";
            } else if (battery <= 80) {
              color = "dodgerblue";
            }
            return `
              <ha-icon icon="${icon}" style="width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0px 2px 2.5px 0"></ha-icon>
              <span style="padding-top: 10px;">${battery}%</span>
            `;
          }
        ]]]
      commute: |
        [[[
          if (states[variables.person_commute_entity]?.state) {
            var icon = variables.person_commute_icon || "mdi:car";
            var commute = states[variables.person_commute_entity]?.state;
            var color = "mediumseagreen";
            
            if (commute <= 3) {
              color = "white"
            }
            
            if (commute >= 30) {
              color = "yellow"
            }
            
            if (commute >= 60) {
              color = "red"
            }
            
            return `
              <ha-icon icon="${icon}" style="width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 2.5px 2px 0 0"></ha-icon>
              <span style="padding-top: 10px;">${commute} min</span>
            `;
          }
        ]]]
  person_card_icon_micheline:
    color: var(--google-grey)
    show_icon: true
    show_label: true
    show_name: true
    show_state: false
    state:
      - value: unavailable
        styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 38px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid var(--primary-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: |
                  [[[
                    return "red";
                  ]]]
    styles:
      icon:
        - color: var(--primary-background-color)
      label:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      name:
        - align-self: end
        - justify-self: start
        - font-weight: bold
        - font-size: 14px
        - margin-left: 12px
      state:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px
      img_cell:
        - background-color: var(--primary-background-color)
        - margin-top: 10px
        - border-radius: 50%
        - place-self: center
        - width: 35px
        - height: 35px
      card:
        - border-radius: var(--border-radius)
        - box-shadow: var(--box-shadow)
    custom_fields:
      notification: |
        [[[
          if (entity.state =='unavailable'){
            return ''
          }
        ]]]
    size: 20px
  room_homepage:
    styles:
      card:
        - height: 150px
        - justify-content: flex-end
      name:
        - top: 5%
        - left: 5%
        - position: absolute
        - font-size: 18px
        - font-weight: bold
        - color: var(--primary-text-color)
      icon:
        - top: 2%
        - width: 90px
        - height: 90px
        - color: |
            [[[
              return states[variables.state_entity] && 
                     (states[variables.state_entity].state === 'on' || 
                      states[variables.state_entity].state === 'playing')
                ? '#03A9F4'
                : 'grey';
            ]]]
      img_cell:
        - bottom: '-32.5%'
        - right: 25%
        - width: 160px
        - height: 120px
        - border-radius: 15%
        - background: |
            [[[
              return states[variables.state_entity] && 
                     (states[variables.state_entity].state === 'on' || 
                      states[variables.state_entity].state === 'playing')
                ? 'rgba(3, 169, 244, 0.2)'
                : 'rgba(192, 192, 192, 0.1)';
            ]]]
      custom_fields:
        sensors_icon:
          - top: null
          - left: null
          - position: null
          - color: null
        temp_hum:
          - top: 20%
          - left: 4%
          - position: absolute
          - color: var(--secondary-text-color)
          - font-weight: bold
          - opacity: 0.75
    custom_fields:
      sensors_icon: |
        [[[
          var html = '';
          var color = '';
          var icon = '';

          html += '<div style="display: flex; flex-direction: column; align-items: flex-end; position: absolute; right: 3%; bottom: 10%; gap: 15px;">';

          if (typeof(variables.motion) !== 'undefined') {
            var isOn = (states[variables.motion].state == 'on');
            var icon = isOn ? "mdi:motion-sensor" : "mdi:motion-sensor";
            var color = isOn ? '#03A9F4' : 'var(--disabled-text-color)';

            html += '<ha-icon style="color: '+color+'; height: 23px; width: 23px;" icon="' + icon + '"></ha-icon>';
          }


          if (typeof(variables.lights) !== 'undefined' && typeof(variables.count) !== 'undefined') {
              var count = parseInt(states[variables.count]?.state) || 0;
              var isOn = count > 0;
              var isGroup = count > 1;
              
              var icon = isGroup ? "phu:bulb-group" : (isOn ? "phu:bulbs-sultan" : "phu:bulbs-sultan");
              var color = isOn ? 'orange' : 'var(--disabled-text-color)';
          
              html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.plugs) !== 'undefined') {
            var isOn = (states[variables.plugs].state == 'on');
            var icon = isOn ? "hue:plug-us" : "hue:plug-us";
            var color = isOn ? 'orange' : 'var(--disabled-text-color)';

            html += '<ha-icon style="color: '+color+'; height: 23px; width: 23px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.sleep) !== 'undefined') {
            var isOn = (states[variables.sleep].state == 'on');
            var icon = isOn ? "mdi:weather-night" : "mdi:power-sleep";
            var color = isOn ? 'silver' : 'var(--disabled-text-color)';

            html += '<ha-icon style="color: '+color+'; height: 23px; width: 23px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.thermostat) !== 'undefined') {
            var state = states[variables.thermostat].state;
            var icon = "mdi:thermometer";
            var color = "var(--disabled-text-color)";
          
            if (state === 'Heating') {
              icon = "mdi:fire";
              color = "red";
            } else if (state === 'Cooling') {
              icon = "mdi:snowflake";
              color = "blue";
            }
          
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }


          if (typeof(variables.tower) !== 'undefined') {
            var power = parseFloat(states[variables.tower].state);
            var icon = "phu:tower-fan";
            var color = "var(--disabled-text-color)";

            if (power >= 1000 && power <= 1750) {
              icon = "mdi:fire";
              color = "red";
            } else if (power >= 10 && power <= 16) {
              icon = "mdi:fan-speed-1";
              color = "lightskyblue";
            } else if (power >= 16.1 && power <= 21) {
              icon = "mdi:fan-speed-2";
              color = "deepskyblue";
            } else if (power >= 21. && power <= 50) {
              icon = "mdi:fan-speed-3";
              color = "dodgerblue";
            }

            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }


          if (typeof(variables.fireplace) !== 'undefined') {
            var power = parseFloat(states[variables.fireplace].state);
            var icon = "mdi:fireplace";
            var color = "var(--disabled-text-color)";
          
            if (power >= 5 && power <= 1750) {
              icon = "mdi:fireplace";
              color = "chocolate";
            }
          
            html += '<ha-icon style="color: ' + color + '; height: 22px; width: 22px;" icon="' + icon + '"></ha-icon>';
          }



          if (typeof(variables.dishwasher) !== 'undefined') {
            var power = parseFloat(states[variables.dishwasher].state);
            var icon = "mdi:dishwasher";
            var color = "var(--disabled-text-color)";
          
            if (power >= 5 && power <= 1500) {
              icon = "mdi:dishwasher";
              color = "dodgerblue";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          html += '</div>';

          html += '<div style="display: flex; flex-direction: column; align-items: flex-end; position: absolute; left: 69%; bottom: 10%; gap: 15px;">';
          

          if (typeof(variables.sonos) !== 'undefined') {
            var icon = "phu:sonos";
            var isPlaying = (states[variables.sonos].state == 'playing');
            var color = isPlaying ? 'black' : 'grey';
            var bgColor = isPlaying ? 'white' : 'var(--disabled-text-color)';
                    
            html += '<div style="width: 24px; height: 24px; border-radius: 100%; background: ' + bgColor + '; display: flex; align-items: center; justify-content: center;">';
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px; transform: translateY(1px);" icon="' + icon + '"></ha-icon>';            
            html += '</div>';
          }
          
          if (typeof(variables.tv) !== 'undefined') {  
            icon = "mdi:television";
            color = (states[variables.tv].state == 'on')
                    ? 'black'
                    : 'grey';
            bgColor = (states[variables.tv].state == 'on')
                    ? 'white'
                    : 'var(--disabled-text-color)';

            html += '<div style="width: 24px; height: 24px; border-radius: 100%; background: ' + bgColor + '; display: flex; align-items: center; justify-content: center;">';
            html += '<ha-icon style="color: '+color+'; height: 18px; width: 18px; transform: translateY(-1.5px) translateX(.1px);" icon="' + icon + '"></ha-icon>';
            html += '</div>';
          }

          
          if (typeof(variables.appletv) !== 'undefined') {  
            var icon = "phu:apple-tv";
            var isPlaying = (states[variables.appletv].state == 'playing');
            var color = isPlaying ? 'black' : 'grey';
            var bgColor = isPlaying ? 'white' : 'var(--disabled-text-color)';
          
            html += '<div style="width: 24px; height: 24px; border-radius: 100%; background: ' + bgColor + '; display: flex; align-items: center; justify-content: center;">';
            html += '<ha-icon style="color: ' + color + '; height: 20.5px; width: 20.5px; transform: translateY(-1px);" icon="' + icon + '"></ha-icon>';
            html += '</div>';
          }

          if (typeof(variables.printer) !== 'undefined') {
            var power = parseFloat(states[variables.printer].state);
            var icon = "phu:3dprinter-standby";
            var color = "var(--disabled-text-color)";

            if (power >= 11 && power <= 500) {
              icon = "phu:3dprinter-standby";
              color = "limegreen";
            } else if (power >= 1 && power <= 10.75) {
              icon = "phu:3dprinter-standby";
              color = "orange";
            }

            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }


          if (typeof(variables.washer) !== 'undefined') {
            var power = parseFloat(states[variables.washer].state);
            var icon = "mdi:washing-machine";
            var color = "var(--disabled-text-color)";
          
            if (power >= 500 && power <= 1750) {
              icon = "mdi:washing-machine";
              color = "orangered";
            } else if (power >= 10 && power <= 499) {
              icon = "mdi:washing-machine";
              color = "dodgerblue";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.dryer) !== 'undefined') {
            var power = parseFloat(states[variables.dryer].state);
            var icon = "mdi:tumble-dryer";
            var color = "var(--disabled-text-color)";
          
            if (power >= 7.5 && power <= 5000) {
              icon = "mdi:tumble-dryer";
              color = "orangered";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.island) !== 'undefined') {
            var power = parseFloat(states[variables.island].state);
            var icon = "hue:room-kitchen";
            var color = "var(--disabled-text-color)";
          
            if (power >= 15 && power <= 1500) {
              icon = "hue:room-kitchen";
              color = "orangered";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.microwave) !== 'undefined') {
            var power = parseFloat(states[variables.microwave].state);
            var icon = "mdi:microwave";
            var color = "var(--disabled-text-color)";
          
            if (power >= 5 && power <= 1600) {
              icon = "mdi:microwave";
              color = "orangered";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }

          if (typeof(variables.stove) !== 'undefined') {
            var power = parseFloat(states[variables.stove].state);
            var icon = "mdi:stove";
            var color = "var(--disabled-text-color)";
          
            if (power >= 25 && power <= 5000) {
              icon = "mdi:stove";
              color = "orangered";
            }
            html += '<ha-icon style="color: ' + color + '; height: 24px; width: 24px;" icon="' + icon + '"></ha-icon>';
          }


          html += '</div>';
          return html;
        ]]]
      temp_hum: |
        [[[
          let temp_entity = variables.temperature || entity.entity_id;
          let humidity_entity = variables.humidity;
          
          let temp = states[temp_entity] ? parseFloat(states[temp_entity].state) || 0 : 'N/A';
          let humidity = states[humidity_entity] ? Math.round(states[humidity_entity].state) || 0 : 'N/A';
          
          return `<ha-icon icon="mdi:thermometer" style="vertical-align:center; width: 14px; height: 20px;"></ha-icon>
                  <span style="font-size: 12px; margin-left:-4px;">${temp.toFixed(1)} °C,</span>
                  <ha-icon icon="mdi:water-percent" style="vertical-align:center; margin-left: 1px; width: 15px; height: 20px;"></ha-icon>
                  <span style="font-size: 12px; margin-left:-3px;">${humidity} %</span>`; 
        ]]]
  device_homepage:
    show_name: true
    show_label: true
    show_icon: true
    styles:
      grid:
        - grid-template-areas: '" i " " n " " l "'
        - grid-template-rows: 60px 40px min-content
      img_cell:
        - width: 60px
        - height: 60px
        - border-radius: 100%
        - background: var(--primary-background-color)
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      name:
        - font-size: 18px
        - font-weight: bold
      label:
        - font-size: 16px
        - color: var(--secondary-text-color)
      card:
        - height: 100%
  meteo_homepage:
    template: styles_icon_name_state
  room_lights:
    name: Lights
    icon: |
      [[[ 
        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
      ]]]
    label: All area lights off
    show_label: true
    size: 50%
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
      card:
        - border-radius: 15px
        - margin-top: 10px
        - padding: 15px 0
      icon:
        - color: var(--disabled-text-color)
        - height: 25px
        - width: 25px
      img_cell:
        - width: 45px
        - height: 45px
        - background: var(--primary-background-color)
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 16px
        - align-self: center
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: var(--disabled-text-color)
        - text-align: right
        - margin-right: 20px
        - text-transform: capitalize
    state:
      - value: 0
        operator: '>'
        label: |
          [[[
            if (entity.state == 1)
            {
              return '1 light on';
            } else {
              return entity.state + ' lights on';
            }
          ]]]
        styles:
          icon:
            - color: orange
          name:
            - font-weight: bold
          label:
            - color: var(--primary-text-color)
  room_plugs:
    name: Plugs
    icon: |
      [[[ 
        return entity.state > 1 ? 'phu:plug-us' : 'phu:plug-us'; 
      ]]]
    label: All area plugs are off
    show_label: true
    size: 50%
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
      card:
        - border-radius: 15px
        - margin-top: 10px
        - padding: 15px 0
      icon:
        - color: var(--disabled-text-color)
        - height: 25px
        - width: 25px
      img_cell:
        - width: 45px
        - height: 45px
        - background: var(--primary-background-color)
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 16px
        - align-self: center
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: var(--disabled-text-color)
        - text-align: right
        - margin-right: 20px
        - text-transform: capitalize
    state:
      - value: 0
        operator: '>'
        label: |
          [[[
            if (entity.state == 1)
            {
              return '1 plug on';
            } else {
              return entity.state + ' plugs on';
            }
          ]]]
        styles:
          icon:
            - color: orange
          name:
            - font-weight: bold
          label:
            - color: var(--primary-text-color)
  room_climate:
    name: |
      [[[
        var last_active = states['binary_sensor.furnace_blower_active'].last_changed;
        var lastTime = new Date(last_active);

        if (entity.attributes.hvac_action == 'idle') {
          return 'System Idle since: &nbsp; <span style="font-size: 14px; font-weight: 400; opacity: .5;">' +
                 lastTime.toLocaleTimeString() + '</span>';
        } else if (entity.attributes.hvac_action == 'heating') {
          return 'Heating on since: &nbsp; <span style="font-size: 14px; font-weight: 400; opacity: .5;">' +
                 lastTime.toLocaleTimeString() + '</span>';
        } else if (entity.attributes.hvac_action == 'cooling') {
          return 'Cooling on since: &nbsp; <span style="font-size: 14px; font-weight: 400; opacity: .5;">' +
                 lastTime.toLocaleTimeString() + '</span>';
        } else {
          return 'Unavailable';
        }
      ]]]
    icon: |
      [[[
        if (entity.attributes.hvac_action == 'heating') {
          return "mdi:fire";
        } else if (entity.attributes.hvac_action == 'cooling') {
          return "mdi:snowflake";
        } else if (entity.state == 'heat') {
          return "phu:twist-thermostat";
        } else if (entity.state == 'cool') {
          return "phu:twist-thermostat";
        } else {
          return "mdi:alert-circle-outline";
        }
      ]]]
    label: |
      [[[
        var current = entity.attributes.current_temperature.toFixed(1);
        var target = entity.attributes.temperature.toFixed(1);

        var html = '';
        var color = '';

        html = '<span style="font-size: 20px; font-weight: bold; margin: 0px 5px 50px 10px; color: '+color+'">'
             + target + '<span style="font-size: 14px; font-weight: normal;"> °C</span></span>';
        html += '<br>';
        if (entity.attributes.hvac_action == 'heating')
        {
          color = 'red';
        } else {
          color = 'var(--secondary-text-color)';
        }
        html += '<span style="font-size: 15px;  font-weight: 400; opacity: .5; margin: 50px 5px 0px 0px; color: var(--primary-text-color)">'
          + current + '<span style="font-size: 13px; font-weight: 400; opacity: .5;"> °C</span></span>';

        return html;
      ]]]
    show_label: true
    show_name: true
    show_last_changed: false
    size: 50%
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
      card:
        - border-radius: 15px
        - margin-top: 10px
        - padding: 10px 0
      icon:
        - color: |
            [[[
              if (entity.attributes.hvac_action == 'heating') {
                return "red";
              } else if (entity.attributes.hvac_action == 'cooling') {
                return "blue";
              } else if (entity.state == 'heat') {
                return "rgba(255, 0, 0, 0.5)";
              } else if (entity.state == 'cool') {
                return "rgba(0, 0, 255, 0.5)";
              } else {
                return "rgba(255, 165, 0, 0.5)";
              }
            ]]]
        - height: 25px
        - width: 25px
      img_cell:
        - width: 45px
        - height: 45px
        - background: var(--primary-background-color)
        - border-radius: 100%
      name:
        - color: white
        - justify-self: start
        - font-size: 16px
        - align-self: center
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: white
        - text-align: right
        - margin-right: 20px
        - text-transform: capitalize
  room_media_original:
    layout: icon_name_state2nd
    name: Media Player
    show_label: true
    label: |
      [[[
        if (entity.state == 'playing')
        {
          return 'Playing';
        } else if (entity.state == 'paused')
        {
          return 'Paused';
        } else if (entity.state == 'standby')
        {
          return 'Standby';
        } else if (entity.state == 'unavailable')
        {
          return 'Unavailable';
        } else {
          return 'Unknown';
        }
      ]]]

      [[[ 
        if (entity.state == 'playing') {
          let artist = states['media_player'].attributes.media_artist;
          let title = states['media_player'].attributes.media_title;
          if (artist || title) {
            return `${artist}, "${title}"`;
          } else {
            return 'Inactive';
          }
        } else if (entity.state == 'paused') {
          return 'Paused';
        } else if (entity.state == 'standby') {
          return 'Standby';
        } else if (entity.state == 'unavailable') {
          return 'Unavailable';
        } else {
          return 'Off';
        }
      ]]]
    size: 50%
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
      card:
        - border-radius: 15px
        - margin-top: 10px
        - padding: 15px 0
      icon:
        - color: var(--disabled-text-color)
        - height: 25px
        - width: 25px
      img_cell:
        - width: 45px
        - height: 45px
        - background: var(--primary-background-color)
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 16px
        - align-self: center
      label:
        - justify-self: end
        - align-self: center
        - font-size: 13px
        - color: var(--secondary-text-color)
        - text-align: right
        - margin-right: 20px
        - text-transform: capitalize
    state:
      - value: playing
        styles:
          icon:
            - color: orange
          name:
            - font-weight: bold
          label:
            - color: var(--primary-text-color)
  room_media:
    layout: icon_name_state2nd
    name: Media Player
    show_label: true
    label: |

      [[[ 
        if (entity.state === 'playing') {
          let artist = entity.attributes.media_artist || 'Unknown Artist';
          let title = entity.attributes.media_title || 'Unknown Title';
          return `${artist}, "${title}"`;
        } else if (entity.state === 'paused') {
          return 'Paused';
        } else if (entity.state === 'standby') {
          return 'Standby';
        } else if (entity.state === 'unavailable') {
          return 'Unavailable';
        } else {
          return 'Off';
        }
      ]]]
    size: 50%
    tap_action:
      action: more-info
    styles:
      grid:
        - grid-template-areas: '"i n l"'
        - grid-template-columns: 65px min-content auto
        - grid-template-rows: min-content min-content min-content
      card:
        - border-radius: 15px
        - margin-top: 10px
        - padding: 15px 0
      icon:
        - color: var(--disabled-text-color)
        - height: 25px
        - width: 25px
      img_cell:
        - width: 45px
        - height: 45px
        - background: var(--primary-background-color)
        - border-radius: 100%
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 16px
        - align-self: center
      label:
        - justify-self: start
        - align-self: center
        - font-size: 13px
        - color: var(--secondary-text-color)
        - text-align: left
        - margin-left: 5px
        - text-transform: capitalize
        - animation: scrollText 10s linear infinite
    card_mod:
      style: |
        @keyframes scrollText {
          0% { transform: translateX(calc(-100% + 400px)); }
          100% { transform: translateX(0); }
        }
        ha-card .info, ha-card .info > * {
          max-width: auto;
          overflow: false;
          white-space: nowrap;
          display: flex;
        }        
    state:
      - value: playing
        styles:
          icon:
            - color: orange
          name:
            - font-weight: bold
          label:
            - color: var(--primary-text-color)
  climate_state:
    template: no_background
    show_name: true
    show_icon: false
    show_label: true
    show_last_changed: true
    styles:
      grid:
        - grid-template-areas: '"n l"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      name:
        - font-size: 18px
        - color: var(--primary-text-color)
      label:
        - justify-self: end
        - align-self: center
        - font-size: 14px
        - color: var(--secondary-text-color)
        - text-align: right
    state:
      - value: 'on'
        name: Heating On
      - value: 'off'
        name: Heating Off
    tap_action:
      action: none
  climate_current_temperature:
    template: no_background
    show_name: false
    show_state: true
    show_icon: true
    show_units: true
    units: '<span style="font-size: 16px; font-weight: 300">°C</span>'
    styles:
      grid:
        - grid-template-areas: '" i " " s "'
        - grid-template-rows: 70px auto
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
        - background: var(--primary-background-color)
      icon:
        - width: 55%
        - color: var(--paper-item-icon-active-color)
      state:
        - align-self: start
        - font-size: 26px
        - font-weight: bold
      card:
        - height: 100%
  light_card:
    template: styles_icon_name_state_label
    show_name: true
    show_icon: true
    show_state: false
    show_label: true
    color: auto
    label: |
      [[[
          if(entity.state == 'on') 
          {
            if ('brightness' in entity.attributes) 
            { 
              if (entity.attributes && (entity.attributes.brightness <= 255))
              { 
                var bri = Math.round(entity.attributes.brightness / 2.55); 
                return (bri ? bri : '0') + ' <span style="font-size: 13px; font-weight: 200">%</span>';
              } else {
                return '&nbsp;';
              } 
            } else {
              return '&nbsp;';
            }
          } else {
            return '&nbsp;';
          }      
      ]]]
    state:
      - value: 'on'
        styles:
          name:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
            - margin-left: '-3px'
      - value: unavailable
        styles:
          icon:
            - color: var(--label-badge-red)
            - animation: blink 2s ease infinite
          state:
            - color: var(--label-badge-red)
            - font-weight: bold
    styles:
      grid:
        - grid-template-columns: 1fr 1fr
        - align-items: center
        - justify-items: center
      icon:
        - width: 30px
        - height: 30px
        - margin-left: 1px
      name:
        - font-size: 14px
        - justify-self: start
        - margin-left: '-20px'
      state:
        - font-size: 14px
        - justify-self: start
      label:
        - font-size: 14px
        - justify-self: start
        - margin-left: '-20px'
    tap_action:
      action: toggle
      haptic: medium
    double_tap_action:
      action: more-info
    hold_action:
      action: more-info
  plug_card:
    template: styles_icon_name_state_label
    show_name: true
    show_icon: true
    show_state: false
    show_label: true
    color: auto
    label: |
      [[[
          if(entity.state == 'on') 
          {
            if ('brightness' in entity.attributes) 
            { 
              if (entity.attributes && (entity.attributes.brightness <= 255))
              { 
                var bri = Math.round(entity.attributes.brightness / 2.55); 
                return (bri ? bri : '0') + ' <span style="font-size: 13px; font-weight: 200">%</span>';
              } else {
                return '&nbsp;';
              } 
            } else {
              return '&nbsp;';
            }
          } else {
            return '&nbsp;';
          }      
      ]]]
    state:
      - value: 'on'
        styles:
          name:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
            - margin-left: '-3px'
      - value: unavailable
        styles:
          icon:
            - color: var(--label-badge-red)
            - animation: blink 2s ease infinite
          state:
            - color: var(--label-badge-red)
            - font-weight: bold
    styles:
      grid:
        - grid-template-columns: 1fr 1fr
        - align-items: center
        - justify-items: center
      icon:
        - width: 30px
        - height: 30px
        - margin-left: 1px
      name:
        - font-size: 14px
        - justify-self: start
        - margin-left: '-20px'
      state:
        - font-size: 14px
        - justify-self: start
      label:
        - font-size: 14px
        - justify-self: start
        - margin-left: '-20px'
    tap_action:
      action: toggle
      haptic: medium
    double_tap_action:
      action: more-info
    hold_action:
      action: more-info
  power_used_daily_card:
    template: styles_icon_name_state_label
    show_name: true
    show_icon: true
    show_state: true
    color: auto
    name: >-
      [[[ return entity.attributes.friendly_name.replace(' Energy Today', '');
      ]]]
    state_display: |
      [[[ 
        let value = entity.state;
        if (isNaN(value)) return value;
        value = parseFloat(value);
        return value >= 1 
          ? value.toFixed(3) + ' kWh' 
          : (value * 1000).toFixed(0) + ' W';
      ]]]
    styles:
      grid:
        - grid-template-columns: 60px auto
        - align-items: center
        - justify-items: left
      icon:
        - width: 30px
        - height: 30px
        - justify-self: start
        - padding: 0px 10px 0px 10px
        - color: |
            [[[ 
              let power = parseFloat(entity.state);
              if (isNaN(power)) return "var(--disabled-text-color)";
              
              if (power >= 5) {
                return "red";
              } else if (power >= 3.5) {
                return "darkorange";
              } else if (power >= 2) {
                return "gold";
              } else if (power >= 1) {
                return "deepskyblue";
              } else {
                return "limegreen";
              }
            ]]]
      name:
        - font-size: 15px
        - justify-self: start
        - padding-left: 5px
        - color: white
      state:
        - font-size: 14px
        - justify-self: start
        - padding-left: 10px
        - color: white
        - opacity: '.75'
    tap_action:
      action: more-info
  power_used_monthly_card:
    template: styles_icon_name_state_label
    show_name: true
    show_icon: true
    show_state: true
    color: auto
    name: >-
      [[[ return entity.attributes.friendly_name.replace(' Energy This Month',
      ''); ]]]
    state_display: |
      [[[ 
        let value = entity.state;
        if (isNaN(value)) return value;
        value = parseFloat(value);
        return value >= 1 
          ? value.toFixed(3) + ' kWh' 
          : (value * 1000).toFixed(0) + ' W';
      ]]]
    styles:
      grid:
        - grid-template-columns: 60px auto
        - align-items: center
        - justify-items: left
      icon:
        - width: 30px
        - height: 30px
        - justify-self: start
        - padding: 0px 10px 0px 10px
        - color: |
            [[[ 
              let power = parseFloat(entity.state);
              if (isNaN(power)) return "var(--disabled-text-color)";
              
              if (power >= 100) {
                return "red";
              } else if (power >= 50) {
                return "darkorange";
              } else if (power >= 25) {
                return "gold";
              } else if (power >= 5) {
                return "deepskyblue";
              } else {
                return "limegreen";
              }
            ]]]
      name:
        - font-size: 15px
        - justify-self: start
        - padding-left: 5px
        - color: white
      state:
        - font-size: 14px
        - justify-self: start
        - padding-left: 10px
        - color: white
        - opacity: '.75'
    tap_action:
      action: more-info
  scene_card:
    template: button_action
    icon: mdi:palette
    tap_action:
      haptic: heavy
      action: call-service
      service: scene.turn_on
      service_data:
        entity_id: '[[[ return entity.entity_id ]]]'
  climate_card:
    template: styles_icon_name_state_label
    icon: mdi:fire
    state_display: |
      [[[
        if (entity.state == 'on')
        {
          return 'On';
        } else {
          return 'Off';
        }
      ]]]
    label: |
      [[[
        var current = entity.attributes.current_temp;
        var target = entity.attributes.target_temp;
        var html = '';
        var color = '';

        html = '<span style="font-size: 16px;font-weight: bold;color: var(--primary-text-color)">'+current+'</span> °C';
        html += '<br>';
        if (entity.state == 'on')
        {
          color = 'var(--accent-color)';
        } else {
          color = 'var(--secondary-text-color)';
        }
        html += '<span style="font-size: 15px;color: '+color+'">'+target+'</span> °C';

        return html;

      ]]]
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
          name:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
      - value: unavailable
        icon: mdi:help
        styles:
          icon:
            - color: var(--label-badge-red)
    tap_action:
      action: navigate
      navigation_path: |
        [[[
          return '/lovelace-smartphone/' + this._config.name.toLowerCase() + '_climate';
        ]]] 
  appliance_card:
    template: styles_icon_name_state_label
    state_display: |
      [[[
        if (entity.state == 'on')
        {
          
          // return 'Running ' + states[variables.time].state;
          return 'Running <strong>' + states[variables.time].state + '</strong>';
        } else {
          return 'Off';
        }
      ]]]
    label: |
      [[[
        var html = '';
        html = '<span style="font-size: 18px;">'+ states[variables.power].state + '</span> w';

        return html;

      ]]]
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
            - animation: blink 2s ease infinite
          name:
            - font-weight: bold
          state:
            - color: var(--primary-text-color)
          label:
            - color: var(--primary-text-color)
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
      - value: unavailable
        icon: mdi:help
        styles:
          icon:
            - color: var(--label-badge-red)
  window_card:
    template: styles_icon_name_state_label
    show_last_changed: true
    state:
      - value: 'on'
        icon: phu:double-window-open
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
          name:
            - font-weight: bold
      - value: 'off'
        icon: phu:double-window-closed
        styles:
          icon:
            - color: var(--disabled-text-color)
      - value: unavailable
        icon: mdi:help
        styles:
          icon:
            - color: var(--label-badge-red)
    tap_action:
      action: more-info
  motion_card:
    template: styles_icon_name_state_label
    show_last_changed: true
    state:
      - value: 'on'
        styles:
          name:
            - font-weight: bold
      - value: unavailable
        icon: mdi:alert
        styles:
          icon:
            - color: var(--label-badge-red)
    tap_action:
      action: more-info
  alert_sensor_home:
    template: no_background
    show_name: false
    show_state: false
    show_icon: true
    styles:
      card:
        - height: 100%
      icon:
        - width: 55%
        - color: var(--disabled-text-color)
      img_cell:
        - width: 50px
        - height: 50px
  alert_card:
    template: styles_base
    show_name: true
    show_icon: true
    show_state: false
    show_label: true
    label: test
    styles:
      grid:
        - grid-template-areas: ' "i n alert" "i l alert" '
        - grid-template-columns: 65px auto 65px
        - grid-template-rows: min-content
      icon:
        - color: var(--secondary-text-color)
      img_cell:
        - width: 50px
        - height: 50px
        - border-radius: 100%
      name:
        - font-size: 16px
        - font-weight: bold
      label:
        - justify-self: start
        - align-self: left
        - font-size: 13px
        - color: var(--secondary-text-color)
    custom_fields:
      alert: |
        [[[

          if (entity.state == 'off')
          {         
            return `<ha-icon
              icon="mdi:alert-circle"
              style="width: 30px; height: 30px; color: var(--label-badge-red);">`

          } else {
            return `<ha-icon
              icon="mdi:check-circle"
              style="width: 30px; height: 30px; color: var(--label-badge-green);">`
          }

        ]]] 
    state:
      - value: 'off'
        styles:
          icon:
            - color: var(--label-badge-red)
  entity_card:
    template: no_background
    show_name: true
    show_icon: true
    show_state: true
    show_label: false
    styles:
      grid:
        - grid-template-areas: '"i n s"'
        - grid-template-columns: 50px min-content
        - grid-template-rows: min-content
      card:
        - padding-top: 0px
        - padding-bottom: 0px
      icon:
        - width: 24px
        - height: 24px
        - color: var(--disabled-text-color)
      img_cell:
        - width: 45px
        - height: 45px
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 14px
        - align-self: center
      state:
        - justify-self: end
        - font-size: 14px
        - font-weight: bold
        - text-align: right
        - margin-right: 20px
  entity_card_label:
    template: no_background
    show_name: true
    show_icon: true
    show_state: true
    show_label: true
    styles:
      grid:
        - grid-template-areas: ' "i n s" "i l s" '
        - grid-template-columns: 50px min-content
        - grid-template-rows: min-content
      card:
        - padding-top: 5px
        - padding-bottom: 5px
      icon:
        - width: 24px
        - height: 24px
        - color: var(--disabled-text-color)
      img_cell:
        - width: 45px
        - height: 45px
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 14px
      state:
        - justify-self: end
        - font-size: 14px
        - font-weight: bold
        - text-align: right
        - margin-right: 20px
      label:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - color: var(--secondary-text-color)
  automation_card:
    show_label: false
    show_state: true
    show_icon: true
    state_display: |
      [[[
        if (entity.state == 'on')
        {
          return "Active";
        } else {
          return "Inactive";
        }
      ]]]
    styles:
      grid:
        - grid-template-areas: '"i n" "i s"'
        - grid-template-columns: 70px auto
        - grid-template-rows: min-content
      card:
        - border-radius: 15px
        - margin-bottom: 0px
        - padding-top: 14px
        - padding-bottom: 14px
      icon:
        - width: 30px
        - height: 30px
      img_cell:
        - width: 50px
        - height: 50px
      name:
        - color: var(--primary-text-color)
        - justify-self: start
        - font-size: 15px
        - align-self: center
      state:
        - justify-self: start
        - align-self: left
        - font-size: 13px
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
          state:
            - color: var(--paper-item-icon-active-color)
          name:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--disabled-text-color)
          state:
            - color: var(--secondary-text-color)
          name:
            - font-weight: normal
    tap_action:
      haptic: medium
      action: toggle
  button_action:
    show_label: false
    show_state: false
    show_icon: true
    styles:
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: 55px auto
        - grid-template-rows: min-content
      card:
        - border-radius: 15px
        - margin-bottom: 0px
        - padding-top: 10px
        - padding-bottom: 10px
      icon:
        - color: var(--disabled-text-color)
        - width: 70%
      img_cell:
        - width: 45px
        - height: 45px
      name:
        - color: var(--primary-text-color)
        - font-weight: bold
        - justify-self: start
        - font-size: 15px
        - align-self: center
  button_radio:
    template: no_background
    show_icon: false
    show_name: false
    size: 80%
    show_entity_picture: true
    entity_picture: '[[[ return "/local/radio_logos/" + variables.picture_name ]]]'
    tap_action:
      haptic: medium
      action: call-service
      service: media_player.play_media
      service_data:
        entity_id: |
          [[[
            let path = window.location.pathname;
            let page = path.substring(path.lastIndexOf('/') + 1);
            let room = page.replace("_media", "");
            switch (room) {
              case "studio":
                return 'media_player.echo_dot_studio';
                break;
              case "sala":
                return 'media_player.echo_sala';
                break;
              case "camera":
                return 'media_player.echo_camera';
                break;
              case "bagno_sopra":
                return 'media_player.echo_bagno';
                break;
            }          
          ]]]      
        media_content_id: '[[[ return ''metti '' + variables.stazione + '' su tunein'' ]]]'
        media_content_type: custom
  button_harmony_activity:
    template: button_action
    entity: select.harmony_hub_activities
    state:
      - value: '[[[ return variables.activity ]]]'
        styles:
          icon:
            - color: var(--paper-item-icon-active-color)
    tap_action:
      haptic: medium
      action: call-service
      service: select.select_option
      service_data:
        entity_id: '[[[ return entity.entity_id ]]]'
        option: '[[[ return variables.activity ]]]'
views:
  - title: Hot Tub
    path: home_spa
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            show_name: false
            show_state: false
            show_icon: true
            icon: mdi:home
            styles:
              card:
                - width: 70px
                - height: 100%
              icon:
                - width: 55%
                - color: var(--paper-item-icon-active-color)
              img_cell:
                - width: 50px
                - height: 50px
                - border-radius: 100%
                - background: var(--primary-background-color)
            tap_action:
              action: navigate
              navigation_path: ehcah-mobile/home
          - type: custom:button-card
            name: Home
            label: Hot Tub
            show_label: true
            styles:
              card:
                - padding: 4px
              name:
                - font-size: 22px
                - font-weight: bold
                - justify-self: start
              label:
                - font-size: 16px
                - font-weight: 300
                - justify-self: start
      - type: grid
        square: false
        columns: 1
        cards:
          - type: thermostat
            entity: climate.spa_heater
          - type: entities
            title: Hot Tub
            entities:
              - entity: switch.spa_economy_mode
                name: Economy Mode
              - entity: light.spa_lights
                name: Lights
              - entity: fan.spa_pump_1
                name: Pump 1
      - type: entities
        title: Maintenance
        entities:
          - entity: sensor.spa_change_water_due
            name: Change water due
          - entity: sensor.spa_check_spa_due
            name: Check Spa due
          - entity: binary_sensor.spa_circulating_pump
            name: Circulating Pump
          - entity: sensor.spa_clean_filter_due
            name: Clean filter due
          - entity: binary_sensor.spa_filter_status_clean
            name: Filter Status:Clean
          - entity: binary_sensor.spa_filter_status_purge
            name: Filter Status:Purge
          - entity: binary_sensor.spa_ozone
            name: Ozone
          - entity: sensor.spa_rinse_filter_due
            name: Rinse filter due
          - entity: binary_sensor.spa_smart_winter_mode_active
            name: Smart Winter Mode:Active
          - entity: sensor.spa_smart_winter_mode_risk
            name: Smart Winter Mode:Risk
          - entity: button.spa_reconnect
            name: Reconnect
          - entity: sensor.spa_error_s
            name: Error(s)
          - entity: sensor.spa_rf_channel
            name: "RF\_Channel"
          - entity: sensor.spa_rf_signal
            name: RF Signal
          - entity: sensor.spa_status
            name: Status
  - title: Home
    icon: mdi:home
    path: home
    type: sections
    theme: ios-dark-mode-blue-red
    cards: []
    sections:
      - cards:
          - type: vertical-stack
            cards:
              - type: custom:stack-in-card
                card_mod:
                  style: |
                    ha-card {
                      border-radius: 15px;
                    }  
                cards:
                  - type: custom:button-card
                    template: row_space
                    variables:
                      height: 5
                  - type: custom:layout-card
                    layout_type: custom:grid-layout
                    layout:
                      grid-template-columns: 40% 30% 30%
                      grid-template-rows: auto
                    cards:
                      - type: custom:button-card
                        entity: weather.moncton_forecast
                        show_name: false
                        show_icon: true
                        show_state: true
                        show_label: true
                        show_entity_picture: true
                        entity_picture: |
                          [[[
                            return '/local/images/weather/weather-' + entity.state + '.png';
                          ]]]
                        label: |
                          [[[
                            var temperature = states['sensor.temperature_outdoor_ws90'].state + ' <span style="font-size: 12px; font-weight: 200">°C</span>';
                            var humidity = states['sensor.humidity_outdoor_ws90'].state + ' <span style="font-size: 12px; font-weight: 200">%</span>';
                            return temperature + '&nbsp;&nbsp;' + humidity;
                          ]]]
                        styles:
                          grid:
                            - grid-template-areas: '"i l""i s"'
                            - grid-template-columns: auto auto
                            - grid-template-rows: auto
                          card:
                            - width: 160px
                          icon:
                            - width: 45px
                            - height: 45px
                            - mqargin: 0px 5px 0px 5px
                          img_cell:
                            - width: 50px
                            - height: 50px
                            - border-radius: 100%
                          state:
                            - justify-self: start
                            - align-self: left
                            - font-size: 14px
                            - text-indent: 1px
                            - color: var(--secondary-text-color)
                          label:
                            - justify-self: start
                            - font-size: 16px
                            - font-weight: bold
                            - align-self: center
                        card_mod:
                          style: |
                            ha-card {
                              background: none !important;
                              box-shadow: none !important;
                            }
                      - type: custom:button-card
                        template: person_card_jason
                        variables:
                          person_entity: person.jason_hache
                          device_tracker_entity: device_tracker.jason_iphone_14_pro_max
                          location_sensor: sensor.jasons_iphone_14_pro_max_geocoded_location
                          person_entity_picture: true
                          multiline: true
                          person_zone1: zone.home
                          person_zone2: zone.office
                          person_address: person.jason_hache
                          person_address_locality: sensor.jasons_iphone_14_pro_max_geocoded_location
                          person_driving_entity: binary_sensor.jason_is_driving
                          person_battery_entity: sensor.jasons_iphone_14_pro_max_battery_level
                          person_battery_state_entity: sensor.jasons_iphone_14_pro_max_battery_state
                          person_commute_entity: sensor.commute_jason_at_home
                          person_commute_icon: mdi:car
                        card_mod:
                          style: |
                            ha-card {
                              background: none !important;
                              box-shadow: none !important;
                            }
                      - type: custom:button-card
                        template: person_card_micheline
                        variables:
                          person_entity: person.micheline_cormier
                          device_tracker_entity: device_tracker.micheline_iphone_13_pro
                          location_sensor: sensor.micheline_iphone_13_pro_geocoded_location
                          person_entity_picture: true
                          multiline: true
                          person_zone1: zone.home
                          person_zone2: zone.school
                          person_address: person.micheline_cormier
                          person_address_locality: sensor.micheline_iphone_13_pro_geocoded_location
                          person_driving_entity: binary_sensor.micheline_is_driving
                          person_battery_entity: sensor.micheline_iphone_13_pro_battery_level
                          person_battery_state_entity: sensor.micheline_iphone_13_pro_battery_state
                          person_commute_entity: sensor.commute_micheline_home_to_school
                          person_commute_icon: mdi:car-arrow-right
                        card_mod:
                          style: |
                            ha-card {
                              background: none !important;
                              box-shadow: none !important;
                            }
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                        entity: alarm_control_panel.panel
                        template: alert_sensor_home
                        icon: mdi:alert
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/alarm_system
                        state:
                          - value: disarmed
                            icon: mdi:shield-check
                            styles:
                              icon:
                                - color: var(--label-badge-green)
                          - value: armed_home
                            icon: mdi:shield-home
                            styles:
                              icon:
                                - color: var(--accent-color)
                          - value: armed_away
                            icon: mdi:shield-lock
                            styles:
                              icon:
                                - color: var(--label-badge-red)
                          - value: armed_night
                            icon: mdi:shield-moon
                            styles:
                              icon:
                                - color: var(--accent-color)
                          - value: arming
                            icon: mdi:shield-half-full
                            styles:
                              icon:
                                - color: var(--label-badge-yellow)
                                - animation: blink 2s ease infinite
                          - value: pending
                            icon: mdi:shield-alert-outline
                            styles:
                              icon:
                                - color: var(--label-badge-yellow)
                                - animation: blink 2s ease infinite
                          - value: triggered
                            icon: mdi:shield-alert
                            styles:
                              icon:
                                - color: var(--label-badge-red)
                                - animation: blink 2s ease infinite
                          - value: unavailable
                            icon: mdi:shield-alert
                            styles:
                              icon:
                                - color: red
                                - animation: blink 2s ease infinite
                      - type: custom:button-card
                        entity: input_boolean.kiosk_mode
                        template: alert_sensor_home
                        icon: mdi:fullscreen
                        styles:
                          icon:
                            - color: transparent
                            - width: 65%
                        state:
                          - value: 'off'
                            icon: mdi:fullscreen-exit
                            styles:
                              icon:
                                - color: orange
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: binary_sensor.network_alert
                        template: alert_sensor_home
                        icon: mdi:network
                        state:
                          - value: 'off'
                            styles:
                              icon:
                                - color: var(--error-color)
                                - animation: blink 2s ease infinite
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/status_network
                      - type: custom:button-card
                        entity: binary_sensor.compute_alert
                        template: alert_sensor_home
                        icon: mdi:server
                        styles:
                          icon:
                            - width: 50%
                        state:
                          - value: offfff
                            styles:
                              icon:
                                - color: var(--error-color)
                                - animation: blink 2s ease infinite
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/status_systems
                      - type: custom:button-card
                        entity: binary_sensor.home_alert
                        template: alert_sensor_home
                        icon: mdi:home-account
                        styles:
                          icon:
                            - width: 65%
                        state:
                          - value: 'off'
                            styles:
                              icon:
                                - color: var(--error-color)
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/status_home
                  - type: custom:button-card
                    template: row_space
                    variables:
                      height: 5
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                    styles:
                      card:
                        - height: '[[[ return variables.height + "px" ]]]'
                        - padding: 0px
                        - background-color: rgba(0, 0, 0, 0.0)
                        - box-shadow: none
                        - border-radius: 0px
                    tap_action:
                      action: none
                    variables:
                      height: 5
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                        entity: climate.thermostat
                        icon: |
                          [[[ 
                            if (entity.attributes.hvac_action == 'heating') {
                              return 'mdi:fire';
                            } else if (entity.attributes.hvac_action == 'cooling') {
                              return 'mdi:snowflake';
                            } else {
                              return 'phu:twist-thermostat';
                            }
                          ]]]
                        show_name: false
                        show_state: false
                        show_icon: true
                        styles:
                          grid:
                            - position: relative
                          icon:
                            - width: 55%
                            - color: |
                                [[[ 
                                  if (entity.attributes.hvac_action == 'heating') {
                                    return "red";
                                  } else if (entity.attributes.hvac_action == 'cooling') {
                                    return "blue";
                                  } else if (entity.state == 'heat') {
                                    return "rgba(255, 0, 0, 0.3)";
                                  } else if (entity.state == 'cool') {
                                    return "rgba(0, 0, 255, 0.3)";
                                  } else {
                                    return 'var(--disabled-text-color)';
                                  }
                                ]]]
                          img_cell:
                            - width: 50px
                            - height: 50px
                            - border-radius: 100%
                            - background: var(--primary-background-color)
                          custom_fields:
                            label:
                              - background-color: rgba(0, 0, 0, 0.0)
                              - border-radius: 50%
                              - position: absolute
                              - width: 50px
                              - height: 25px
                              - top: '-23%'
                              - left: 55%
                              - font-size: 10px
                              - font-weight: bold
                              - color: grey
                              - text-align: left
                              - line-height: 25px
                              - display: block
                        custom_fields: null
                        state:
                          - value: 0
                            operator: '>'
                            styles:
                              icon:
                                - color: var(--paper-item-icon-active-color)
                              custom_fields:
                                label:
                                  - display: block
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/heating_cooling
                      - type: custom:button-card
                        entity: sensor.number_of_lights_on_in_total_count
                        icon: |
                          [[[ 
                            return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                          ]]]
                        show_name: false
                        show_state: false
                        show_icon: true
                        styles:
                          grid:
                            - position: relative
                          icon:
                            - width: 55%
                            - color: var(--disabled-text-color)
                          img_cell:
                            - width: 50px
                            - height: 50px
                            - border-radius: 100%
                            - background: var(--primary-background-color)
                          custom_fields:
                            count:
                              - background-color: rgba(192, 192, 192, 0.25)
                              - color: white
                              - border-radius: 50%
                              - position: absolute
                              - left: 68%
                              - top: '-7%'
                              - height: 18px
                              - width: 18px
                              - font-size: 14px
                              - font-weight: bold
                              - line-height: 20px
                              - display: none
                              - padding: 1px 1px
                        custom_fields:
                          count: |
                            [[[ 
                              return entity.state == 0 ? '' : entity.state; 
                            ]]]
                        state:
                          - value: 0
                            operator: '>'
                            styles:
                              icon:
                                - color: orange
                              custom_fields:
                                count:
                                  - display: block
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/home_lights
                      - type: custom:button-card
                        entity: sensor.music_assistant_zones_active_in_total_count
                        icon: phu:sonos
                        show_name: false
                        show_state: false
                        show_icon: true
                        styles:
                          grid:
                            - position: relative
                          custom_fields:
                            count:
                              - background-color: rgba(192, 192, 192, 0.25)
                              - color: white
                              - border-radius: 50%
                              - position: absolute
                              - left: 68%
                              - top: '-7%'
                              - height: 18px
                              - width: 18px
                              - font-size: 14px
                              - font-weight: bold
                              - line-height: 20px
                              - display: none
                              - padding: 1px 1px
                          icon:
                            - width: 65%
                            - color: var(--disabled-text-color)
                          img_cell:
                            - width: 50px
                            - height: 50px
                            - border-radius: 100%
                            - background: var(--primary-background-color)
                        custom_fields:
                          count: |
                            [[[ return entity.state ]]]          
                        state:
                          - value: 0
                            operator: '>'
                            styles:
                              icon:
                                - color: var(--paper-item-icon-active-color)
                              custom_fields:
                                count:
                                  - display: block
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/home_sonos
                      - type: custom:button-card
                        entity: sensor.dallas_stars_game_day_status
                        entity_picture: /local/images/team_logos/dallas_stars_grey_96x96.png
                        show_entity_picture: true
                        show_name: false
                        show_state: false
                        show_icon: true
                        styles:
                          grid:
                            - position: relative
                          custom_fields: null
                          icon:
                            - width: 55%
                            - color: var(--disabled-text-color)
                          entity_picture:
                            - width: 80%
                            - left: 1px
                            - bottom: 2px
                          img_cell:
                            - width: 50px
                            - height: 50px
                            - bottom: 0px
                            - border-radius: 100%
                            - background: var(--primary-background-color)
                        state:
                          - value: match
                            entity_picture: /local/images/team_logos/dallas_stars_96x96.png
                            styles:
                              entity_picture:
                                - width: 100%
                                - left: 1.5px
                                - bottom: 2px
                              img_cell:
                                - width: 46px
                                - height: 46px
                                - bottom: '-2px'
                                - background: '#20864c'
                          - value: mismatch
                            entity_picture: >-
                              /local/images/team_logos/dallas_stars_grey_96x96.png
                            styles:
                              entity_picture:
                                - opacity: 0.5
                                - width: 100%
                                - left: 1.5px
                                - bottom: 2px
                              img_cell:
                                - width: 46px
                                - height: 46px
                                - bottom: '-2px'
                                - animation: blink 3s ease infinite
                                - background: rgba(255, 0, 0, 0.75)
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/sports_hockey
                      - type: custom:button-card
                        entity: remote.harmony_hub
                        icon: mdi:cctv
                        template: header_binary_sensor
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/security_cameras
                  - type: custom:button-card
                    template: row_space
                    variables:
                      height: 5
              - type: custom:mod-card
                style:
                  hui-vertical-stack-card$: |
                    #root > * {
                      margin-right: 0px!important;
                      margin-left: 0px!important;
                    }  
                card:
                  type: vertical-stack
                  cards:
                    - type: grid
                      square: false
                      columns: 3
                      cards:
                        - type: custom:button-card
                          template: no_background_main_menu
                          name: Rooms
                          show_name: true
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            service_data:
                              entity_id: input_select.home_page_section
                              option: Rooms
                        - type: custom:button-card
                          template: no_background_main_menu
                          name: Devices
                          show_name: true
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            service_data:
                              entity_id: input_select.home_page_section
                              option: Devices
                        - type: custom:button-card
                          template: no_background_main_menu
                          name: Favourites
                          show_name: true
                          tap_action:
                            action: call-service
                            service: input_select.select_option
                            service_data:
                              entity_id: input_select.home_page_section
                              option: Favourites
                    - type: conditional
                      conditions:
                        - entity: input_select.home_page_section
                          state: Rooms
                      card:
                        type: grid
                        square: false
                        columns: 2
                        cards:
                          - type: custom:button-card
                            entity: light.group_living_room_lights
                            name: Living Room
                            icon: mdi:sofa
                            template: room_homepage
                            styles:
                              icon:
                                - left: 31%
                                - bottom: 30%
                                - width: 55%
                                - transform: scaleY(0.7);
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/living_room_homepage
                            variables:
                              state_entity: >-
                                binary_sensor.everything_presence_lite_living_room_occupancy
                              motion: >-
                                binary_sensor.everything_presence_lite_living_room_occupancy
                              lights: light.group_living_room_lights
                              count: sensor.living_room_lights_on_in_total_count
                              fireplace: sensor.fireplace_power_minute_average
                              sonos: media_player.living_room
                              tv: media_player.samsung_tv_60_living_room
                              appletv: media_player.appletv_living_room
                              climate: climate.thermostat
                              temperature: sensor.temperature_trane_thermostat
                              humidity: sensor.humidity_trane_thermostat
                            triggers_update:
                              - >-
                                binary_sensor.everything_presence_lite_living_room_occupancy
                              - light.group_living_room_lights
                              - sensor.living_room_lights_on_in_total_count
                              - sensor.fireplace_power_minute_average
                              - media_player.living_room
                              - media_player.samsung_tv_60_living_room
                              - media_player.appletv_living_room
                              - climate.thermostat
                              - sensor.temperature_trane_thermostat
                              - sensor.humidity_trane_thermostat
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            entity: light.group_kitchen_lights
                            name: Kitchen
                            icon: phu:table-lighting-alt
                            template: room_homepage
                            styles:
                              icon:
                                - left: 33%
                                - width: 50%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/kitchen_homepage
                            variables:
                              state_entity: >-
                                binary_sensor.everything_presence_lite_kitchen_occupancy
                              motion: >-
                                binary_sensor.everything_presence_lite_kitchen_occupancy
                              lights: light.group_kitchen_lights
                              count: sensor.kitchen_area_lights_on_in_total_count
                              island: sensor.island_power_kitchen_power_minute_average
                              stove: sensor.stove_power_minute_average
                              microwave: sensor.microwave_power_minute_average
                              dishwasher: sensor.dishwasher_power_minute_average
                              temperature: sensor.temperature_kitchen
                              humidity: sensor.humidity_kitchen
                            triggers_update:
                              - >-
                                binary_sensor.everything_presence_lite_kitchen_occupancy
                              - light.group_kitchen_lights
                              - sensor.kitchen_area_lights_on_in_total_count
                              - sensor.island_power_kitchen_power_minute_average
                              - sensor.stove_power_minute_average
                              - sensor.microwave_power_minute_average
                              - sensor.dishwasher_power_minute_average
                              - sensor.temperature_kitchen
                              - sensor.humidity_kitchen
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            name: Master Bedroom
                            entity: light.group_master_bedroom_lights
                            icon: mdi:bed-king-outline
                            template: room_homepage
                            styles:
                              icon:
                                - left: 28%
                                - width: 60%
                                - transform: scaleY(0.8);
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/master_bedroom_homepage
                            variables:
                              state_entity: >-
                                binary_sensor.everything_presence_lite_master_bedroom_occupancy
                              motion: >-
                                binary_sensor.everything_presence_lite_master_bedroom_occupancy
                              lights: light.group_master_bedroom_lights
                              count: sensor.master_bedroom_lights_on_in_total_count
                              sonos: media_player.master_bedroom
                              tv: media_player.samsung_tv_55_master_bedroom
                              appletv: media_player.appletv_master_bedroom
                              sleep: binary_sensor.group_sleep_status
                              temperature: sensor.temperature_master_bedroom
                              humidity: sensor.humidity_master_bedroom
                            triggers_update:
                              - >-
                                binary_sensor.everything_presence_lite_master_bedroom_occupancy
                              - light.group_master_bedroom_lights
                              - sensor.master_bedroom_lights_on_in_total_count
                              - media_player.master_bedroom
                              - media_player.samsung_tv_55_master_bedroom
                              - media_player.appletv_master_bedroom
                              - binary_sensor.group_sleep_status
                              - sensor.temperature_master_bedroom
                              - sensor.humidity_master_bedroom
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            name: Master Bathroom
                            entity: light.group_master_bathroom_lights
                            icon: mdi:shower-head
                            template: room_homepage
                            styles:
                              icon:
                                - left: 35%
                                - width: 45%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/master_bathroom_homepage
                            variables:
                              state_entity: binary_sensor.motion_detection_master_bathroom
                              motion: binary_sensor.motion_detection_master_bathroom
                              lights: light.group_master_bathroom_lights
                              count: sensor.master_bathroom_lights_on_in_total_count
                              sonos: media_player.master_bathroom
                              temperature: sensor.temperature_master_bathroom
                              humidity: sensor.humidity_master_bathroom
                            triggers_update:
                              - binary_sensor.motion_detection_master_bathroom
                              - light.group_master_bedroom_lights
                              - sensor.master_bathroom_lights_on_in_total_count
                              - media_player.master_bathroom
                              - sensor.temperature_master_bathroom
                              - sensor.humidity_master_bathroom
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            name: Office
                            entity: light.group_office_lights
                            icon: phu:desktop-computer
                            template: room_homepage
                            styles:
                              icon:
                                - left: 35%
                                - width: 45%
                                - position: absolute
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/office_homepage
                            variables:
                              state_entity: >-
                                binary_sensor.everything_presence_lite_office_occupancy
                              motion: >-
                                binary_sensor.everything_presence_lite_office_occupancy
                              lights: light.group_office_lights
                              count: sensor.office_lights_on_in_total_count
                              tower: sensor.office_heater_current_consumption
                              sonos: media_player.office
                              tv: media_player.panasonic_tv_42_office
                              appletv: media_player.appletv_office
                              temperature: sensor.temperature_office
                              humidity: sensor.humidity_office
                            triggers_update:
                              - >-
                                binary_sensor.everything_presence_lite_office_occupancy
                              - light.group_office_lights
                              - sensor.office_lights_on_in_total_count
                              - sensor.office_heater_current_consumption
                              - media_player.office
                              - media_player.panasonic_tv_42_office
                              - media_player.appletv_office
                              - sensor.temperature_office
                              - sensor.humidity_office
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            name: Gym
                            entity: light.group_gym_lights
                            icon: mdi:dumbbell
                            template: room_homepage
                            styles:
                              icon:
                                - left: 34%
                                - width: 45%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/gym_homepage
                            variables:
                              state_entity: >-
                                binary_sensor.everything_presence_lite_gym_occupancy
                              motion: >-
                                binary_sensor.everything_presence_lite_gym_occupancy
                              lights: light.group_gym_lights
                              count: sensor.gym_lights_on_in_total_count
                              sonos: media_player.gym
                              appletv: media_player.appletv_gym
                              temperature: sensor.temperature_gym
                              humidity: sensor.humidity_gym
                            triggers_update:
                              - >-
                                binary_sensor.everything_presence_lite_gymn_occupancy
                              - light.group_gym_lights
                              - sensor.gym_lights_on_in_total_count
                              - media_player.gym
                              - media_player.appletv_gym
                              - sensor.temperature_gym
                              - sensor.humidity_gym
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            entity: light.group_main_floor_lights
                            name: Main Floor
                            icon: mdi:home-floor-g
                            template: room_homepage
                            styles:
                              icon:
                                - left: 30%
                                - width: 55%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/main_floor_homepage
                            variables:
                              state_entity:
                                - sensor.clothes_washer_power_minute_average
                                - sensor.clothes_dryer_power_minute_average
                              lights: light.group_main_floor_lights
                              count: sensor.main_floor_lights_on_in_total_count
                              plugs: switch.group_main_floor_plugs
                              thermostat: sensor.furnace_system_status
                              washer: sensor.clothes_washer_power_minute_average
                              dryer: sensor.clothes_dryer_power_minute_average
                              temperature: sensor.main_floor_temperature
                              humidity: sensor.main_floor_humidity
                            triggers_update:
                              - light.group_main_floor_lights
                              - switch.group_main_floor_plugs
                              - sensor.main_floor_lights_on_in_total_count
                              - sensor.furnace_system_status
                              - sensor.clothes_washer_power_minute_average
                              - sensor.clothes_dryer_power_minute_average
                              - sensor.main_floor_temperature
                              - sensor.main_floor_humidity
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
                          - type: custom:button-card
                            name: Basement
                            entity: light.group_basement_lights
                            icon: mdi:home-floor-b
                            template: room_homepage
                            styles:
                              icon:
                                - left: 30%
                                - width: 55%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/basement_homepage
                            variables:
                              state_entity: sensor.office_heater_current_consumption
                              lights: light.group_basement_lights
                              count: sensor.basement_lights_on_in_total_count
                              plugs: switch.group_electrical_room_plugs
                              tower: sensor.office_heater_current_consumption
                              printer: sensor.ender_3_v3_ke_printer_plug_power
                              temperature: sensor.basement_temperature
                              humidity: sensor.basement_humidity
                            triggers_update:
                              - light.group_basement_lights
                              - switch.group_electrical_room_plugs
                              - sensor.basement_lights_on_in_total_count
                              - sensor.office_heater_current_consumption
                              - sensor.ender_3_v3_ke_printer_plug_power
                              - sensor.basement_temperature
                              - sensor.basement_humidity
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
              - type: custom:mod-card
                style:
                  hui-vertical-stack-card$: |
                    #root > * {
                      margin-right: 10px!important;
                      margin-left: 10px!important;
                    }  
                card:
                  type: vertical-stack
                  cards:
                    - type: conditional
                      conditions:
                        - entity: input_select.home_page_section
                          state: Devices
                      card:
                        type: grid
                        square: false
                        columns: 1
                        cards:
                          - type: custom:button-card
                            entity: sensor.ehcah_vue_main_energy_this_month
                            entity_picture: /local/images/custom_logos/emporia_96_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Emporia Energy Monitoring
                            styles:
                              name:
                                - font-weight: bold
                                - font-size: 16px
                                - color: white
                                - margin-left: 15px
                              entity_picture:
                                - width: 30px
                                - height: 30px
                                - left: '-1px'
                                - bottom: 1px
                              state:
                                - color: white
                                - margin-left: 20px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                            state_display: |
                              [[[ 
                                let value = parseFloat(states[entity.entity_id].state);
                                if (isNaN(value)) return 'N/A';
                                let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                return formattedValue + ' <span style="font-size: 12px; font-weight: 300; opacity: .99;">&nbsp;kWh Month to Date</span>';
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/power_homepage
                          - type: custom:button-card
                            entity: sensor.ehcah_udm_pro_max_uptime
                            entity_picture: /local/images/custom_logos/rogers_96_96.png
                            show_entity_picture: true
                            show_name: true
                            show_state: true
                            show_label: true
                            name: Rogers Internet
                            state_display: |
                              [[[
                                let rawDate = states['sensor.ehcah_udm_pro_max_uptime'].state;
                                if (!rawDate || rawDate === 'unknown' || rawDate === 'unavailable') return "No Data";

                                let dateObj = new Date(rawDate);
                                let options = { year: 'numeric', month: 'short', day: 'numeric' };
                                return dateObj.toLocaleDateString('en-US', options); 
                              ]]]
                            styles:
                              card:
                                - border-radius: 15px
                                - margin-bottom: 0px
                                - padding-top: 14px
                                - padding-bottom: 14px
                              grid:
                                - grid-template-areas: '"i n s" "i l s"'
                                - grid-template-columns: 65px auto auto
                                - grid-template-rows: min-content
                              name:
                                - font-weight: bold
                                - font-size: 1px
                                - color: var(--primary-text-color)
                                - margin-left: 15px
                                - justify-self: start
                                - font-size: 15px
                                - align-self: center
                              entity_picture:
                                - width: 30px
                                - height: 30px
                                - left: 0px
                                - bottom: 1px
                              state:
                                - justify-self: end
                                - align-self: center
                                - text-align: right
                                - color: var(--secondary-text-color)
                                - font-size: 13px
                                - padding-right: 15px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                              label:
                                - text-align: left
                                - margin-left: 25px
                                - justify-self: start
                                - align-self: center
                                - font-size: 13px
                                - color: var(--secondary-text-color)
                            label: |
                              [[[
                                return states['sensor.speedtest_download'].state + " Mbps ⬇ &nbsp;| &nbsp; " + states['sensor.speedtest_upload'].state + " Mbps ⬆";
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/network_internet
                          - type: custom:button-card
                            entity: sensor.unifi_clients_and_devices
                            entity_picture: /local/images/custom_logos/unifi_96_96.png
                            show_entity_picture: true
                            show_name: true
                            show_state: true
                            show_label: true
                            name: Home Network
                            state_display: |
                              [[[
                                return states['update.unifi_gateway_update'].attributes.update || 'Up to Date';
                              ]]]
                            styles:
                              card:
                                - border-radius: 15px
                                - margin-bottom: 0px
                                - padding-top: 14px
                                - padding-bottom: 14px
                              grid:
                                - grid-template-areas: '"i n s" "i l s"'
                                - grid-template-columns: 65px auto auto
                                - grid-template-rows: min-content
                              name:
                                - font-weight: bold
                                - font-size: 1px
                                - color: var(--primary-text-color)
                                - margin-left: 15px
                                - justify-self: start
                                - font-size: 15px
                                - align-self: center
                              entity_picture:
                                - width: 35px
                                - height: 35px
                                - left: 1px
                                - bottom: 0px
                              state:
                                - justify-self: end
                                - align-self: center
                                - text-align: right
                                - color: var(--secondary-text-color)
                                - font-size: 13px
                                - padding-right: 15px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                              label:
                                - text-align: left
                                - margin-left: 25px
                                - justify-self: start
                                - align-self: center
                                - font-size: 13px
                                - color: var(--secondary-text-color)
                            label: |
                              [[[
                                let counts = states['sensor.unifi_clients_and_devices'].attributes.counts || {};
                                let wiredClients = counts.wiredClient || 0;
                                let wifiClients = counts.wifiClient || 0;
                                return `<span style="color: lightgrey;">${wiredClients}</span> 
                                        <span style="color: white;">LAN Users</span> &nbsp; | &nbsp;
                                        <span style="color: lightgrey;">${wifiClients}</span> 
                                        <span style="color: white;">WLAN Users</span>`;
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/status_network
                          - type: custom:button-card
                            entity: sensor.spa_current_temperature
                            entity_picture: /local/images/custom_logos/hydropool_96.png
                            show_entity_picture: true
                            show_state: true
                            show_label: true
                            template: power_used_daily_card
                            name: Hydropool Hot Tub
                            state_display: |
                              [[[
                                return states['sensor.spa_heating_status'].state;
                              ]]]
                            styles:
                              card:
                                - border-radius: 15px
                                - margin-bottom: 0px
                                - padding-top: 14px
                                - padding-bottom: 14px
                              grid:
                                - grid-template-areas: '"i n s" "i l s"'
                                - grid-template-columns: 65px auto auto
                                - grid-template-rows: min-content
                              name:
                                - font-weight: bold
                                - font-size: 1px
                                - color: var(--primary-text-color)
                                - margin-left: 15px
                                - justify-self: start
                                - font-size: 15px
                                - align-self: center
                              entity_picture:
                                - width: 30px
                                - height: 30px
                                - left: 0px
                                - bottom: '-1px'
                              state:
                                - justify-self: end
                                - align-self: center
                                - text-align: right
                                - color: var(--secondary-text-color)
                                - font-size: 13px
                                - padding-right: 15px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                              label:
                                - text-align: left
                                - margin-left: 25px
                                - justify-self: start
                                - align-self: center
                                - font-size: 13px
                                - color: var(--secondary-text-color)
                            label: |
                              [[[ 
                                let value = parseFloat(states[entity.entity_id].state);
                                if (isNaN(value)) return 'N/A';
                                let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                return formattedValue + ' <span style="font-size: 12px; font-weight: 200; opacity: .99;">&nbsp;°F</span>';
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/home_spa
                          - type: custom:button-card
                            entity: binary_sensor.systems_alert_lorex_fusion_nvr
                            entity_picture: /local/images/custom_logos/lorex_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Security Cameras
                            state_display: |
                              [[[
                                return states['binary_sensor.systems_alert_lorex_fusion_nvr'].state === 'on' ? 'Online' : 'Offline';
                              ]]]                            
                            styles:
                              name:
                                - font-weight: bold
                                - font-size: 16px
                                - color: white
                                - margin-left: 15px
                              entity_picture:
                                - width: 35px
                                - height: 35px
                                - left: 1px
                                - bottom: 0px
                              state:
                                - color: white
                                - margin-left: 20px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: '#1a428a'
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/security_cameras
                          - type: custom:button-card
                            entity: climate.thermostat
                            entity_picture: /local/images/custom_logos/trane_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Heat Pump
                            state_display: |
                              [[[
                                return states['climate.thermostat'].attributes.hvac_action;
                              ]]]
                            styles:
                              card:
                                - border-radius: 15px
                                - margin-bottom: 0px
                                - padding-top: 14px
                                - padding-bottom: 14px
                              grid:
                                - grid-template-areas: '"i n s" "i l s"'
                                - grid-template-columns: 65px auto auto
                                - grid-template-rows: min-content
                              name:
                                - font-weight: bold
                                - font-size: 1px
                                - color: var(--primary-text-color)
                                - margin-left: 15px
                                - justify-self: start
                                - font-size: 15px
                                - align-self: center
                              entity_picture:
                                - width: 30px
                                - height: 30px
                                - left: 0px
                                - bottom: '-1px'
                              state:
                                - justify-self: end
                                - align-self: center
                                - text-align: right
                                - color: var(--secondary-text-color)
                                - font-size: 13px
                                - padding-right: 15px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                              label:
                                - text-align: left
                                - margin-left: 25px
                                - justify-self: start
                                - align-self: center
                                - font-size: 13px
                                - color: var(--secondary-text-color)
                            label: |
                              [[[ 
                                let value = parseFloat(states['climate.thermostat'].attributes.current_temperature);
                                if (isNaN(value)) return 'N/A';
                                let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                return formattedValue + ' <span style="font-size: 12px; font-weight: 200; opacity: .99;">&nbsp;°C</span>';
                              ]]]
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/heating_cooling
                          - type: custom:button-card
                            entity: media_player.samsung_tv_60_living_room
                            entity_picture: /local/images/custom_logos/samsung_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Living Room TV
                            state_display: |
                              [[[
                                let state = entity.state;
                                return state === 'playing' ? 'On' :
                                       state === 'off' ? 'Off' :
                                       'Idle';
                              ]]]
                            styles:
                              name:
                                - font-weight: bold
                                - font-size: 16px
                                - color: white
                                - margin-left: 15px
                              entity_picture:
                                - width: 38px
                                - height: 38px
                                - left: 0px
                                - bottom: 0px
                              state:
                                - color: white
                                - margin-left: 20px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/home
                          - type: custom:button-card
                            entity: media_player.samsung_tv_55_master_bedroom
                            entity_picture: /local/images/custom_logos/samsung_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Master Bedroom TV
                            state_display: |
                              [[[
                                let state = entity.state;
                                return state === 'playing' ? 'On' :
                                       state === 'off' ? 'Off' :
                                       'Idle';
                              ]]]
                            styles:
                              name:
                                - font-weight: bold
                                - font-size: 16px
                                - color: white
                                - margin-left: 15px
                              entity_picture:
                                - width: 38px
                                - height: 38px
                                - left: 0px
                                - bottom: 0px
                              state:
                                - color: white
                                - margin-left: 20px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/home
                          - type: custom:button-card
                            entity: media_player.samsung_tv_75_family_room
                            entity_picture: /local/images/custom_logos/samsung_96.png
                            show_entity_picture: true
                            show_state: true
                            template: power_used_daily_card
                            name: Family Room TV
                            state_display: |
                              [[[
                                let state = entity.state;
                                return state === 'playing' ? 'On' :
                                       state === 'off' ? 'Off' :
                                       'Idle';
                              ]]]
                            styles:
                              name:
                                - font-weight: bold
                                - font-size: 16px
                                - color: white
                                - margin-left: 15px
                              entity_picture:
                                - width: 38px
                                - height: 38px
                                - left: 0px
                                - bottom: 0px
                              state:
                                - color: white
                                - margin-left: 20px
                              img_cell:
                                - width: 50px
                                - height: 50px
                                - border-radius: 100%
                                - margin-left: 10px
                                - background: rgba(192, 192, 192, 0.1)
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/home
                    - type: conditional
                      conditions:
                        - entity: input_select.home_page_section
                          state: Favourites
                      card:
                        type: grid
                        square: false
                        columns: 2
                        cards:
                          - type: custom:button-card
                            name: Basement
                            entity: light.group_basement_lights
                            icon: mdi:home-floor-b
                            template: room_homepage
                            styles:
                              icon:
                                - left: 30%
                                - width: 55%
                            tap_action:
                              action: navigate
                              navigation_path: /ehcah-mobile/basement_homepage
                            variables:
                              state_entity: sensor.office_heater_current_consumption
                              lights: light.group_basement_lights
                              tower: sensor.office_heater_current_consumption
                              temperature: sensor.basement_temperature
                              humidity: sensor.basement_humidity
                            triggers_update:
                              - light.group_basement_lights
                              - sensor.office_heater_current_consumption
                              - sensor.basement_temperature
                              - sensor.basement_humidity
                            layout_options:
                              grid_columns: 2
                              grid_rows: auto
    max columns: 3
    visible:
      - user: 162bb332e09546d29a26102a9ca53218
      - user: f090ba11421f4d95a7ad84bcc54b4a3f
  - title: Lights
    path: home_lights
    icon: phu:bulb-group
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Lights
                  - type: custom:button-card
                    entity: sensor.number_of_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                      custom_fields:
                        count:
                          - background-color: rgba(192, 192, 192, 0.25)
                          - color: white
                          - border-radius: 50%
                          - position: absolute
                          - left: 67%
                          - top: 0%
                          - height: 18px
                          - width: 18px
                          - font-size: 14px
                          - font-weight: bold
                    custom_fields:
                      count: |
                        [[[ 
                          return entity.state == 0 ? '' : entity.state; 
                        ]]]
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: 'Lights on:'
                  template: label_heading
                - type: markdown
                  content: >
                    {% set lights = states.light 
                       | selectattr('state', 'equalto', 'on')
                       | rejectattr('entity_id', 'equalto', 'light.home_assistant_voice_095f12_led_ring') 
                       | rejectattr('attributes.entity_id', 'defined') 
                       | map(attribute='name') 
                       | list 
                       | sort %}
                    {{ lights | join(',&nbsp; ') if lights else 'No lights on'
                    }}
                  card_mod:
                    style: |
                      ha-card {
                        font-size: 14px;
                        font-weight: normal;
                        line-height: 150%;
                        min-height: 0px;
                        color: var(--primary-text-color);
                        border-radius: 15px;
                      }
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Outside Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_outside_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Hallway Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_hallway_area_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Kitchen Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_kitchen_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Living Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_living_room_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Main Bathroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_main_bathroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Master Bathroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bathroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Master Bedroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bedroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Electrical Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_electrical_room
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Family Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_family_room_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Gym
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_gym_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Office
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_office_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Storage Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_storage_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Security Cameras
    path: security_cameras
    icon: mdi:cctv
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Security
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: horizontal-stack
                cards:
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.systems_alert_lorex_fusion_nvr
                        template: header_base
                        icon: mdi:cctv
                        state:
                          - value: 'off'
                            styles:
                              icon:
                                - color: var(--paper-item-icon-active-color)
                          - value: 'on'
                            styles:
                              icon:
                                - color: var(--disabled-text-color)
                        confirmation:
                          text: |
                            [[[
                              if ( entity.state == 'on' )
                              {
                                return "Activate Video Surveillance?"
                              } else {
                                return "Deativate Video Surveillance?"
                              }
                            ]]]
                      - type: custom:button-card
                        template: empty_card
                      - type: custom:button-card
                        template: header_base
                        icon: mdi:cog
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/security_camera_settings
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: picture-entity
                  entity: camera.driveway
                  show_name: false
                  show_state: false
                - type: picture-entity
                  entity: camera.side_driveway
                  show_name: false
                  show_state: false
                - type: picture-entity
                  entity: camera.front_doorbell
                  show_name: false
                  show_state: false
                - type: picture-entity
                  entity: camera.front_hallway
                  show_name: false
                  show_state: false
                - type: picture-entity
                  entity: camera.garage
                  show_name: false
                  show_state: false
                - type: picture-entity
                  entity: camera.back_deck
                  show_name: false
                  show_state: false
  - title: Alarm
    path: alarm_system
    icon: mdi:security
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Security
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: horizontal-stack
                cards:
                  - type: grid
                    square: false
                    columns: 5
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.systems_alert_lorex_fusion_nvr
                        template: header_base
                        icon: mdi:cctv
                        state:
                          - value: 'off'
                            styles:
                              icon:
                                - color: var(--paper-item-icon-active-color)
                          - value: 'on'
                            styles:
                              icon:
                                - color: var(--disabled-text-color)
                        confirmation:
                          text: |
                            [[[
                              if ( entity.state == 'on' )
                              {
                                return "Activate Video Surveillance?"
                              } else {
                                return "Deativate Video Surveillance?"
                              }
                            ]]]                         
                      - type: custom:button-card
                        entity: binary_sensor.main_floor_l_r_motion
                        template: header_binary_sensor
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/alarm_motion
                      - type: custom:button-card
                        template: empty_card
                      - type: custom:button-card
                        template: header_base
                        icon: mdi:cog
                        tap_action:
                          action: navigate
                          navigation_path: /ehcah-mobile/alarm_settings
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: alarm-panel
                  states:
                    - arm_home
                    - arm_away
                    - arm_night
                  entity: alarm_control_panel.panel
                  name: Alarm
                - type: custom:button-card
                  entity: binary_sensor.motion_detection_garage
                  show_name: true
                  show_icon: false
                  show_state: true
                  styles:
                    card:
                      - padding-left: 10px
                    name:
                      - color: var(--secondary-text-color)
                      - justify-self: start
                      - font-size: 15px
                      - margin-bottom: 5px
                    state:
                      - justify-self: start
                      - font-size: 18px
                  tap_action:
                    action: none
  - title: Heating Cooling
    path: heating_cooling
    icon: mdi:thermometer
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Heating and Cooling
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 5
                cards:
                  - type: custom:button-card
                    entity: sensor.temperature_trane_thermostat
                    template: header_binary_sensor
                    show_state: true
                    styles:
                      icon:
                        - color: orange
                  - type: custom:button-card
                    entity: sensor.humidity_trane_thermostat
                    template: header_binary_sensor
                    show_state: true
                    styles:
                      icon:
                        - color: orange
                        - width: 70%
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Living Room
                  template: label_heading
                - type: custom:stack-in-card
                  cards:
                    - type: horizontal-stack
                      cards:
                        - type: custom:simple-thermostat
                          entity: climate.thermostat
                          header: false
                          sensors:
                            - entity: climate.thermostat
                              name: Mode
                          step_size: '0.5'
                          hide:
                            temperature: false
                            state: true
                          layout:
                            step: row
                            mode:
                              headings: false
                              icons: true
                              names: true
                          control:
                            hvac:
                              _name: Mode
                              'off': true
                              heat: true
                              cool: true
                              auto: true
                              heat_cool: false
                            preset:
                              None: false
                              _name: Preset
                              home:
                                icon: mdi:weather-night
                              away:
                                icon: mdi:weather-sunny
                              sleep:
                                icon: mdi:arrow-top-right-thick
                          card_mod:
                            style: |
                              ha-card {
                                background: none!important;
                                box-shadow: none;
                                border-radius: 15px;
                                --st-font-size-title: 24px;
                                --st-font-size-sensors: 16px;
                                --st-spacing: 5px;
                              }
                              .current--value {
                                font-size: 26px!important;
                                color: var(--accent-color)orange
                              }
                    - type: custom:button-card
                      entity: binary_sensor.furnace_blower_active
                      template: no_background
                      name: 'System Active:'
                      show_name: true
                      show_icon: false
                      show_label: false
                      show_last_changed: true
                      styles:
                        grid:
                          - grid-template-areas: '"n l"'
                          - grid-template-columns: 150px auto
                        name:
                          - font-size: 18px
                          - color: var(--primary-text-color)
                          - padding-left: 2%
                        label:
                          - font-size: 14px
                          - color: var(--secondary-text-color)
                          - padding-right: 10%
                          - justify-self: end
                          - align-self: center
                    - type: custom:button-card
                      template: row_border
                      variables:
                        margin_bottom: 0
                        margin_top: 0
                    - type: custom:mini-graph-card
                      entities:
                        - entity: sensor.temperature_trane_thermostat
                          name: Interior
                      hours_to_show: 24
                      points_per_hour: 2
                      hour24: true
                      show:
                        graph: line
                        name: false
                        icon: false
                        state: false
                        average: true
                        extrema: true
  - title: Power
    path: power_homepage
    icon: mdi:speedometer
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Power Consumption
                  - type: custom:button-card
                    template: header_sensor_text
                    entity: sensor.ehcah_vue_main_energy_this_month
                    styles:
                      state:
                        - font-weight: bold
                    state_display: |
                      [[[ 
                        let value = parseFloat(states[entity.entity_id].state);
                        if (isNaN(value)) return 'N/A';
                        let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        return formattedValue + ' <span style="font-size: 16px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                      ]]]
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 5
                - type: custom:button-card
                  name: 'Monitored Panel:'
                  template: label_heading
                - type: custom:button-card
                  entity: sensor.ehcah_vue_main_power_minute_average
                  entity_picture: /local/images/custom_logos/nbpower_92x92.png
                  show_entity_picture: true
                  show_state: true
                  template: power_used_daily_card
                  name: Real-time Usage
                  styles:
                    name:
                      - font-weight: bold
                      - font-size: 16px
                      - color: white
                      - margin-left: 15px
                    entity_picture:
                      - width: 36px
                      - height: 39px
                      - left: 1px
                      - bottom: 0px
                    state:
                      - color: white
                      - margin-left: 20px
                    img_cell:
                      - width: 45px
                      - height: 45px
                      - border-radius: 100%
                      - margin-left: 10px
                      - background: var(--primary-background-color)
                  state_display: |
                    [[[ 
                      let value = parseFloat(states[entity.entity_id].state);
                      if (isNaN(value)) return 'N/A';
                      let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                      return formattedValue + ' <span style="font-size: 12px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/power_daily
                - type: custom:button-card
                  entity: sensor.ehcah_vue_main_energy_today
                  entity_picture: /local/images/custom_logos/nbpower_92x92.png
                  show_entity_picture: true
                  show_state: true
                  template: power_used_daily_card
                  name: Today's Usage
                  styles:
                    name:
                      - font-weight: bold
                      - font-size: 16px
                      - color: white
                      - margin-left: 15px
                    entity_picture:
                      - width: 36px
                      - height: 39px
                      - left: 1px
                      - bottom: 0px
                    state:
                      - color: white
                      - margin-left: 20px
                    img_cell:
                      - width: 45px
                      - height: 45px
                      - border-radius: 100%
                      - margin-left: 10px
                      - background: var(--primary-background-color)
                  state_display: |
                    [[[ 
                      let value = parseFloat(states[entity.entity_id].state);
                      if (isNaN(value)) return 'N/A';
                      let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                      return formattedValue + ' <span style="font-size: 12px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/power_daily
                - type: custom:button-card
                  entity: sensor.ehcah_vue_main_energy_this_month
                  entity_picture: /local/images/custom_logos/nbpower_92x92.png
                  show_entity_picture: true
                  show_state: true
                  template: power_used_monthly_card
                  name: Month to Date Usage
                  styles:
                    name:
                      - font-weight: bold
                      - font-size: 16px
                      - color: white
                      - margin-left: 15px
                    entity_picture:
                      - width: 36px
                      - height: 39px
                      - left: 1px
                      - bottom: 0px
                    state:
                      - color: white
                      - margin-left: 20px
                    img_cell:
                      - width: 45px
                      - height: 45px
                      - border-radius: 100%
                      - margin-left: 10px
                      - background: var(--primary-background-color)
                  state_display: |
                    [[[ 
                      let value = parseFloat(states[entity.entity_id].state);
                      if (isNaN(value)) return 'N/A';
                      let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                      return formattedValue + ' <span style="font-size: 12px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/power_monthly
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: 'Live:'
                  template: label_heading
                - type: custom:power-flow-card-plus
                  entities:
                    grid:
                      entity: sensor.ehcah_vue_main_power_minute_average
                      display_state: one_way
                      color_circle: true
                  w_decimals: 0
                  kw_decimals: 2
                  min_flow_rate: 3
                  max_flow_rate: 10
                  watt_threshold: 10000
                  clickable_entities: true
                - type: custom:button-card
                  name: 'Today:'
                  template: label_heading
                - type: custom:power-flow-card-plus
                  entities:
                    grid:
                      entity: sensor.ehcah_vue_main_energy_today
                      display_state: one_way
                      color_circle: true
                  w_decimals: 0
                  kw_decimals: 2
                  min_flow_rate: 5
                  max_flow_rate: 10
                  watt_threshold: 10000
                  clickable_entities: true
                - type: custom:button-card
                  name: 'This Month:'
                  template: label_heading
                - type: custom:power-flow-card-plus
                  entities:
                    grid:
                      entity: sensor.ehcah_vue_main_energy_this_month
                      display_state: one_way
                      color_circle: true
                  w_decimals: 0
                  kw_decimals: 2
                  min_flow_rate: 7
                  max_flow_rate: 10
                  watt_threshold: 10000
                  clickable_entities: true
  - title: Daily Power Usage
    path: power_daily
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/power_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Power Consumption
                    label: Today
                  - type: custom:button-card
                    template: header_sensor_text
                    entity: sensor.ehcah_vue_main_energy_today
                    styles:
                      state:
                        - font-weight: bold
                    state_display: |
                      [[[ 
                        let value = parseFloat(states[entity.entity_id].state);
                        if (isNaN(value)) return 'N/A';
                        let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        return formattedValue + ' <span style="font-size: 16px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                      ]]]
              - type: grid
                square: false
                columns: 1
                cards:
                  - type: custom:button-card
                    entity: sensor.nbpower_total_daily
                    entity_picture: /local/images/custom_logos/nbpower_92x92.png
                    show_entity_picture: true
                    template: power_used_daily_card
                    name: Estimated Cost
                    styles:
                      name:
                        - font-weight: bold
                        - font-size: 16px
                        - color: white
                        - margin-left: 15px
                      entity_picture:
                        - width: 41px
                        - height: 44px
                        - left: 1px
                        - bottom: 0px
                      state:
                        - font-weight: bold
                        - font-size: 15px
                        - color: white
                        - margin-left: 15px
                      img_cell:
                        - width: 50px
                        - height: 50px
                        - border-radius: 100%
                        - margin-left: 10px
                        - background: var(--primary-background-color)
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: 'Today:'
                  template: label_heading
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 5
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: sensor.group_energy_use_today
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: power_used_daily_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: state
                    numeric: true
                    reverse: true
                    ignore_case: true
  - title: Monthly Power Usage
    path: power_monthly
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/power_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Power Consumption
                    label: MTD
                  - type: custom:button-card
                    template: header_sensor_text
                    entity: sensor.ehcah_vue_main_energy_this_month
                    styles:
                      state:
                        - font-weight: bold
                    state_display: |
                      [[[ 
                        let value = parseFloat(states[entity.entity_id].state);
                        if (isNaN(value)) return 'N/A';
                        let formattedValue = value.toFixed(1).replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        return formattedValue + ' <span style="font-size: 16px; font-weight: 200; opacity: .99;">&nbsp;kWh</span>';
                      ]]]
              - type: grid
                square: false
                columns: 1
                cards:
                  - type: custom:button-card
                    entity: sensor.nbpower_total_this_month
                    entity_picture: /local/images/custom_logos/nbpower_92x92.png
                    show_entity_picture: true
                    template: power_used_monthly_card
                    name: Estimated Cost
                    styles:
                      name:
                        - font-weight: bold
                        - font-size: 16px
                        - color: white
                        - margin-left: 15px
                      entity_picture:
                        - width: 41px
                        - height: 44px
                        - left: 1px
                        - bottom: 0px
                      state:
                        - font-weight: bold
                        - font-size: 15px
                        - color: white
                        - margin-left: 15px
                      img_cell:
                        - width: 50px
                        - height: 50px
                        - border-radius: 100%
                        - margin-left: 10px
                        - background: var(--primary-background-color)
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: 'This Month:'
                  template: label_heading
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 5
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: sensor.group_energy_use_this_month
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: power_used_monthly_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: state
                    numeric: true
                    reverse: true
                    ignore_case: true
  - title: TV
    path: tv
    icon: mdi:television
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: true
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: TV
                  - type: custom:button-card
                    template: header_sensor_text
                    entity: remote.harmony_hub
                    styles:
                      state:
                        - font-size: 20px
                        - justify-self: end
                        - align-self: center
                        - text-align: right
                        - margin-right: 20px
                    state_display: |
                      [[[
                        return states['sensor.current_activity'].state;
                      ]]]             
                    state:
                      - value: 'off'
                        styles:
                          state:
                            - font-weight: normal
                            - color: var(--disabled-text-color)
                      - value: 'on'
                        styles:
                          state:
                            - font-weight: bold
                            - color: var(--accent-color)
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 5
                cards:
                  - type: custom:button-card
                    entity: media_player.chromecast_camera
                    icon: mdi:google-chrome
                    template: header_base
                    state:
                      - value: playing
                        styles:
                          icon:
                            - color: var(--paper-item-icon-active-color)
                  - type: custom:button-card
                    entity: media_player.fire_tv_sala
                    icon: phu:firetv
                    template: header_base
                    state:
                      - value: playing
                        styles:
                          icon:
                            - color: var(--paper-item-icon-active-color)
                  - type: custom:button-card
                    entity: switch.cuffie
                    icon: mdi:headphones-bluetooth
                    template: header_switch
                  - type: custom:button-card
                    template: header_base
                    icon: mdi:cog
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace-smartphone/tv_settings
                  - type: custom:button-card
                    entity: remote.harmony_hub
                    template: header_off_button
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: grid
                  square: false
                  columns: 3
                  cards:
                    - type: custom:button-card
                      entity: input_select.ui_smartphone_harmony_menu
                      name: Attività
                      template: state_switch_menu
                    - type: custom:button-card
                      entity: input_select.ui_smartphone_harmony_menu
                      name: Routine
                      template: state_switch_menu
                    - type: custom:button-card
                      entity: input_select.ui_smartphone_harmony_menu
                      name: Comandi
                      template: state_switch_menu
                - type: custom:state-switch
                  entity: input_select.ui_smartphone_harmony_menu
                  states:
                    Actions:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Sky
                          icon: mdi:satellite-uplink
                          variables:
                            activity: Sky
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Digitale
                          icon: mdi:television-classic
                          variables:
                            activity: Digitale
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Fire TV
                          icon: phu:firetv
                          variables:
                            activity: Fire TV
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Nintendo
                          icon: mdi:nintendo-switch
                          variables:
                            activity: Nintendo
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Lettore DVD
                          icon: mdi:disc-player
                          variables:
                            activity: Lettore DVD
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Timvision
                          icon: mdi:alpha-t-circle
                          variables:
                            activity: Timvision
                        - type: custom:button-card
                          template: button_harmony_activity
                          name: Sky + Sinto
                          icon: mdi:speaker
                          variables:
                            activity: Sky Sinto
                    Routine:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          name: Netflix
                          icon: mdi:netflix
                          template: button_action
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.routine_netflix
                        - type: custom:button-card
                          name: Cartoni
                          template: button_action
                          icon: mdi:baby-face-outline
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.harmony_channel_sky
                            service_data:
                              canale: 5041
                        - type: custom:button-card
                          name: Guarda TG
                          icon: mdi:newspaper-variant-outline
                          template: button_action
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.harmony_guarda_tg
                        - type: custom:button-card
                          name: Guarda DVD
                          icon: mdi:disc-player
                          template: button_action
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.routine_dvd_film
                    Commands:
                      type: grid
                      square: false
                      columns: 2
                      cards:
                        - type: custom:button-card
                          name: Toggle TV
                          icon: mdi:television
                          template: button_action
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.harmony_tv_command
                            service_data:
                              comando: PowerToggle
                        - type: custom:button-card
                          name: Ambilight
                          icon: mdi:television-ambient-light
                          template: button_action
                          tap_action:
                            haptic: medium
                            action: call-service
                            service: script.harmony_tv_command
                            service_data:
                              comando: AmbiLight
  - title: TV Settings
    path: tv_settings
    icon: mdi:television
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: true
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/tv
                  - type: custom:button-card
                    template: header_label_page
                    name: TV
                    label: Settings
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Audio Mode
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      name: Game
                      icon: mdi:speaker-multiple
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: ModeGame
                    - type: custom:button-card
                      name: Movie/TV
                      icon: mdi:speaker-multiple
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: ModeMovie/Tv
                    - type: custom:button-card
                      name: Music
                      icon: mdi:speaker-multiple
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: ModeMusic
                    - type: custom:button-card
                      name: Stereo
                      icon: mdi:speaker-multiple
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: ModeStereo
                - type: custom:button-card
                  name: Correggi Input
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      name: Fire TV
                      icon: mdi:video-input-component
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: InputVcr/Dvr
                    - type: custom:button-card
                      name: Nintendo
                      icon: mdi:video-input-component
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: InputGame
                    - type: custom:button-card
                      name: Sky + Sinto
                      icon: mdi:video-input-component
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: InputCd
                    - type: custom:button-card
                      name: DVD
                      icon: mdi:video-input-component
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: InputDvd/Bd
                    - type: custom:button-card
                      name: Timvision
                      icon: mdi:video-input-component
                      template: button_action
                      tap_action:
                        haptic: medium
                        action: call-service
                        service: script.harmony_sinto_command
                        service_data:
                          comando: InputCbl/Sat
  - title: Sonos
    path: home_sonos
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:button-card
            show_name: false
            show_state: false
            show_icon: true
            icon: mdi:home
            styles:
              card:
                - width: 70px
                - height: 100%
              icon:
                - width: 55%
                - color: orange
              img_cell:
                - width: 50px
                - height: 50px
                - border-radius: 100%
                - background: var(--primary-background-color)
            tap_action:
              action: navigate
              navigation_path: /ehcah-mobile/home
          - type: custom:button-card
            name: Home
            label: Sonos
            show_label: true
            styles:
              card:
                - padding: 4px
              name:
                - font-size: 22px
                - font-weight: bold
                - justify-self: start
              label:
                - font-size: 16px
                - font-weight: 300
                - justify-self: start
      - type: grid
        square: false
        columns: 1
        cards:
          - type: custom:button-card
            name: ''
            template: label_heading
          - type: custom:maxi-media-player
            entities:
              - media_player.living_room
              - media_player.master_bedroom
              - media_player.master_bathroom
              - media_player.sunroom
              - media_player.office
              - media_player.gym
              - media_player.garage
              - media_player.family_room
              - media_player.move
            startSection: player
            sections:
              - player
              - queue
              - media browser
              - groups
              - grouping
              - volumes
            sectionButtonIcons:
              player: mdi:home
              mediaBrowser: mdi:star-outline
              groups: mdi:speaker-multiple
              grouping: mdi:checkbox-multiple-marked-circle-outline
              volumes: mdi:volume-high
              queue: mdi:queue-first-in-last-out
            groupingTitle: ''
            groupingButtonIcons:
              predefinedGroup: mdi:account-group
              joinAll: mdi:account-multiple
              unJoinAll: mdi:account-remove
            hidePlayerControlNextTrackButton: false
            hidePlayerControlPrevTrackButton: false
            hidePlayerControlShuffleButton: false
            hidePlayerControlRepeatButton: true
            hidePlayerControlPowerButton: true
            hideBrowseMediaButton: false
            dynamicVolumeSlider: true
            dynamicVolumeSliderMax: 40
            dynamicVolumeSliderThreshold: 100
            adjustVolumeRelativeToMainPlayer: false
            mediaBrowserTitle: My favorites
            sortFavoritesByType: false
            favoritesItemsPerRow: 3
            numberOfFavoritesToShow: 15
            favoritesHideTitleForThumbnailIcons: false
            customFavoriteThumbnails:
              sizePercentage: 25
              Favourites: /local/images/sonos/favourites.png
              Classics: /local/images/sonos/classics.png
              Jason: /local/images/sonos/jason.png
              Kip Moore: /local/images/sonos/kip_moore.png
              The Killers: /local/images/sonos/the_killers.png
            topFavorites:
              - Favourites
              - Kip Moore
              - The Killers
            artworkAsBackground: true
            heightPercentage: 80
            widthPercentage: 0
            predefinedGroups:
              - name: Main Floor
                entities:
                  - player: media_player.living_room
                    volume: 5
                  - player: media_player.sunroom
                    volume: 5
                  - player: media_player.master_bedroom
                    volume: 5
                  - player: media_player.master_bathroom
                    volume: 5
              - name: Master Bedroom
                entities:
                  - player: media_player.master_bedroom
                    volume: 5
                  - player: media_player.master_bathroom
                    volume: 5
            card_mod:
              style: |
                ha-card {
                  color: white !important;
                  box-shadow: none !important;
                  artwork-background: rgba(192, 192, 192, 0.1);
                  backdrop-filter: blur(2px) !important;
                  --ha-card-background: rgba(192, 192, 192, 0.1);
                  --accent-color: orange !important;
                  --primary-color: white !important;
                  --secondary-text-color: white !important;
                  --secondary-background-color: rgba(192, 192, 192, 0.1);
                }
          - type: custom:button-card
            name: ''
            template: label_heading
  - title: Main Floor Homepage
    icon: mdi:home-floor-g
    path: main_floor_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Main Floor
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.main_floor_plugs_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'hue:plug-us' : 'hue:plug-us'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
                  - type: custom:button-card
                    entity: sensor.main_floor_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.group_main_floor_presence
                    template: header_binary_sensor
                    icon: mdi:motion-sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.main_floor_temperature
                      humidity: sensor.main_floor_humidity
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: climate.thermostat
                  template: room_climate
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/heating_cooling
                - type: custom:button-card
                  entity: sensor.main_floor_lights_on_in_total_count
                  template: room_lights
                  name: Main Floor Lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/main_floor_lights
                - type: custom:button-card
                  entity: sensor.outside_lights_on_in_total_count
                  template: room_lights
                  name: Outside Lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/outside_lights
                - type: custom:button-card
                  entity: sensor.main_floor_plugs_on_in_total_count
                  template: room_plugs
                  name: Main Floor Plugs
                  icon: hue:plug-us
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/main_floor_plugs
  - title: Main Floor Lights
    path: main_floor_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/main_floor_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Main Floor
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_main_floor_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.main_floor_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Hallway Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_hallway_area_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Kitchen Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_kitchen_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Living Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_living_room_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Main Bathroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_main_bathroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Master Bathroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bathroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Master Bedroom
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bedroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Outside Lights
    path: outside_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/main_floor_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Outside
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_outside_lights
                    template: header_off_button
                    icon: phu:bulb-group
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_outside_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Main Floor Plugs
    path: main_floor_plugs
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/main_floor_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Main Floor
                    label: Plugs
                  - type: custom:button-card
                    entity: switch.group_main_floor_plugs
                    template: header_off_button
                    icon: hue:plug-us
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Main Floor
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: switch.group_main_floor_plugs
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: plug_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Basement Homepage
    icon: mdi:home-floor-b
    path: basement_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Basement
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.basement_plugs_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'hue:plug-us' : 'hue:plug-us'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
                  - type: custom:button-card
                    entity: sensor.basement_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.group_basement_presence
                    template: header_binary_sensor
                    icon: mdi:motion-sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.basement_temperature
                      humidity: sensor.basement_humidity
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.basement_lights_on_in_total_count
                  template: room_lights
                  name: Basement Lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/basement_lights
                - type: custom:button-card
                  entity: sensor.basement_plugs_on_in_total_count
                  template: room_plugs
                  name: Basement Plugs
                  icon: hue:plug-us
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/basement_plugs
  - title: Basement Lights
    path: basement_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/basement_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Basement
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_basement_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.basement_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Electrical Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_electrical_room
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Family Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_family_room_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Gym
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_gym_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Office
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_office_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Storage Area
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_storage_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Basement Plugs
    path: basement_plugs
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/basement_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Basement
                    label: Plugs
                  - type: custom:button-card
                    entity: switch.group_electrical_room_plugs
                    template: header_off_button
                    icon: hue:plug-us
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Electrical Room
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: switch.group_electrical_room_plugs
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: plug_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
                - type: custom:button-card
                  name: Office
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: switch.group_office_plugs
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: plug_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Kitchen Homepage
    icon: mdi:fridge
    path: kitchen_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Kitchen
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.kitchen_area_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.everything_presence_lite_kitchen_occupancy
                    icon: mdi:motion-sensor
                    template: header_binary_sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_kitchen
                      humidity: sensor.humidity_kitchen
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.kitchen_area_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/kitchen_lights
                - type: custom:button-card
                  entity: media_player.living_room
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/kitchen_media
  - title: Kitchen Lights
    path: kitchen_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 0px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/kitchen_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Kitchen
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_kitchen_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.kitchen_area_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_kitchen_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Kitchen Media
    path: kitchen_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/kitchen_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Kitchen
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.living_room
                    - media_player.master_bedroom
                    - media_player.master_bathroom
                    - media_player.sunroom
                    - media_player.office
                    - media_player.gym
                    - media_player.garage
                    - media_player.family_room
                    - media_player.move
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  predefinedGroups:
                    - name: Main Floor
                      entities:
                        - player: media_player.living_room
                          volume: 5
                        - player: media_player.sunroom
                          volume: 5
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Living Room Home Page
    icon: mdi:sofa
    path: living_room_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Living Room
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.living_room_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: >-
                      binary_sensor.everything_presence_lite_living_room_occupancy
                    template: header_binary_sensor
                    icon: mdi:motion-sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_trane_thermostat
                      humidity: sensor.humidity_trane_thermostat
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: climate.thermostat
                  template: room_climate
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/heating_cooling
                - type: custom:button-card
                  entity: sensor.living_room_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/living_room_lights
                - type: custom:button-card
                  entity: media_player.living_room
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/living_room_media
  - title: Living Room Lights
    path: living_room_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/living_room_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Living Room
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_living_room_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.living_room_lights_on_in_total_count'].state) > 1
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Scene
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: scene.dallas_stars_game_on
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: scene.dallas_stars_game_on
                    - type: custom:button-card
                      entity: scene.dallas_stars_game_off
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: scene.dallas_stars_game_off
                    - type: custom:button-card
                      entity: scene.red_on
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: scene.red_on
                    - type: custom:button-card
                      entity: scene.red_off
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: scene.red_off
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_living_room_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Living Room Media
    path: living_room_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/living_room_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Living Room
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.living_room
                    - media_player.master_bedroom
                    - media_player.master_bathroom
                    - media_player.sunroom
                    - media_player.office
                    - media_player.gym
                    - media_player.garage
                    - media_player.family_room
                    - media_player.move
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  predefinedGroups:
                    - name: Main Floor
                      entities:
                        - player: media_player.living_room
                          volume: 5
                        - player: media_player.sunroom
                          volume: 5
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Master Bedroom Home Page
    icon: mdi:bed-double-outline
    path: master_bedroom_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bedroom
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.master_bedroom_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: >-
                      binary_sensor.everything_presence_lite_master_bedroom_occupancy
                    template: header_binary_sensor
                    icon: mdi:motion-sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_master_bedroom
                      humidity: sensor.humidity_master_bedroom
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.master_bedroom_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/master_bedroom_lights
                - type: custom:button-card
                  entity: media_player.master_bedroom
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/master_bedroom_media
  - title: Master Bedroom Lights
    path: master_bedroom_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/master_bedroom_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bedroom
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_master_bedroom_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.master_bedroom_lights_on_in_total_count'].state) > 1
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Scene
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: scene.dallas_stars_game_mb_on
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: sscene.dallas_stars_game_mb_on
                    - type: custom:button-card
                      entity: scene.dallas_stars_game_mb_off
                      template: scene_card
                      tap_action:
                        action: call-service
                        service: scene.turn_on
                        service_data:
                          entity_id: scene.dallas_stars_game_mb_off
                    - type: custom:button-card
                      entity: scene.sala_cinema_1
                      template: scene_card
                    - type: custom:button-card
                      entity: scene.sala_tutto
                      template: scene_card
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bedroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Master Bedroom Media
    path: master_bedroom_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/master_bedroom_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bedroom
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.master_bedroom
                    - media_player.master_bathroom
                    - media_player.living_room
                    - media_player.sunroom
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  predefinedGroups:
                    - name: Main Floor
                      entities:
                        - player: media_player.living_room
                          volume: 5
                        - player: media_player.sunroom
                          volume: 5
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                    - name: Master Bedroom
                      entities:
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Master Bathroom Home Page
    icon: mdi:bathtub-outline
    path: master_bathroom_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bathroom
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.master_bathroom_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.motion_detection_master_bathroom
                    template: header_binary_sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_master_bathroom
                      humidity: sensor.humidity_master_bathroom
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.master_bathroom_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/master_bathroom_lights
                - type: custom:button-card
                  entity: media_player.master_bathroom
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/master_bathroom_media
  - title: Master Bathroom Lights
    path: master_bathroom_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/master_bathroom_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bathroom
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_master_bathroom_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.master_bathroom_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Scene
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: scene.sala_giorno
                      template: scene_card
                    - type: custom:button-card
                      entity: scene.sala_soffusa
                      template: scene_card
                    - type: custom:button-card
                      entity: scene.sala_cinema_1
                      template: scene_card
                    - type: custom:button-card
                      entity: scene.sala_tutto
                      template: scene_card
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_master_bathroom_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Master Bathroom Media
    path: master_bathroom_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/master_bathroom_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Master Bathroom
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.master_bathroom
                    - media_player.master_bedroom
                    - media_player.living_room
                    - media_player.sunroom
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  predefinedGroups:
                    - name: Main Floor
                      entities:
                        - player: media_player.living_room
                          volume: 5
                        - player: media_player.sunroom
                          volume: 5
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                    - name: Master Bedroom
                      entities:
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Office Homepage
    icon: mdi:desk
    path: office_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Office
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.office_plugs_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'hue:plug-us' : 'hue:plug-us'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
                  - type: custom:button-card
                    entity: sensor.office_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.everything_presence_lite_office_occupancy
                    template: header_binary_sensor
                    icon: mdi:motion-sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_office
                      humidity: sensor.humidity_office
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.office_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/office_lights
                - type: custom:button-card
                  entity: sensor.office_plugs_on_in_total_count
                  template: room_plugs
                  icon: hue:plug-us
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/office_plugs
                - type: custom:button-card
                  entity: media_player.office
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/office_media
  - title: Office Lights
    path: office_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/office_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Office
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_office_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.office_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Scene
                  template: label_heading
                - type: grid
                  square: false
                  columns: 2
                  cards:
                    - type: custom:button-card
                      entity: scene.office_working
                      template: scene_card
                    - type: custom:button-card
                      entity: scene.office_video_call
                      template: scene_card
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_office_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Office Plugs
    path: office_plugs
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/office_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Office
                    label: Plugs
                  - type: custom:button-card
                    entity: switch.group_office_plugs
                    template: header_off_button
                    icon: hue:plug-us
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Office
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: switch.group_office_plugs
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: plug_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Office Media
    path: office_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/office_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Office
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.office
                    - media_player.living_room
                    - media_player.sunroom
                    - media_player.master_bedroom
                    - media_player.master_bathroom
                    - media_player.garage
                    - media_player.family_room
                    - media_player.gym
                    - media_player.move
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  predefinedGroups:
                    - name: Basement
                      entities:
                        - player: media_player.office
                          volume: 5
                        - player: media_player.family_room
                          volume: 5
                        - player: mediay_player.gym
                          volume: 5
                    - name: Main Floor
                      entities:
                        - player: media_player.living_room
                          volume: 5
                        - player: media_player.sunroom
                          volume: 5
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                    - name: Master Bedroom
                      entities:
                        - player: media_player.master_bedroom
                          volume: 5
                        - player: media_player.master_bathroom
                          volume: 5
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Gym Homepage
    icon: mdi:dumbbell
    path: gym_homepage
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Gym
                    label: Homepage
                  - type: custom:button-card
                    entity: sensor.gym_lights_on_in_total_count
                    template: header_off_button
                    icon: |
                      [[[ 
                        return entity.state > 1 ? 'phu:bulb-group' : 'phu:bulbs-sultan'; 
                      ]]]
                    show_name: false
                    show_state: false
                    show_icon: true
                    styles:
                      grid:
                        - position: relative
                      icon:
                        - width: 55%
                        - color: var(--disabled-text-color)
                    state:
                      - value: 0
                        operator: '>'
                        styles:
                          icon:
                            - color: orange
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.everything_presence_lite_gym_occupancy
                    icon: mdi:motion-sensor
                    template: header_binary_sensor
                  - type: custom:button-card
                    template: header_sensor_temp_hum
                    variables:
                      temperature: sensor.temperature_gym
                      humidity: sensor.humidity_gym
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: sensor.gym_lights_on_in_total_count
                  template: room_lights
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/gym_lights
                - type: custom:button-card
                  entity: media_player.gym
                  icon: phu:sonos
                  template: room_media
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/gym_media
  - title: Gym Lights
    path: gym_lights
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/gym_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Gym
                    label: Lights
                  - type: custom:button-card
                    entity: light.group_gym_lights
                    template: header_off_button
                    icon: |
                      [[[ 
                        return parseFloat(states['sensor.gym_lights_on_in_total_count'].state) > 1 
                          ? 'phu:bulb-group' 
                          : 'phu:bulbs-sultan'; 
                      ]]]
          - type: custom:button-card
            template: row_space
            variables:
              height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: Lights
                  template: label_heading
                - type: custom:auto-entities
                  filter:
                    include:
                      - group: light.group_gym_lights
                        options:
                          type: custom:button-card
                          entity_id: this.entity_id
                          template: light_card
                  card:
                    type: grid
                    columns: 2
                    square: false
                  card_param: cards
                  sort:
                    method: name
                    ignore_case: true
  - title: Gym Media
    path: gym_media
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/gym_homepage
                  - type: custom:button-card
                    template: header_label_page
                    name: Gym
                    label: Media
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: ''
                  template: label_heading
                - type: custom:maxi-media-player
                  entities:
                    - media_player.gym
                  startSection: player
                  sections:
                    - player
                    - queue
                    - media browser
                    - groups
                    - grouping
                    - volumes
                  sectionButtonIcons:
                    player: mdi:home
                    mediaBrowser: mdi:star-outline
                    groups: mdi:speaker-multiple
                    grouping: mdi:checkbox-multiple-marked-circle-outline
                    volumes: mdi:volume-high
                    queue: mdi:queue-first-in-last-out
                  hidePlayerControlNextTrackButton: false
                  hidePlayerControlPrevTrackButton: false
                  hidePlayerControlShuffleButton: false
                  hidePlayerControlRepeatButton: true
                  hidePlayerControlPowerButton: true
                  hideBrowseMediaButton: false
                  dynamicVolumeSlider: true
                  dynamicVolumeSliderMax: 40
                  dynamicVolumeSliderThreshold: 100
                  adjustVolumeRelativeToMainPlayer: false
                  mediaBrowserTitle: My favorites
                  sortFavoritesByType: false
                  favoritesItemsPerRow: 3
                  numberOfFavoritesToShow: 15
                  favoritesHideTitleForThumbnailIcons: false
                  customFavoriteThumbnails:
                    sizePercentage: 25
                    Favourites: /local/images/sonos/favourites.png
                    Classics: /local/images/sonos/classics.png
                    Jason: /local/images/sonos/jason.png
                    Kip Moore: /local/images/sonos/kip_moore.png
                    The Killers: /local/images/sonos/the_killers.png
                  topFavorites:
                    - Favourites
                    - Kip Moore
                    - The Killers
                  artworkAsBackground: true
                  heightPercentage: 80
                  widthPercentage: 0
                  card_mod:
                    style: |
                      ha-card {
                        color: white !important;
                        box-shadow: none !important;
                        artwork-background: rgba(192, 192, 192, 0.1);
                        backdrop-filter: blur(2px) !important;
                        --ha-card-background: rgba(192, 192, 192, 0.1);
                        --accent-color: orange !important;
                        --primary-color: white !important;
                        --secondary-text-color: white !important;
                        --secondary-background-color: rgba(192, 192, 192, 0.1);
                      }
                - type: custom:button-card
                  name: ''
                  template: label_heading
  - title: Network
    path: status_network
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: Status
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: binary_sensor.udm_pro_max_current_state
                  template: alert_card
                  name: Internet
                  icon: mdi:web
                  label: |
                    [[[
                      return states['sensor.speedtest_download'].state + " Mbps | " + states['sensor.speedtest_upload'].state + " Mbps";
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/network_internet
                - type: custom:button-card
                  entity: binary_sensor.udm_pro_max_current_state
                  template: alert_card
                  name: UDM Pro Max
                  icon: phu:ubiquiti-udm-pro
                  label: |
                    [[[
                      return states['sensor.ehcah_udm_pro_max_sfp_1_rx'].state + " Mbps | " + states['sensor.ehcah_udm_pro_max_sfp_1_rx'].state + " Mbps";
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/network_udmpm
                - type: custom:button-card
                  entity: binary_sensor.udm_pro_max_current_state
                  template: alert_card
                  name: Switches
                  icon: phu:ubiquiti-logo
                  label: |
                    [[[
                      return states['sensor.usw_pro_24_poe_sfp_1_rx'].state + " Mbps | " + states['sensor.usw_pro_24_poe_sfp_1_tx'].state + " Mbps";
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/network_switches
                - type: custom:button-card
                  entity: binary_sensor.udm_pro_max_current_state
                  template: alert_card
                  name: Access Points
                  icon: phu:ubiquiti-ap
                  label: |
                    [[[
                      return states['sensor.unifi_ap_livingroom_main_rx'].state + " Mbps | " + states['sensor.unifi_ap_livingroom_main_tx'].state + " Mbps";
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/network_access_points
                - type: custom:button-card
                  entity: binary_sensor.udm_pro_max_current_state
                  template: alert_card
                  name: Devices
                  icon: phu:ubiquiti
                  label: |
                    [[[
                      return states['sensor.unifi_talk_phone_touch_rx'].state + " Mbps | " + states['sensor.unifi_talk_phone_touch_tx'].state + " Mbps";
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/network_devices
  - title: Systems
    path: status_systems
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Systems
                    label: Status
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: binary_sensor.glances_running
                  template: alert_card
                  name: Home Assistant
                  icon: mdi:home-assistant
                  label: |
                    [[[
                      return `<ha-icon
                                icon="mdi:cpu-64-bit"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${states['sensor.system_monitor_processor_use'].state} <span style="font-size: 90%">%</span>
                              </span> | 
                              <ha-icon
                                icon="mdi:memory"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${states['sensor.system_monitor_memory_usage'].state} <span style="font-size: 90%">%</span>
                              </span>`
                    ]]] 
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/systems_home_assistant
                - type: custom:button-card
                  entity: binary_sensor.proxmox_server_status
                  template: alert_card
                  name: Proxmox
                  icon: phu:proxmox
                  label: |
                    [[[
                      return `<ha-icon
                                icon="mdi:cpu-64-bit"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${states['sensor.glances_proxmox_server_cpu_usage'].state} <span style="font-size: 90%">%</span>
                              </span> | 
                              <ha-icon
                                icon="mdi:memory"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${states['sensor.glances_proxmox_server_memory_usage'].state} <span style="font-size: 90%">%</span>
                              </span>`
                    ]]]                
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/systems_proxmox
  - title: Home
    path: status_home
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: Home
                    label: Status
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  entity: binary_sensor.home_alert_furnace
                  template: alert_card
                  name: Furnace
                  icon: mdi:heat-pump
                  label: |
                    [[[
                      return `<ha-icon
                                icon="mdi:thermometer"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>                             
                                ${states['sensor.temperature_trane_thermostat'].state} <span style="font-size: 90%">°C</span>
                              </span> | 
                              <ha-icon
                                icon="mdi:water-percent"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${states['sensor.humidity_trane_thermostat'].state} <span style="font-size: 90%">%</span>
                              </span>`
                    ]]]                  
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/heating_cooling
                - type: custom:button-card
                  entity: binary_sensor.home_alert_hot_tub
                  template: alert_card
                  name: Hot Tub
                  icon: mdi:hot-tub
                  label: |
                    [[[
                      const currentTempC = states['climate.spa_heater'].attributes.current_temperature;
                      const currentTempF = (currentTempC * 9/5 + 32).toFixed(1);  // Convert to Fahrenheit
                      const lightState = states['light.spa_lights'].state;

                      return `<ha-icon
                                icon="mdi:thermometer"
                                style="width: 18px; height: 18px;">
                              </ha-icon>
                              <span>
                                ${currentTempF} °F <span style="font-size: 90%"></span>
                              </span> &nbsp;|&nbsp; 
                              <ha-icon
                                icon="${lightState === 'on' ? 'mdi:lightbulb-on' : 'mdi:lightbulb-on-outline'}"
                                style="width: 18px; height: 18px; color: ${lightState === 'on' ? 'yellow' : 'inherit'};">
                              </ha-icon>
                              <span>
                                ${lightState === 'on' ? '' : ''} <span style="font-size: 90%"></span>
                              </span>`
                    ]]]
                  tap_action:
                    action: navigate
                    navigation_path: /ehcah-mobile/home_spa
  - title: Internet
    path: network_internet
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_network
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: Internet
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                square: false
                columns: 3
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 4
                cards:
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-udm-pro
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_udmpm
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-logo
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_switches
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-ap
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_access_points
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_devices
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: Internet Connection
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">WAN</div>                  
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: entities
                      entities:
                        - entity: sensor.internet_service_provider
                          name: ISP
                          icon: mdi:web
                          color: red
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: red;
                                color: red;
                        - entity: sensor.myip
                          name: External IP
                          icon: mdi:ip-network
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: white;
                              }
                        - entity: sensor.network_gateway_ip_address
                          name: Gateway
                          icon: mdi:ethernet
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:white; 
                              }                    
                        - entity: sensor.network_dns_ip_address
                          name: DNS Servers
                          icon: mdi:shield-check
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: white;
                              }
                        - type: custom:template-entity-row
                          entity: sensor.unifi_isp_metrics
                          name: Latency Average
                          icon: mdi:pulse
                          state: >
                            {{ state_attr('sensor.unifi_isp_metrics',
                            'data')[0]['periods'][0]['data']['wan']['avgLatency']
                            }} ms
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: white;
                              }
                        - type: custom:template-entity-row
                          entity: sensor.unifi_isp_metrics
                          name: Availability
                          icon: mdi:web
                          state: >
                            {{ state_attr('sensor.unifi_isp_metrics',
                            'data')[0]['periods'][0]['data']['wan']['uptime'] }}
                            %
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: white;
                              }
                        - entity: sensor.ehcah_udm_pro_max_uptime
                          name: Uptime
                          icon: mdi:timelapse
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: white; 
                              }     
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Sppedtest</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: sensor.speedtest_last_run
                              name: Last Run
                              icon: mdi:calendar
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: #931;
                                  }                    
                            - entity: sensor.speedtest_ping
                              name: Server
                              type: attribute
                              attribute: server_name
                              icon: mdi:server-network
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: #931;
                                  }
                            - entity: sensor.speedtest_ping
                              name: Location
                              type: attribute
                              attribute: server_location
                              icon: mdi:city
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: #931;
                                  }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:speedometer
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.speedtest_download
                              name: Download
                              show_state: true
                              unit: Mbps
                              color: '#931'
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: #931;
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:speedometer
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.speedtest_upload
                              name: Upload
                              show_state: true
                              unit: Mbps
                              color: '#931'
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: #931;
                              }
                    - type: custom:mini-graph-card
                      icon: mdi:pulse
                      height: 50
                      line_width: 3
                      hour24: true
                      group: false
                      points_per_hour: 5
                      hours_to_show: 24
                      show:
                        fill: fade
                        extrema: false
                        name: true
                        icon: true
                        points: false
                      entities:
                        - entity: sensor.speedtest_ping
                          name: Ping
                          show_state: true
                          unit: ms
                          color: '#931'
                      card_mod:
                        style: |
                          :host {
                            --card-mod-icon-color: #931;
                          }
                  state_color: true
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 5
  - title: UDM Pro Max
    path: network_udmpm
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_network
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: UDM Pro max
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                square: false
                columns: 3
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 4
                cards:
                  - type: custom:button-card
                    template: header_base_icon
                    icon: mdi:web
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_internet
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-logo
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_switches
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-ap
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_access_points
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_devices
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: Unifi Dream Machine Pro Max
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">System
                    Info</div>                  
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: entities
                      entities:
                        - entity: update.ehcah_udm_pro_max
                          name: UniFi OS version
                          type: attribute
                          attribute: installed_version
                          icon: phu:ubiquiti
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                        - entity: sensor.ehcah_udm_pro_max_uptime
                          name: Uptime
                          icon: mdi:timelapse
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                        - entity: update.ehcah_udm_pro_max
                          name: Firmware Update
                          icon: mdi:reload
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Wired Network</div>
                      template: label_heading
                    - type: custom:stack-in-card
                      card_mod:
                        style: |
                          ha-card {
                            border-radius: 15px;
                          } 
                      cards:
                        - type: entities
                          entities:
                            - type: custom:template-entity-row
                              entity: sensor.unifi_clients_and_devices
                              name: Gateway
                              icon: phu:ubiquiti-udm-pro
                              state: >
                                {{
                                state_attr('sensor.unifi_clients_and_devices',
                                'counts')['gatewayDevice'] }}
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - type: custom:template-entity-row
                              entity: sensor.unifi_clients_and_devices
                              name: Swtiches
                              icon: phu:ubiquiti-logo
                              state: >
                                {{
                                state_attr('sensor.unifi_clients_and_devices',
                                'counts')['wiredDevice'] }}
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - type: custom:template-entity-row
                              entity: sensor.unifi_clients_and_devices
                              name: LAN Users
                              icon: mdi:ip-network-outline
                              state: >
                                {{
                                state_attr('sensor.unifi_clients_and_devices',
                                'counts')['wiredClient'] }}
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Wireless Network</div>
                      template: label_heading
                    - type: custom:stack-in-card
                      card_mod:
                        style: |
                          ha-card {
                            border-radius: 15px;
                          } 
                      cards:
                        - type: entities
                          entities:
                            - type: custom:template-entity-row
                              entity: sensor.unifi_clients_and_devices
                              name: Access Points
                              icon: phu:ubiquiti-ap
                              state: >
                                {{
                                state_attr('sensor.unifi_clients_and_devices',
                                'counts')['wifiDevice'] }}
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }                    
                            - type: custom:template-entity-row
                              entity: sensor.unifi_clients_and_devices
                              name: WLAN Users
                              icon: mdi:access-point-network
                              state: >
                                {{
                                state_attr('sensor.unifi_clients_and_devices',
                                'counts')['wifiClient'] }}
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - entity: sensor.e
                              icon: mdi:wifi-arrow-right
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - entity: sensor.ehcah
                              icon: mdi:wifi-arrow-right
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - entity: sensor.ehcah_iot
                              icon: mdi:wifi-arrow-right
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                            - entity: sensor.ehcah_guest
                              icon: mdi:wifi-arrow-right
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: white;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_sfp_1_rx
                              name: WAN Rx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_sfp_1_tx
                              name: WAN Tx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_sfp_2_rx
                              name: LAN Rx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_sfp_2_tx
                              name: LAN Tx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                   
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.ehcah_udm_pro_max_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }                    
                    - type: custom:mini-graph-card
                      height: 50
                      line_width: 3
                      hour24: true
                      group: false
                      points_per_hour: 5
                      hours_to_show: 24
                      show:
                        fill: fade
                        extrema: false
                        name: true
                        icon: true
                        points: false
                      entities:
                        - entity: >-
                            sensor.ehcah_udm_pro_max_ehcah_udm_pro_max_cpu_temperature
                          name: Temperature
                          show_state: true
                          color: crimson
                      card_mod:
                        style: |
                          :host {
                            --card-mod-icon-color:crimson; 
                          }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 10
  - title: Switches
    path: network_switches
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_network
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: Switches
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                square: false
                columns: 3
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 4
                cards:
                  - type: custom:button-card
                    template: header_base_icon
                    icon: mdi:web
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_internet
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-udm-pro
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_udmpm
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-ap
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_access_points
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_devices
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: USW Pro 24 POE
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">System
                    Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.usw_pro_24_poe
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.usw_pro_24_poe_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.usw_pro_24_poe
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                          state_color: true
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_sfp_1_rx
                              name: SFP1 Rx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_sfp_1_tx
                              name: SFP1 Tx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_sfp_2_rx
                              name: SFP2 Rx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_sfp_2_tx
                              name: SFP2 Tx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_pro_24_poe_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }
                    - type: custom:mini-graph-card
                      height: 50
                      line_width: 3
                      hour24: true
                      group: false
                      points_per_hour: 5
                      hours_to_show: 24
                      show:
                        fill: fade
                        extrema: false
                        name: true
                        icon: true
                        points: false
                      entities:
                        - entity: sensor.usw_pro_24_poe_temperature
                          name: Temperature
                          show_state: true
                          color: crimson
                      card_mod:
                        style: |
                          :host {
                            --card-mod-icon-color:crimson; 
                          }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 20
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: USW Pro 48
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">System
                    Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.usw_48
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.usw_48_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.usw_48
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                          state_color: true
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_48_sfp_1_rx
                              name: SFP1 Rx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_48_sfp_1_tx
                              name: SFP1 Tx
                              show_state: true
                              unit: Mbps
                              color: lightgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_48_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_48_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 20
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: USW Flex Mini - Office
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">System
                    Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.usw_flex_mini_office
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.usw_flex_mini_office_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.usw_flex_mini_office
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                          state_color: true
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.usw_flex_mini_office_port_1_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.usw_flex_mini_office_port_1_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                - type: horizontal-stack
                  cards:
                    - type: custom:mini-graph-card
                      icon: mdi:memory
                      height: 50
                      line_width: 3
                      hour24: true
                      group: false
                      points_per_hour: 5
                      hours_to_show: 24
                      show:
                        fill: fade
                        extrema: false
                        name: true
                        icon: true
                        points: false
                      entities:
                        - entity: sensor.usw_flex_mini_office_cpu_utilization
                          name: CPU
                          show_state: true
                          unit: '%'
                          color: darkorange
                      card_mod:
                        style: |
                          :host {
                            --card-mod-icon-color:darkorange; 
                          }
                    - type: custom:mini-graph-card
                      icon: mdi:memory
                      height: 50
                      line_width: 3
                      hour24: true
                      group: false
                      points_per_hour: 5
                      hours_to_show: 24
                      show:
                        fill: fade
                        extrema: false
                        name: true
                        icon: true
                        points: false
                      entities:
                        - entity: sensor.usw_flex_mini_office_memory_utilization
                          name: Memory
                          show_state: true
                          unit: '%'
                          color: skyblue
                      card_mod:
                        style: |
                          :host {
                            --card-mod-icon-color:skyblue; 
                          }
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: USW Flex Mini - Rack Workspace
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.usw_flex_mini_rack_workspace
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.usw_flex_mini_rack_workspace_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.usw_flex_mini_rack_workspace
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                          state_color: true
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.usw_flex_mini_rack_workspace_port_1_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.usw_flex_mini_rack_workspace_port_1_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_flex_mini_office_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.usw_flex_mini_office_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 10
  - title: Access Points
    path: network_access_points
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_network
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: Access Points
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                square: false
                columns: 3
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 4
                cards:
                  - type: custom:button-card
                    template: header_base_icon
                    icon: mdi:web
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_internet
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-udm-pro
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_udmpm
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-logo
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_switches
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_devices
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: UniFi Living Room AP
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.unifi_ap_livingroom
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.unifi_ap_livingroom_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.unifi_ap_livingroom
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - type: section
                              label: Active
                            - entity: sensor.unifi_ap_livingroom_clients
                              name: Clients
                              icon: mdi:devices
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: lightgreen;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.unifi_ap_livingroom_main_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_ap_livingroom_main_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_livingroom_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_livingroom_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }                
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: UniFi Pantry AP
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.unifi_ap_pantry
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.unifi_ap_pantry_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.unifi_ap_pantry
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - type: section
                              label: Active
                            - entity: sensor.unifi_ap_pantry_clients
                              name: Clients
                              icon: mdi:devices
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: lightgreen;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.unifi_ap_pantry_main_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_ap_pantry_main_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_pantry_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_pantry_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }           
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: UniFi Hallway AP
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.unifi_ap_hallway
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.unifi_ap_hallway_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.unifi_ap_hallway
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - type: section
                              label: Active
                            - entity: sensor.unifi_ap_hallway_clients
                              name: Clients
                              icon: mdi:devices
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: lightgreen;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.unifi_ap_hallway_main_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_ap_hallway_main_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_hallway_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_hallway_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }           
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: UniFi Family Room AP
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.unifi_ap_family_room
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.unifi_ap_family_room_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.unifi_ap_family_room
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - type: section
                              label: Active
                            - entity: sensor.unifi_ap_family_room_clients
                              name: Clients
                              icon: mdi:devices
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: lightgreen;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.unifi_ap_family_room_main_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_ap_family_room_main_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_family_room_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_family_room_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }  
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: UniFi Rack Area AP
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: vertical-stack
                      cards:
                        - type: entities
                          entities:
                            - entity: update.unifi_ap_rack_area
                              name: UniFi OS version
                              type: attribute
                              attribute: installed_version
                              icon: phu:ubiquiti
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: sensor.unifi_ap_rack_area_uptime
                              name: Uptime
                              icon: mdi:timelapse
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - entity: update.unifi_ap_rack_area
                              name: Firmware Update
                              icon: mdi:reload
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color:yellow; 
                                  }
                            - type: section
                              label: Active
                            - entity: sensor.unifi_ap_rack_area_clients
                              name: Clients
                              icon: mdi:devices
                              card_mod:
                                style: |
                                  :host {
                                    --card-mod-icon-color: lightgreen;
                                  }
                - type: vertical-stack
                  cards:
                    - type: custom:button-card
                      name: >-
                        <div style="margin:5px 0px 0px
                        10px;text-align:left;">Resources</div>
                      template: label_heading
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          entities:
                            - entity: sensor.unifi_ap_rack_area_main_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_ap_rack_area_main_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_rack_area_cpu_utilization
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:darkorange; 
                              }                    
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 5
                          hours_to_show: 24
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.unifi_ap_rack_area_memory_utilization
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:skyblue; 
                              }           
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 10
  - title: Devices
    path: network_devices
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_network
                  - type: custom:button-card
                    template: header_label_page
                    name: Network
                    label: Devices
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                square: false
                columns: 3
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
              - type: grid
                square: false
                columns: 4
                cards:
                  - type: custom:button-card
                    template: header_base_icon
                    icon: mdi:web
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_internet
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-udm-pro
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_udmpm
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-logo
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_switches
                  - type: custom:button-card
                    template: header_base_icon
                    icon: phu:ubiquiti-ap
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/network_access_points
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:button-card
            template: row_space
            variables:
              height: 10
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              title: Unifi Touch 6757
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: entities
                      entities:
                        - entity: sensor.unifi_touch_6757
                          name: UniFi OS version
                          type: attribute
                          attribute: version
                          icon: phu:ubiquiti
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                        - entity: sensor.unifi_talk_phone_touch_uptime
                          name: Uptime
                          icon: mdi:timelapse
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                        - entity: update.unifi_ap_livingroom
                          name: Firmware Update
                          icon: mdi:reload
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:yellow; 
                              }
                        - type: custom:button-card
                          name: >-
                            <div style="margin:5px 0px 0px
                            10px;text-align:left;">Device Info</div>
                          template: label_heading
                        - entity: sensor.unifi_touch_6757
                          name: IP
                          type: attribute
                          attribute: ip
                          icon: mdi:ip
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: lightgreen;
                              }
                        - entity: sensor.unifi_touch_6757
                          name: Model
                          type: attribute
                          attribute: model
                          icon: phu:ubiquiti-logo
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: lightgreen;
                              }
                        - entity: sensor.unifi_touch_6757
                          name: Friendly Name
                          type: attribute
                          attribute: friendly_name
                          icon: mdi:devices
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color: lightgreen;
                - type: vertical-stack
                  cards:
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          entities:
                            - entity: sensor.unifi_talk_phone_touch_rx
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: sensor.unifi_talk_phone_touch_tx
                              name: TX
                              show_state: true
                              color: darkgreen
                          name: Activity
                          height: 50
                          line_width: 3
                          hours_to_show: 1
                          points_per_hour: 60
                          show:
                            name: true
                            state: true
                            legend: true
                            icon: true
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:lightgreen; 
                              }
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
  - title: HA
    path: systems_home_assistant
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_systems
                  - type: custom:button-card
                    template: header_label_page
                    name: Systems
                    label: Home Assistant
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
              - type: grid
                square: false
                columns: 1
                cards:
                  - type: custom:button-card
                    entity: update.home_assistant_operating_system_update
                    name: >
                      [[[ return entity.state !== 'off' ? 'Update Available' :
                      ''; ]]]
                    icon: mdi:home-assistant
                    styles:
                      icon:
                        - width: 125px
                        - height: 125px
                    state:
                      - value: 'off'
                        color: '#18bcf2'
                      - operator: default
                        color: red
                        name: >-
                          <div style="font-size:18px;font-weight:bold;margin:5px
                          0px;">Updates Available</div>
                    tap_action:
                      action: call-service
                      service: update.install
                      data:
                        entity_id: update.home_assistant_operating_system_update
              - type: grid
                square: false
                columns: 3
                cards:
                  - type: custom:button-card
                    template: header_base
                    icon: mdi:home-assistant
                    styles:
                      icon:
                        - color: orange
                    state: null
                    confirmation:
                      text: Restart Home Assistant?
                    tap_action:
                      action: call-service
                      service: homeassistant.restart
                  - type: custom:button-card
                    template: header_base
                    icon: mdi:server
                    styles:
                      icon:
                        - color: orange
                    state: null
                    confirmation:
                      text: Restart Home Assistant VM?
                    tap_action:
                      action: call-service
                      service: hassio.host_reboot
                  - type: custom:button-card
                    entity: binary_sensor.remote_ui
                    template: header_binary_sensor
                    icon: mdi:remote-desktop
                    confirmation:
                      text: |
                        [[[ 
                          if (entity.state === 'on')
                          {
                            return "Deactivate Remote Control?"
                          } else {
                            return "Activate Remote Control?"
                          }
                        ]]]
                    tap_action:
                      action: call-service
                      service: |
                        [[[
                          if (entity.state === 'on')
                          {
                            return "cloud.remote_disconnect"
                          } else {
                            return "cloud.remote_connect"
                          }                                      
                        ]]]                  
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Systems Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: custom:button-card
                      template:
                        - entity_card
                        - time_since_state
                      entity: sensor.system_monitor_last_boot
                      name: HAs Uptime
                      icon: mdi:clock
                      styles:
                        state:
                          - font-weight: normal
                    - type: custom:button-card
                      entity: update.home_assistant_core_update
                      name: HAs Core
                      icon: mdi:home-assistant
                      state_display: |
                        [[[ 
                          return entity.state !== 'off' 
                            ? entity.attributes.latest_version 
                            : entity.attributes.installed_version;
                        ]]]
                      show_name: true
                      show_icon: true
                      show_state: true
                      show_label: false
                      styles:
                        grid:
                          - grid-template-areas: '"i n s"'
                          - grid-template-columns: 50px min-content auto
                          - grid-template-rows: min-content
                        card:
                          - padding-top: 0px
                          - padding-bottom: 0px
                          - background-color: rgba(0, 0, 0, 0.0)
                          - box-shadow: none
                          - border-radius: 0px
                        icon:
                          - width: 24px
                          - height: 24px
                          - color: var(--disabled-text-color)
                        img_cell:
                          - width: 45px
                          - height: 45px
                        name:
                          - color: var(--primary-text-color)
                          - justify-self: start
                          - font-size: 14px
                          - align-self: center
                        state:
                          - justify-self: end
                          - font-size: 14px
                          - font-weight: normal
                          - text-align: right
                          - margin-right: 20px
                    - type: custom:button-card
                      entity: update.home_assistant_supervisor_update
                      name: HAs Supervisor
                      icon: mdi:home-assistant
                      state_display: |
                        [[[ 
                          return entity.state !== 'off' 
                            ? entity.attributes.latest_version 
                            : entity.attributes.installed_version;
                        ]]]
                      show_name: true
                      show_icon: true
                      show_state: true
                      show_label: false
                      styles:
                        grid:
                          - grid-template-areas: '"i n s"'
                          - grid-template-columns: 50px min-content auto
                          - grid-template-rows: min-content
                        card:
                          - padding-top: 0px
                          - padding-bottom: 0px
                          - background-color: rgba(0, 0, 0, 0.0)
                          - box-shadow: none
                          - border-radius: 0px
                        icon:
                          - width: 24px
                          - height: 24px
                          - color: var(--disabled-text-color)
                        img_cell:
                          - width: 45px
                          - height: 45px
                        name:
                          - color: var(--primary-text-color)
                          - justify-self: start
                          - font-size: 14px
                          - align-self: center
                        state:
                          - justify-self: end
                          - font-size: 14px
                          - font-weight: normal
                          - text-align: right
                          - margin-right: 20px
                    - type: custom:button-card
                      entity: update.home_assistant_operating_system_update
                      name: HAs Operating System
                      icon: mdi:home-assistant
                      state_display: |
                        [[[ 
                          return entity.state !== 'off' 
                            ? entity.attributes.latest_version 
                            : entity.attributes.installed_version;
                        ]]]
                      show_name: true
                      show_icon: true
                      show_state: true
                      show_label: false
                      styles:
                        grid:
                          - grid-template-areas: '"i n s"'
                          - grid-template-columns: 50px min-content auto
                          - grid-template-rows: min-content
                        card:
                          - padding-top: 0px
                          - padding-bottom: 0px
                          - background-color: rgba(0, 0, 0, 0.0)
                          - box-shadow: none
                          - border-radius: 0px
                        icon:
                          - width: 24px
                          - height: 24px
                          - color: var(--disabled-text-color)
                        img_cell:
                          - width: 45px
                          - height: 45px
                        name:
                          - color: var(--primary-text-color)
                          - justify-self: start
                          - font-size: 14px
                          - align-self: center
                        state:
                          - justify-self: end
                          - font-size: 14px
                          - font-weight: normal
                          - text-align: right
                          - margin-right: 20px
                    - type: custom:button-card
                      template: entity_card
                      icon: mdi:file-document-multiple
                      entity: sensor.home_assistant_log_size
                      name: HAs Log Size
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">MB</span>
                    - type: custom:button-card
                      template: entity_card
                      icon: mdi:database
                      entity: sensor.home_assistant_db_size
                      name: HAs DB Size
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">MB</span>
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">Backup
                    Status</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: custom:button-card
                      template: entity_card
                      entity: binary_sensor.backups_stale
                      name: Backup Status
                      icon: mdi:cloud-upload
                      state:
                        - value: 'off'
                          styles:
                            state:
                              - color: var(--label-badge-green)
                            icon:
                              - color: var(--label-badge-green)
                        - value: 'on'
                          styles:
                            state:
                              - color: var(--label-badge-red)
                            icon:
                              - color: var(--label-badge-red)
                    - type: custom:button-card
                      template:
                        - entity_card
                        - time_since_state
                      entity: sensor.last_backup_google_drive
                      icon: mdi:clock
                      name: Last Backup
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.backup_state
                      name: Backup Size
                      icon: mdi:file-cloud
                      state_display: '[[[ return entity.attributes.size_in_google_drive ]]]'
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px 10px;text-align:left;">System
                    Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 15px;
                      } 
                  cards:
                    - type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          template: entity_card
                          entity: sensor.system_monitor_ipv4_address_enp1s0
                          name: IP Address
                          icon: mdi:ip-network
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 5
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 60
                          seconds_to_show: 30
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.system_monitor_processor_use
                              name: CPU
                              show_state: true
                              unit: '%'
                              color: darkorange
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:orange; 
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:thermometer
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 60
                          minutes_to_show: 60
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.system_monitor_processor_temperature
                              name: Temperature
                              show_state: true
                              color: crimson
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:orange; 
                              }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 5
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:memory
                          height: 50
                          line_width: 3
                          hour24: true
                          group: false
                          points_per_hour: 60
                          days_to_show: 1
                          show:
                            fill: fade
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.system_monitor_memory_usage
                              name: Memory
                              show_state: true
                              unit: '%'
                              color: skyblue
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:orange; 
                              }
                        - type: custom:mini-graph-card
                          icon: mdi:harddisk
                          height: 50
                          line_width: 10
                          points_per_hour: 1
                          days_to_show: 90
                          show:
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: sensor.system_monitor_disk_usage
                              name: Storage
                              show_state: true
                              unit: '%'
                              color: dimgrey
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:orange; 
                              }
                    - type: custom:button-card
                      template: row_space
                      variables:
                        height: 5
                    - type: horizontal-stack
                      cards:
                        - type: custom:mini-graph-card
                          icon: mdi:ethernet
                          name: Activity
                          height: 50
                          line_width: 3
                          points_per_hour: 60
                          hours_to_show: 4
                          group: false
                          show:
                            extrema: false
                            name: true
                            icon: true
                            points: false
                          entities:
                            - entity: >-
                                sensor.system_monitor_network_throughput_in_enp1s0
                              name: RX
                              show_state: true
                              color: lightgreen
                            - entity: >-
                                sensor.system_monitor_network_throughput_out_enp1s0
                              name: TX
                              show_state: true
                              color: darkgreen
                          card_mod:
                            style: |
                              :host {
                                --card-mod-icon-color:orange; 
                              }
                - type: custom:button-card
                  template: row_space
                  variables:
                    height: 10
  - title: Proxmox
    path: systems_proxmox
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_button
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/status_systems
                  - type: custom:button-card
                    template: header_label_page
                    name: Systems
                    label: Proxmox
                  - type: custom:button-card
                    template: header_home_button_right
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
              - type: grid
                square: false
                columns: 1
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.proxmox_server_status
                    name: >
                      [[[ return entity.state !== 'on' ? 'Update Available' :
                      ''; ]]]
                    icon: phu:proxmox
                    styles:
                      icon:
                        - width: 125px
                        - height: 125px
                    state:
                      - value: 'on'
                        color: darkorange
                      - operator: default
                        color: red
                        name: >-
                          <div style="font-size:18px;font-weight:bold;margin:5px
                          0px;">Updates Available</div>
                    tap_action:
                      action: call-service
                      service: update.install
                      data:
                        entity_id: update.home_assistant_operating_system_update
              - type: grid
                square: false
                columns: 3
                cards:
                  - type: custom:button-card
                    template: header_base_with_state
                    entity: sensor.glances_proxmox_server_amd_temperature
                    units: >-
                      <span style="font-size: 13px; font-weight: 200; color:
                      var(--secondary-text-color)">°C</span>
                    state:
                      - value: 75
                        operator: '>'
                        styles:
                          icon:
                            - color: var(--label-badge-red)
                  - type: custom:button-card
                    template:
                      - header_base_with_state
                      - time_since_state
                    icon: mdi:clock
                    color: orange
                    entity: sensor.glances_proxmox_server_uptime
                  - type: custom:button-card
                    template: header_base_with_state
                    entity: sensor.glances_proxmox_server_cpu_load
                    color: orange
                    show_units: false
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 10px!important;
                  margin-left: 10px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Resources Used</div>
                  template: label_heading
                - type: custom:bar-card
                  width: 70%
                  positions:
                    icon: 'off'
                    indicator: 'off'
                    name: outside
                  entities:
                    - entity: sensor.glances_proxmox_server_cpu_usage
                      name: CPU
                      severity:
                        - color: var(--label-badge-red)
                          from: 80
                          to: 100
                    - entity: sensor.glances_proxmox_server_memory_usage
                      name: RAM
                      severity:
                        - color: var(--label-badge-red)
                          from: 90
                          to: 100
                    - entity: sensor.glances_proxmox_server_disk_usage
                      name: STORAGE
                      severity:
                        - color: var(--label-badge-red)
                          from: 75
                          to: 100
                    - entity: sensor.proxmox_server_disk_usage_percentage
                      name: STORAGE - TOTAL
                      severity:
                        - color: var(--label-badge-red)
                          from: 75
                          to: 100
                    - entity: sensor.glances_proxmox_server_swap_usage
                      name: SWAP
                      severity:
                        - color: var(--label-badge-red)
                          from: 75
                          to: 100
                  style: |-
                    bar-card-value {
                      font-weight: bold;
                      margin-right: 10px;
                    }                            
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Resource Details</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 5px;
                      } 
                  cards:
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.glances_proxmox_server_memory_use
                      name: RAM Used
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.glances_proxmox_server_memory_free
                      name: RAM Free
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: row_border
                      variables:
                        margin_bottom: 2
                        margin_top: 2
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.glances_proxmox_server_swap_use
                      name: SWAP Used
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.glances_proxmox_server_swap_free
                      name: SWAP Free
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: row_border
                      variables:
                        margin_bottom: 2
                        margin_top: 2
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.proxmox_server_disk_used
                      name: Allocated VM Storage Used
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.proxmox_server_disk_free
                      name: Allocated VM Storage Free
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.proxmox_server_disk_space_remaining
                      name: Unallocated Storage Remaining
                      units: >-
                        <span style="font-size: 13px; font-weight: 200; color:
                        var(--secondary-text-color)">GB</span>
                - type: custom:button-card
                  name: >-
                    <div style="margin:5px 0px 0px
                    10px;text-align:left;">Info</div>
                  template: label_heading
                - type: custom:stack-in-card
                  card_mod:
                    style: |
                      ha-card {
                        border-radius: 5px;
                      } 
                  cards:
                    - type: custom:button-card
                      template:
                        - entity_card
                        - time_since_state
                      entity: sensor.proxmox_server_last_boot
                      name: Uptime
                      icon: mdi:clock
                      styles:
                        state:
                          - font-weight: normal
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.proxmox_server_containers_running
                      name: Containers Running
                      icon: mdi:server
                    - type: custom:button-card
                      template: entity_card
                      entity: sensor.proxmox_server_virtual_machines_running
                      name: Virtual Machine's Running
                      icon: mdi:server
  - title: NHL
    icon: mdi:hockey-puck
    path: sports_hockey
    theme: ios-dark-mode-blue-red
    type: masonry
    visible: false
    cards:
      - type: vertical-stack
        cards:
          - type: custom:stack-in-card
            card_mod:
              style: |
                ha-card {
                  border-radius: 15px;
                }          
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    template: header_back_home_button
                    styles:
                      icon:
                        - color: '#20864c'
                    tap_action:
                      action: navigate
                      navigation_path: /ehcah-mobile/home
                  - type: custom:button-card
                    template: header_label_page
                    name: NHL
              - type: custom:button-card
                template: row_space
                variables:
                  height: 5
          - type: custom:mod-card
            style:
              hui-vertical-stack-card$: |
                #root > * {
                  margin-right: 0px!important;
                  margin-left: 0px!important;
                }  
            card:
              type: vertical-stack
              cards:
                - type: custom:mod-card
                  card_mod:
                    style:
                      tabbed-card $: |
                        mwc-tab {
                          background: var(--ha-card-background, var(--card-background-color, white) );
                          border-color: black;
                          border-width: 2.5px;
                          border-top-left-radius: 20px;
                          border-top-right-radius: 20px;
                          border-style: solid;
                          overflow: hidden;
                          width: 50%;
                        }
                        mwc-tab[active] {
                          background: grey !important;
                        }
                  card:
                    type: custom:tabbed-card
                    styles:
                      '--mdc-theme-primary': white
                      '--mdc-tab-text-label-color-default': white
                      '--mdc-typography-button-font-size': 12px
                    tabs:
                      - attributes:
                          label: Dallas Stars
                          icon: mdi:hockey-sticks
                        card:
                          type: custom:mod-card
                          card_mod:
                            style:
                              tabbed-card $: |
                                mwc-tab {
                                  background: var(--ha-card-background, var(--card-background-color, white) );
                                  border-color: black;
                                  border-width: 2.5px;
                                  border-top-left-radius: 20px;
                                  border-top-right-radius: 20px;
                                  border-style: solid;
                                  overflow: hidden;
                                  width: 20%;
                                }
                                mwc-tab[active] {
                                  background: grey !important;
                                }            
                          card:
                            type: custom:tabbed-card
                            styles:
                              '--mdc-theme-primary': white
                              '--mdc-tab-text-label-color-default': white
                              '--mdc-typography-button-font-size': 12px
                            tabs:
                              - attributes:
                                  label: Home
                                card:
                                  type: custom:stack-in-card
                                  mode: vertical
                                  cards:
                                    - type: custom:decluttering-card
                                      template: stars_homePage
                              - attributes:
                                  label: Games
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Next Game
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_nextOpponent
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: custom:decluttering-card
                                              template: stars_nextArticle
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Scoring Leaders</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                
                                            - type: custom:decluttering-card
                                              template: stars_nextGameLeaders
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Goaltender Comparison</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                      
                                            - type: custom:decluttering-card
                                              template: stars_nextGameGoalies
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Injury Report</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_nextGameInjuries
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Last Three Games</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_nextLastThree
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Team Stats</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_nextTeamsStats
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Regular Season Series</h3>
                                              card_mod:
                                                style: >
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                                            
                                            - type: custom:decluttering-card
                                              template: stars_nextSeasonSeries
                                              variables:
                                                - entity: sensor.dallas_stars_next_game_summary
                                      - attributes:
                                          label: Last Game
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_lastOpponent
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: custom:decluttering-card
                                              template: stars_lastArticle
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Stars of the Game</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_lastGameStars
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Goaltending</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_lastGameGoalies
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Scoring Leaders</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                      
                                            - type: custom:decluttering-card
                                              template: stars_lastGameLeaders
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Scoring Summary</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_lastGameGoals
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_goals
                                            - type: markdown
                                              content: |
                                                <h3>Penalties</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                    
                                            - type: custom:decluttering-card
                                              template: stars_lastGamePenalties
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_penalties
                                            - type: markdown
                                              content: |
                                                <h3>Game Stats</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: stars_lastTeamsStats
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                                            - type: markdown
                                              content: |
                                                <h3>Regular Season Series</h3>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }                      
                                            - type: custom:decluttering-card
                                              template: stars_lastSeasonSeries
                                              variables:
                                                - entity: sensor.dallas_stars_last_game_summary
                              - attributes:
                                  label: Schedule
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Schedule
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_schedule
                                      - attributes:
                                          label: Results
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_results
                              - attributes:
                                  label: Players
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Stats
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Skaters</h2>      
                                            - type: custom:decluttering-card
                                              template: stars_playerStats
                                            - type: markdown
                                              content: |
                                                <h2>Goaltending</h2>
                                            - type: custom:decluttering-card
                                              template: stars_goalieStats
                                      - attributes:
                                          label: Roster
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Forwards</h2>  
                                            - type: custom:decluttering-card
                                              template: stars_players
                                              variables:
                                                - entity:
                                                    - sensor.dallas_stars_centers
                                                    - sensor.dallas_stars_left_wings
                                                    - sensor.dallas_stars_right_wings
                                                - attribute: entries
                                            - type: markdown
                                              content: |
                                                <h2>Defense</h2>  
                                            - type: custom:decluttering-card
                                              template: stars_players
                                              variables:
                                                - entity:
                                                    - sensor.dallas_stars_defense
                                                - attribute: entries
                                            - type: markdown
                                              content: |
                                                <h2>Goaltenders</h2>    
                                            - type: custom:decluttering-card
                                              template: stars_goalies
                                              variables:
                                                - entity:
                                                    - sensor.dallas_stars_goalies
                                                - attribute: entries
                                                - sort: x.experience.years
                                      - attributes:
                                          label: Prospects
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Forwards</h2>  
                                            - type: custom:decluttering-card
                                              template: stars_prospects_skaters
                                              variables:
                                                - entity: sensor.dallas_stars_prospects
                                                - attribute: forwards
                                                - sort: x.experience.years
                                            - type: markdown
                                              content: |
                                                <h2>Defense</h2>  
                                            - type: custom:decluttering-card
                                              template: stars_prospects_skaters
                                              variables:
                                                - entity: sensor.dallas_stars_prospects
                                                - attribute: defensemen
                                            - type: markdown
                                              content: |
                                                <h2>Goalies</h2>  
                                            - type: custom:decluttering-card
                                              template: stars_prospects_goalies
                                              variables:
                                                - entity: sensor.dallas_stars_prospects
                                                - attribute: goalies
                              - attributes:
                                  label: News
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Headlines
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_news
                                      - attributes:
                                          label: Injuries
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_injuries
                                      - attributes:
                                          label: Moves
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: stars_transactions
                      - attributes:
                          label: NHL
                          icon: mdi:hockey-puck
                        card:
                          type: custom:mod-card
                          card_mod:
                            style:
                              tabbed-card $: |
                                mwc-tab {
                                  background: var(--ha-card-background, var(--card-background-color, white) );
                                  border-color: black;
                                  border-width: 2.5px;
                                  border-top-left-radius: 20px;
                                  border-top-right-radius: 20px;
                                  border-style: solid;
                                  overflow: hidden;
                                  width: 15%;
                                }
                                mwc-tab[active] {
                                  background: silver !important;
                                }            
                          card:
                            type: custom:tabbed-card
                            styles:
                              '--mdc-theme-primary': white
                              '--mdc-tab-text-label-color-default': silver
                              '--mdc-typography-button-font-size': 12px
                            tabs:
                              - attributes:
                                  label: Standings
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 15%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Division
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Eastern Atlantic
                                                - entity: sensor.nhl_east_atlantic
                                                - attribute: entries
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Eastern Metropolitan
                                                - entity: sensor.nhl_east_metropolitan
                                                - attribute: entries
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: West Central
                                                - entity: sensor.nhl_west_central
                                                - attribute: entries
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: West Pacific
                                                - entity: sensor.nhl_west_pacific
                                                - attribute: entries
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                      - attributes:
                                          label: Conf
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Eastern
                                                - entity: sensor.nhl_east_*
                                                - attribute: entries
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Western
                                                - entity: sensor.nhl_west_*
                                                - attribute: entries
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                    - sensor.nhl_wildcard
                                                    - sensor.nhl_wildcard_standings
                                      - attributes:
                                          label: League
                                        card:
                                          type: custom:decluttering-card
                                          template: nhl_settings
                                          variables:
                                            - title: League
                                            - entity: sensor.nhl_*_*
                                            - attribute: entries
                                            - sort: >-
                                                x.stats.find(y=>y.shortDisplayName ==
                                                'PTS').value
                                            - excluded_entities:
                                                - sensor.nhl_starting_goalies
                                                - sensor.nhl_wildcard
                                                - sensor.nhl_wildcard_standings
                                      - attributes:
                                          label: Playoffs
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Eastern Conference</h2>
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Atlantic Leaders
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: east_atlantic_top
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Metropolitan Leaders
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: east_metropolitan_top
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Wildcards
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: east_wildcard
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: In The Hunt
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: east_hunt
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Eliminated
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: east_eliminated
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: markdown
                                              content: |
                                                <h2>Western Conference</h2>
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Central Leaders
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: west_central_top
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Pacific Leaders
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: west_pacific_top
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Wildcards
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: west_wildcard
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: In The Hunt
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: west_hunt
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                                            - type: custom:decluttering-card
                                              template: nhl_settings
                                              variables:
                                                - title: Eliminated
                                                - entity: sensor.nhl_wildcard_standings
                                                - attribute: west_eliminated
                                                - excluded_entities:
                                                    - sensor.nhl_starting_goalies
                                                - sort: >-
                                                    x.stats.find(y=>y.shortDisplayName ==
                                                    'PTS').value
                              - attributes:
                                  label: Schedule
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: visible;
                                          width: 15%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Schedule
                                        card:
                                          type: custom:decluttering-card
                                          template: nhl_schedule
                                          variables:
                                            - label: Schedule
                                            - entity: sensor.schedule_nhl_regular_season
                                            - attribute: events
                                      - attributes:
                                          label: Scores
                                        card:
                                          type: custom:decluttering-card
                                          template: nhl_results
                                          variables:
                                            - label: Scores
                                            - entity: sensor.scores_nhl_regular_season
                                            - attribute: events
                              - attributes:
                                  label: Leaders
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 50%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Skaters
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Skating Leaders</h2>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  }
                                            - type: custom:decluttering-card
                                              template: nhl_pointsLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_goalsLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_assistsLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_plusMinusLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_timeOnIceLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_penaltyMinutesLeaders
                                      - attributes:
                                          label: Goaltending
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: markdown
                                              content: |
                                                <h2>Goaltending Leaders</h2>
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    background-color: transparent;
                                                    color: white;
                                                    font-size: 15px;
                                                    max-width: 400px;
                                                    text-align: center;
                                                  } 
                                            - type: custom:decluttering-card
                                              template: nhl_goalsAgainstAverageLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_savePercentageLeaders
                                            - type: custom:decluttering-card
                                              template: nhl_winsLeaders
                              - attributes:
                                  label: News
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Headlines
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: nhl_news
                                      - attributes:
                                          label: Injuries
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: nhl_injuries
                                      - attributes:
                                          label: Moves
                                        card:
                                          type: custom:stack-in-card
                                          mode: vertical
                                          cards:
                                            - type: custom:decluttering-card
                                              template: nhl_transactions
                              - attributes:
                                  label: Live
                                card:
                                  type: custom:mod-card
                                  card_mod:
                                    style:
                                      tabbed-card $: |
                                        mwc-tab {
                                          background: var(--ha-card-background, var(--card-background-color, white) );
                                          border-color: black;
                                          border-width: 2.5px;
                                          border-top-left-radius: 20px;
                                          border-top-right-radius: 20px;
                                          border-style: solid;
                                          overflow: hidden;
                                          width: 33%;
                                        }
                                        mwc-tab[active] {
                                          background: silver !important;
                                        }            
                                  card:
                                    type: custom:tabbed-card
                                    styles:
                                      '--mdc-theme-primary': white
                                      '--mdc-tab-text-label-color-default': silver
                                      '--mdc-typography-button-font-size': 12px
                                    tabs:
                                      - attributes:
                                          label: Upcoming
                                        card:
                                          type: custom:decluttering-card
                                          template: team_cards
                                          variables:
                                            - sport: NHL
                                            - status: PRE
                                      - attributes:
                                          label: Live
                                        card:
                                          type: custom:decluttering-card
                                          template: team_cards
                                          variables:
                                            - sport: NHL
                                            - status: IN
                                      - attributes:
                                          label: Completed
                                        card:
                                          type: custom:decluttering-card
                                          template: team_cards
                                          variables:
                                            - sport: NHL
                                            - status: POST
